{"version":3,"file":"static/js/149.510c677b.chunk.js","mappings":"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","sources":["WidgetLifecycle-munish.jsx","components/DragAndDrop/DragAndDrop.jsx","pages/revisionFloat/dataHelpers.js","pages/revisionFloat/revisionFloatToolbarNativeCta.jsx","utils/getUserEmail.js","pages/revisionFloat/revisionFloat.jsx","index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\";\r\nimport useToast from \"./hooks/useToast\";\r\nimport useDroppableArea from \"./hooks/useDroppableArea\";\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport store from \"./store\"; // ‚úÖ Import Redux store directly\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] üìå Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ‚úÖ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ‚õî Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ‚úÖ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] üîÑ `onRefresh` triggered!\");\r\n      // ‚úÖ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ‚ö†Ô∏è `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] üöÄ Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ‚ùå Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ‚úÖ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] üîÑ `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ‚úÖ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ‚úÖ Runs only once\r\n\r\n  return loading ? <Loader/> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import React, { useEffect } from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const {  handleDrop } = useDroppableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      // console.log(\"Selected objects:\", selectedObjects);\r\n      // console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"droppable-container mt-4\"\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","// pages/revisionFloat/dataHelpers.js\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CheckmarkCell = () => (\r\n  <FontAwesomeIcon icon={faCheck} className=\"green-icon\" />\r\n);\r\n\r\nconst CrossmarkCell = () => (\r\n  <FontAwesomeIcon icon={faXmark} className=\"cross-icon\" />\r\n);\r\n\r\nexport const getCardData = (cardData) => {\r\n  if (!cardData || typeof cardData !== \"object\") {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    title: cardData.Title || \"N/A\",\r\n    type: cardData.Type || \"N/A\",\r\n    \"Maturity State\": cardData[\"Maturity State\"] || \"N/A\",\r\n    owner: cardData.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": cardData[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: cardData.Description || \"N/A\",\r\n    \"Dropped Revision\": cardData[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": cardData[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": cardData[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      cardData.imageURL ||\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/snresources/images/icons/large/I_VPMNavProduct108x144.png\", // You might want a placeholder image URL\r\n    ...(cardData.Type !== \"Document\" && {\r\n      EIN: cardData.EIN || \"N/A\",\r\n      \"CAD Format\": cardData[\"CAD Format\"] || \"N/A\",\r\n    }),\r\n  };\r\n};\r\n\r\nexport const getTableData = (parentDetails, cardData) => {\r\n  if (!parentDetails || !Array.isArray(parentDetails.data)) {\r\n    console.warn(\"[getTableData] ‚ö†Ô∏è No parent details available. Returning empty array.\");\r\n    return [];\r\n  }\r\n  return parentDetails.data.map((parent) => ({\r\n    EIN: parent.EIN || \"N/A\",\r\n    Title: parent.Title || \"N/A\",\r\n    Description: parent.Description || \"N/A\",\r\n    Type: parent.Type || \"N/A\",\r\n    Revision: parent[\"Dropped Revision\"] || \"N/A\",\r\n    \"Dropped Revision ID\": parent[\"Dropped Revision ID\"] || \"N/A\",\r\n    \"Connected Child Revision\": parent.connectedChildRev || \"N/A\",\r\n    \"Latest child connected\": parent.toBeChildRevConnected ? false : true,\r\n    \"To-Be child connected\": parent.toBeChildRevConnected || \"-\",\r\n    State: parent[\"Maturity State\"] || \"N/A\",\r\n    Owner: parent.Owner || \"N/A\",\r\n    \"CAD Format\": parent[\"CAD Format\"] || \"N/A\",\r\n    Collabspace: parent[\"Collaborative Space Title\"] || \"N/A\",\r\n\r\n    // Add relationship field if the type is Document\r\n    ...(cardData?.Type === \"Document\" && {\r\n      relationship: parent.relationship || \"N/A\",\r\n    }),\r\n  }));\r\n};\r\n\r\nexport const tableColumns = [\r\n  {\r\n    accessorKey: \"EIN\",\r\n    header: \"EIN\",\r\n    columnPinning: true,\r\n  },\r\n  { accessorKey: \"Title\", header: \"Title\" },\r\n  { accessorKey: \"Description\", header: \"Description\" },\r\n  { accessorKey: \"Type\", header: \"Type\" },\r\n  { accessorKey: \"Revision\", header: \"Revision\" },\r\n  {\r\n    accessorKey: \"Connected Child Revision\",\r\n    header: \"Connected Revision\",\r\n  },\r\n  {\r\n    accessorKey: \"Latest child connected\",\r\n    header: \"latest Revision Connected\",\r\n    cell: ({ cell }) => {\r\n      const value = cell.getValue();\r\n      // Render a checkmark if true, a cross if false\r\n      return value ? <CheckmarkCell /> : <CrossmarkCell />;\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"To-Be child connected\",\r\n    header: \"Revision to-be Connected\",\r\n  },\r\n  {\r\n    accessorKey: \"relationship\",\r\n    header: \"Relationship\",\r\n  },\r\n  { accessorKey: \"State\", header: \"State\" },\r\n  { accessorKey: \"Owner\", header: \"Owner\" },\r\n  { accessorKey: \"CAD Format\", header: \"CAD Format\" },\r\n  { accessorKey: \"Collabspace\", header: \"Collabspace\" },\r\n];\r\n","import React from \"react\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useRevisions from \"../../hooks/useRevisions\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { MSG_NO_ROWS, MSG_NO_REPLACE } from \"../../utils/toastMessages\";\r\nimport getUserEmail from \"../../utils/getUserEmail\";\r\nimport WidgetLifecycle from \"../../WidgetLifecycle-munish\";\r\n\r\n\r\nconst RevisionFloatToolbarNativeCta = () => {\r\n  const { replaceRevisions } = useRevisions();\r\n  const { showErrorToast } = useToast();\r\n  // Access relevant data from Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n\r\n  const selectedTableRows = useSelector(\r\n    (state) => state.droppedObject.selectedTableRows\r\n  ); // Assuming you're storing selected rows in Redux\r\n\r\n  // console.log(\"selectedTableRows\", selectedTableRows);\r\n\r\n  const handleReplace = async () => {\r\n    if (!selectedTableRows || selectedTableRows.length === 0) {\r\n      showErrorToast(MSG_NO_ROWS);\r\n      return;\r\n    }\r\n\r\n    // Get the parentDetails from droppedObjectData\r\n    const allParents = droppedObjectData.parentDetails?.data;\r\n    if (!allParents || allParents.length === 0) {\r\n      showErrorToast(\"No parent details available.\");\r\n      return;\r\n    }\r\n\r\n    // Filter selected rows where 'To-Be child connected' is not \"-\"\r\n    const selectedRows = selectedTableRows.filter(\r\n      (row) => row[\"To-Be child connected\"] !== \"-\"\r\n    );\r\n\r\n    if (selectedRows.length === 0) {\r\n      showErrorToast(MSG_NO_REPLACE);\r\n      return;\r\n    }\r\n\r\n    // Map selectedRows to their corresponding parent objects\r\n    const selectedParents = selectedRows.map((row) => {\r\n      return allParents.find(\r\n        (parent) => parent[\"Dropped Revision ID\"] === row[\"Dropped Revision ID\"]\r\n      );\r\n    });\r\n\r\n    // Check if any matching parent is not found\r\n    if (selectedParents.some((parent) => !parent)) {\r\n      showErrorToast(\"Could not find all corresponding parent details.\");\r\n      return;\r\n    }\r\n\r\n    const userEmail = await getUserEmail();\r\n    if (!userEmail) {\r\n      throw new Error(\"User email not found.\");\r\n    }\r\n\r\n    const droppedData = droppedObjectData.cardData;\r\n\r\n    // Call the replaceRevisions function from useRevisions hook\r\n    const result = await replaceRevisions(\r\n      selectedParents,\r\n      droppedData,\r\n      userEmail\r\n    );\r\n    \r\n\r\n    if (result.success) {\r\n      // Handle success (e.g., show a success message, refetch data, etc.)\r\n    } else {\r\n      // Handle error (e.g., show an error message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex cta-absolute\">\r\n      <CustomButton\r\n        variant=\"outline-secondary\"\r\n        className=\"m-2\"\r\n        size=\"lg\"\r\n        text=\"Replace\"\r\n        onClick={handleReplace}\r\n      />\r\n      {/* <WidgetLifecycle /> */}\r\n      \r\n\r\n      {/* <CustomButton\r\n        variant=\"outline-secondary\"\r\n        className=\"m-2\"\r\n        size=\"lg\"\r\n        text=\" Select items in my Collaborative Space\"\r\n        // onClick={\"\"}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RevisionFloatToolbarNativeCta;\r\n","// utils/getUserEmail.js\r\nimport { loadPlatformAPI } from \"./helpers\"; \r\n\r\nexport default async function getUserEmail() {\r\n  try {\r\n    const PlatformAPI = await loadPlatformAPI();\r\n    const user = await PlatformAPI.getUser();\r\n\r\n    return user.email;\r\n  } catch (error) {\r\n    console.error(\"Error getting user email:\", error);\r\n    return null; // Or throw the error, depending on how you want to handle it\r\n  }\r\n}","import React, { useEffect, useMemo, useRef, useCallback } from \"react\";\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\r\nimport DragAndDropComponent from \"../../components/DragAndDrop/DragAndDrop\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ReusableTable from \"../../components/Table/Table\";\r\nimport {\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport { getCardData, getTableData, tableColumns } from \"./dataHelpers\";\r\nimport RevisionFloatToolbarNativeCta from \"./revisionFloatToolbarNativeCta\";\r\n\r\nconst RevisionFloat = () => {\r\n  const { initializeDroppableArea, loading } = useDroppableArea();\r\n  const tableKey = useRef(0); // ‚úÖ Use useRef instead of useState\r\n  const dispatch = useDispatch();\r\n\r\n  // console.log(\"[RevisionFloat] üéØ Component Rendered\");\r\n  // ‚úÖ Use shallowEqual to prevent unnecessary re-renders\r\n  const { cardData, parentDetails, isDropped, initialDraggedData } =\r\n    useSelector(\r\n      (state) => ({\r\n        cardData: state.droppedObject.droppedObjectData.cardData,\r\n        parentDetails: state.droppedObject.droppedObjectData.parentDetails,\r\n        isDropped: state.droppedObject.isDropped,\r\n        initialDraggedData:\r\n          state.droppedObject.droppedObjectData.initialDraggedData,\r\n      }),\r\n      shallowEqual // ‚úÖ Ensures Redux only re-renders when values actually change\r\n    );\r\n  // console.log(\"[RevisionFloat] üè™ Redux State - cardData:\", cardData);\r\n  // console.log(\"[RevisionFloat] üè™ Redux State - parentDetails:\", parentDetails);\r\n\r\n  // ‚úÖ Ensure droppable area is only initialized **once**\r\n  const hasInitializedDroppable = useRef(false);\r\n  useEffect(() => {\r\n    if (!hasInitializedDroppable.current) {\r\n      // console.log(\"[RevisionFloat] üîÑ Initializing droppable area...\");\r\n      initializeDroppableArea();\r\n      hasInitializedDroppable.current = true; // ‚úÖ Ensure it runs only once\r\n    }\r\n  }, [initializeDroppableArea]);\r\n\r\n  // useEffect(() => {\r\n  //   if (!isDropped) {\r\n  //     initializeDroppableArea();\r\n  //   }\r\n  // }, [isDropped, initializeDroppableArea]);\r\n\r\n  // ‚úÖ Memoize tableData (Only re-run if parentDetails change)\r\n  const optimizedTableData = useMemo(\r\n    () => getTableData(parentDetails, cardData),\r\n    [parentDetails, cardData]\r\n  );\r\n\r\n  // ‚úÖ Prevent unnecessary re-renders by checking for data changes\r\n  useEffect(() => {\r\n    if (optimizedTableData.length > 0) {\r\n      console.log(\r\n        \"[RevisionFloat] üìä optimizedTableData Updated:\",\r\n        optimizedTableData\r\n      );\r\n    }\r\n  }, [optimizedTableData]);\r\n\r\n  // ‚úÖ Memoize cardData (Avoid recalculations unless cardData changes)\r\n  const optimizedCardData = useMemo(() => getCardData(cardData), [cardData]);\r\n\r\n  // ‚úÖ Reset state only when needed\r\n  const handleHomeClick = useCallback(() => {\r\n    // console.log(\r\n    //   \"[handleHomeClick] üè† Home icon clicked. Resetting droppable area...\"\r\n    // );\r\n\r\n    if (!isDropped) {\r\n      // console.log(\r\n      //   \"[handleHomeClick] üö´ Already reset. Skipping unnecessary updates.\"\r\n      // );\r\n      return;\r\n    }\r\n\r\n    // ‚úÖ Only reinitialize if necessary\r\n    if (!initialDraggedData.length) {\r\n      // console.log(\"[handleHomeClick] üîÑ Reinitializing droppable area...\");\r\n      initializeDroppableArea();\r\n    }\r\n\r\n    // ‚úÖ Reset Redux state only if needed\r\n    dispatch(setIsDropped(false));\r\n\r\n    if (cardData || parentDetails.length || initialDraggedData.length) {\r\n      console.log(\"[handleHomeClick] üóë Dispatching reset action...\");\r\n      dispatch(\r\n        setDroppedObjectData({\r\n          cardData: {},\r\n          parentDetails: [],\r\n          initialDraggedData: [],\r\n        })\r\n      );\r\n    } else {\r\n      // console.log(\r\n      //   \"[handleHomeClick] üö´ State already cleared. Skipping dispatch.\"\r\n      // );\r\n    }\r\n\r\n    // console.log(\"[handleHomeClick] ‚úÖ Reset complete.\");\r\n  }, [\r\n    dispatch,\r\n    initializeDroppableArea,\r\n    isDropped,\r\n    initialDraggedData,\r\n    cardData,\r\n    parentDetails,\r\n  ]);\r\n\r\n  // ‚úÖ Memoize filtered columns\r\n  const filteredColumns = useMemo(() => {\r\n    if (cardData?.Type === \"Document\") {\r\n      return tableColumns;\r\n    } else {\r\n      return tableColumns.filter(\r\n        (column) => column.accessorKey !== \"relationship\"\r\n      );\r\n    }\r\n  }, [cardData]);\r\n  // console.log(\"[RevisionFloat] ‚úÖ Component Updated\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"[RevisionFloat] State Changes:\", {\r\n      loading,\r\n      isDropped,\r\n    });\r\n  }, [loading, isDropped]);\r\n\r\n  return (\r\n    <>\r\n      {!isDropped && !loading && <DragAndDropComponent />}\r\n      {isDropped && (\r\n        <>\r\n          {loading && <Loader />}\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex\">\r\n              <div className=\"p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {optimizedCardData && (\r\n                <CardWithDragAndDrop data={optimizedCardData} />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {optimizedTableData.length > 0 ? (\r\n            <div className=\"wrapper-cta\">\r\n              <RevisionFloatToolbarNativeCta />\r\n              <ReusableTable\r\n                key={tableKey.current}\r\n                data={optimizedTableData}\r\n                columns={filteredColumns}\r\n                widgetType=\"Revision_FLoat_Widget\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-data-banner\">No Parent object(s) found</div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevisionFloat;\r\n","import React from \"react\";\r\nimport ReactDOM, { createRoot } from \"react-dom/client\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport store from \"./store\";\r\nimport RevisionFloat from \"./pages/revisionFloat/revisionFloat\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle-munish\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\n\r\n\r\ncreateRoot(document.getElementById(\"root\")).render(\r\n  <React.StrictMode>\r\n  <Provider store={store}>\r\n    <WidgetLifecycle />\r\n    <RevisionFloat />\r\n    <ToastContainer />\r\n  </Provider>\r\n</React.StrictMode>\r\n);\r\n"],"names":["WidgetLifecycle","handleDrop","useDroppableArea","showSuccessToast","showErrorToast","useToast","loading","setLoading","useState","useEffect","window","widget","console","trace","addEvent","async","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","includes","isAutoTriggeredRefresh","warn","removeItem","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","data","items","length","error","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","_jsx","Loader","DragAndDropComponent","performSearch","useInterComSearch","_Fragment","children","_jsxs","className","Image","style","width","height","src","alt","SearchInput","onSearch","searchText","title","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","id","objectId","objectType","CheckmarkCell","FontAwesomeIcon","icon","faCheck","CrossmarkCell","faXmark","tableColumns","accessorKey","header","columnPinning","cell","_ref","getValue","RevisionFloatToolbarNativeCta","replaceRevisions","useRevisions","useSelector","state","selectedTableRows","CustomButton","variant","size","text","onClick","_droppedObjectData$pa","MSG_NO_ROWS","allParents","parentDetails","selectedRows","filter","row","MSG_NO_REPLACE","selectedParents","map","find","parent","userEmail","PlatformAPI","loadPlatformAPI","getUser","email","getUserEmail","droppedData","cardData","success","RevisionFloat","initializeDroppableArea","tableKey","useRef","dispatch","useDispatch","isDropped","shallowEqual","hasInitializedDroppable","current","optimizedTableData","useMemo","getTableData","Array","isArray","_objectSpread","EIN","Title","Description","Type","Revision","connectedChildRev","toBeChildRevConnected","State","Owner","Collabspace","relationship","log","optimizedCardData","type","owner","imageURL","getCardData","handleHomeClick","useCallback","setIsDropped","setDroppedObjectData","filteredColumns","column","CardWithDragAndDrop","ReusableTable","columns","widgetType","createRoot","document","getElementById","render","React","Provider","ToastContainer"],"sourceRoot":""}