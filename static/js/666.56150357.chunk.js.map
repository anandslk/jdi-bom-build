{"version":3,"file":"static/js/666.56150357.chunk.js","mappings":"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","sources":["components/DragAndDrop/DragAndDrop.jsx","components/Loader/Loader.js","components/SearchInput/SearchInput.jsx","hooks/useRevisions.js","hooks/useDroppableArea.js","hooks/useInterComSearch.js","hooks/useToast.js","components/Confirmation.jsx","components/LoadingScreen.jsx","components/Dialog.jsx","hooks/useConfirmations.js","components/DropdownSelect.jsx","pages/index.jsx","slices/apis/types.js","WidgetLifecycle-munish.jsx","components/InitializeWidget.jsx","hooks/useInitializeDropableArea.js","components/DragAndDrop.jsx","pages/jdiBom/index.jsx","providers/index.jsx","services/api/refreshService.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const {  handleDrop } = useDroppableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      // console.log(\"Selected objects:\", selectedObjects);\r\n      // console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"droppable-container mt-4\"\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport \"./SearchInput.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SearchInput = ({ onSearch, disabled }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    const newSearchText = event.target.value;\r\n    setSearchText(newSearchText);\r\n  };\r\n\r\n  const handleInputKeyPress = (event) => {\r\n    if (event.key === \"Enter\" && searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setSearchText(\"\");\r\n    inputRef.current.focus(); // Keep focus on the input after clearing\r\n  };\r\n  const handleSearchIconClick = () => {\r\n    if (searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-content-container d-flex align-items-center\">\r\n      <FontAwesomeIcon\r\n        icon={faMagnifyingGlass}\r\n        onClick={handleSearchIconClick}\r\n        className=\"search-icon\"\r\n      />\r\n\r\n      <span className=\"ms-4 drag-and-drop-text flex-grow-1\">\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            value={searchText}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputKeyPress}\r\n            placeholder=\"Search...\"\r\n            disabled={disabled}\r\n          />\r\n          {searchText && (\r\n            <Button\r\n              variant=\"btn-link\"\r\n              onClick={handleClearClick}\r\n              className=\"clear-button\"\r\n            >\r\n              ✖\r\n            </Button>\r\n          )}\r\n        </InputGroup>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import useToast from \"../hooks/useToast\";\r\n\r\nimport api from \"../utils/api\"; // Import axios instance\r\nimport { MSG_REPLACE_SUCCESS, MSG_REPLACE_ERROR } from \"../utils/toastMessages\";\r\n\r\nconst useRevisions = () => {\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n  const fetchRevisionsAndParents = async (\r\n    objectId,\r\n    objectType,\r\n    relativePath\r\n  ) => {\r\n    if (!relativePath) {\r\n      console.error(\"[Fetch Revisions] ❌ Missing relative path.\");\r\n      return;\r\n    }\r\n\r\n    const parentURL = `/revFloat/getParents`;\r\n\r\n    try {\r\n      // Use the axios instance to make the POST request\r\n      const response = await api.post(parentURL, {\r\n        data: {\r\n          id: objectId,\r\n          type: objectType,\r\n          relativePath: relativePath,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const parentDetails = response.data;\r\n\r\n        // 🚀 Return data instead of dispatching\r\n        return parentDetails;\r\n      } else {\r\n        throw new Error(\r\n          `[Fetch Revisions] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[Fetch Revisions] ❌ Error occurred:\", error);\r\n      return null; // Ensure it returns null on error\r\n    }\r\n  };\r\n\r\n  const replaceRevisions = async (selectedParents, droppedData, userEmail) => {\r\n    const parentURL = `/revFloat/floatRevisions`; // Use relative path for axios\r\n\r\n    try {\r\n      // Make the POST request to the replacement API\r\n      const response = await api.post(parentURL, {\r\n        SelectedParents: selectedParents,\r\n        DroppedData: droppedData,\r\n        userEmail: userEmail,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Handle successful replacement\r\n        console.log(\"Replacement successful:\", response.data);\r\n        showSuccessToast(MSG_REPLACE_SUCCESS); // Show success toast\r\n        // You might want to update the Redux store or refetch data here\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(\r\n          `[Replacement API] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during replacement:\", error);\r\n      showErrorToast(MSG_REPLACE_ERROR); // Show error toast\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  return { fetchRevisionsAndParents, replaceRevisions };\r\n};\r\n\r\nexport default useRevisions;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport {\r\n  setIsDropped as setIsDroppedAction,\r\n  setLoading,\r\n} from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\nimport useRevisions from \"./useRevisions\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  // fetchCsrfTokenAndDependencies as fetchCsrfService,\r\n  getDroppedObjectDetails,\r\n  // fetchCardOwnerDetails as fetchCardOwnerDetailsService,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\n\r\nconst useDroppableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { fetchRevisionsAndParents } = useRevisions();\r\n  const dispatch = useDispatch();\r\n  // ✅ Use `useSelector` to get the latest values from Redux\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const loading = useSelector((state) => state.droppedObject.loading);\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        console.warn(\r\n          \"objectDetailsResult....................\",\r\n          objectDetailsResult\r\n        );\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Fetch Revisions and Parents in parallel\r\n          const relativePath = objectDetailsResult.data.cardData.relativePath;\r\n          const [revisionParentData] = await Promise.all([\r\n            fetchRevisionsAndParents(\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              relativePath\r\n            ),\r\n          ]);\r\n          // Dispatch all updates together (batching updates)\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n              parentDetails: revisionParentData || [],\r\n            })\r\n          );\r\n          console.log(\"[fetchObjectDetails] ✅ Redux store updated.\");\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        console.log(\"[fetchObjectDetails] 🏁 Ensuring loading is reset.\");\r\n        dispatch(setLoading(false));\r\n      }\r\n    },\r\n    [dispatch, fetchRevisionsAndParents, showErrorToast]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          // Validate object type\r\n          const objectType = dataItems[0]?.objectType;\r\n          const validTypes = [\"VPMReference\", \"Document\", \"Raw_Material\"];\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n            return;\r\n          }\r\n          dispatch(setIsDroppedAction(true));\r\n          // ✅ Ensure we only start loading if another request isn't running\r\n          console.log(\"[handleDrop] 🔄 Force setting `loading = true`...\");\r\n          dispatch(setLoading(false));\r\n          setTimeout(() => dispatch(setLoading(true)), 0);\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        dispatch(setLoading(false)); // ✅ Reset loading in Redux\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n      // finally {\r\n      //   const latestLoadingState = store.getState().droppedObject.loading;\r\n      //   if (latestLoadingState) {\r\n      //     console.log(\"[handleDrop] ✅ Resetting `loading = false`...\");\r\n      //     setLoading(false);\r\n      //   } else {\r\n      //     console.log(\"[handleDrop] ⏳ `loading` is already false. Skipping reset.\");\r\n      //   }\r\n      // }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n\r\n  const { data: droppableContainer, isLoading } = useQuery({\r\n    queryKey: [\"droppableContainer\"],\r\n    queryFn: () =>\r\n      new Promise((resolve) => {\r\n        const interval = setInterval(() => {\r\n          const container = document.querySelector(\".droppable-container\");\r\n          if (container) {\r\n            clearInterval(interval);\r\n            resolve(container);\r\n          }\r\n        }, 100); // check every 100ms\r\n      }),\r\n    // Disable refetching on window focus (optional)\r\n    // refetchOnWindowFocus: false,\r\n    // We want this query to run right away.\r\n    // enabled: true,\r\n\r\n    // Once the element is found, execute the initialization logic.\r\n    // onSuccess: (container) => {\r\n    //   // Only reset isDropped if it's not already true.\r\n    //   if (!isDropped) {\r\n    //     console.log(\r\n    //       \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n    //     );\r\n    //     dispatch(setIsDroppedAction(false));\r\n    //   } else {\r\n    //     console.log(\r\n    //       \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n    //     );\r\n    //   }\r\n    //   // Call your custom initialization function passing the container and other params.\r\n    //   initDroppable(container, handleDrop, dispatch, showErrorToast);\r\n    // },\r\n  });\r\n\r\n\r\n  console.log('droppableContainer.....................', droppableContainer)\r\n\r\n  useQuery({\r\n    queryKey: [\"initdrop\"],\r\n    queryFn: () => {\r\n      // Only reset isDropped if it's not already true.\r\n      if (!isDropped) {\r\n        console.log(\r\n          \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n        );\r\n        dispatch(setIsDroppedAction(false));\r\n      } else {\r\n        console.log(\r\n          \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n        );\r\n      }\r\n      // Call your custom initialization function passing the container and other params.\r\n      initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n    },\r\n\r\n    enabled: droppableContainer,\r\n  });\r\n\r\n  // // Initialize droppable area\r\n  // const initializeDroppableArea = useCallback(() => {\r\n  //   // ✅ Only reset isDropped if it's currently false (prevent overwriting a valid drop)\r\n  //   if (!isDropped) {\r\n  //     console.log(\r\n  //       \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n  //     );\r\n  //     dispatch(setIsDroppedAction(false)); // ✅ Reset only if necessary\r\n  //   } else {\r\n  //     console.log(\r\n  //       \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n  //     );\r\n  //   }\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     const droppableContainer = document.querySelector(\".droppable-container\");\r\n  //     if (droppableContainer) {\r\n  //       clearInterval(interval);\r\n  //       initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n  //     }\r\n  //   }, 100); // Check every 100ms\r\n\r\n  //   return () => clearInterval(interval); // Cleanup interval on unmount\r\n  // }, [handleDrop, dispatch]);\r\n\r\n  //  const datas =  useQuery({\r\n  //   queryKey:[\"getObjects\"],\r\n  //   queryFn:initializeDroppableArea,\r\n\r\n  // })\r\n\r\n  // console.warn('vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv', datas)\r\n\r\n  // const hasInitializedDroppable = useRef(false);\r\n\r\n  // // // ✅ Memoized function to prevent re-creation\r\n  // const initDropp = useCallback(() => {\r\n  //   if (!hasInitializedDroppable.current) {\r\n  //     initializeDroppableArea();\r\n  //     hasInitializedDroppable.current = true;\r\n  //   }\r\n  // }, [initializeDroppableArea]);\r\n\r\n  // // // ✅ Use a single effect to optimize performance\r\n  // useEffect(() => {\r\n  //   initDropp();\r\n\r\n  //   console.info(\"[RevisionFloat] State Changes:\", { isDropped });\r\n  // }, [initDroppable, isDropped]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDroppableArea;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { loadInterCom } from \"../utils/helpers\";\r\n\r\nconst useInterComSearch = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [InterCom, setInterCom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // console.log(\"[useInterComSearch] Loading InterCom module\");\r\n        const interComInstance = await loadInterCom();\r\n        setInterCom(interComInstance);\r\n      } catch (error) {\r\n        console.error(\r\n          \"[useInterComSearch] Error initializing InterCom:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        // console.log(\"[useInterComSearch] Socket disconnected\");\r\n      }\r\n    };\r\n  }, [socket]);\r\n\r\n  const performSearch = useCallback(\r\n    (searchText, searchOpts, onObjectsSelected) => {\r\n      // Check if InterCom is loaded\r\n      if (!InterCom) {\r\n        console.warn(\"[useInterComSearch] InterCom is not loaded yet.\");\r\n        return;\r\n      }\r\n\r\n      const socketName =\r\n        \"socket\" + new Date().toISOString().replace(/[-:]/g, \"\");\r\n      const newSocket = new InterCom.Socket(socketName, {\r\n        dispatchRetryInternal: 0,\r\n      });\r\n      newSocket.subscribeServer(\"SearchComServer\");\r\n      setSocket(newSocket);\r\n\r\n      console.log(\r\n        \"[useInterComSearch] performSearch called with:\",\r\n        searchText,\r\n        searchOpts\r\n      );\r\n\r\n      const widgetId = window.widget?.id;\r\n      // console.log(\"[useInterComSearch] widget id:\", widgetId);\r\n\r\n      const finalSearchOpts = {\r\n        ...searchOpts,\r\n        widget_id: widgetId,\r\n        app_socket_id: socketName,\r\n        default_search_criteria: searchText,\r\n      };\r\n\r\n      // Register the search context (if needed)\r\n      console.log(\r\n        \"[useInterComSearch] Dispatching RegisterContext event with:\",\r\n        finalSearchOpts\r\n      );\r\n      newSocket.dispatchEvent(\"RegisterContext\", finalSearchOpts);\r\n\r\n      // Dispatch the search event\r\n      // console.log(\r\n      //   \"[useInterComSearch] Dispatching InContextSearch event with:\",\r\n      //   finalSearchOpts\r\n      // );\r\n      newSocket.dispatchEvent(\"InContextSearch\", finalSearchOpts);\r\n\r\n      // Add a listener for search results\r\n      const handleSearchResults = (data) => {\r\n        console.log(\"[useInterComSearch] Search results received:\", data);\r\n        if (onObjectsSelected) {\r\n          onObjectsSelected(data);\r\n        }\r\n      };\r\n\r\n      console.log(\r\n        \"[useInterComSearch] Adding listener for Selected_Objects_search\"\r\n      );\r\n      newSocket.addListener(\"Selected_Objects_search\", handleSearchResults);\r\n    },\r\n    [InterCom]\r\n  );\r\n\r\n  return {\r\n    performSearch,\r\n  };\r\n};\r\n\r\nexport default useInterComSearch;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import { Box, Chip, Stack, Typography } from \"@mui/material\";\n\n\nexport const ConfirmationScreen = ({\n  parentParts,\n  sourceOrg,\n  selectedItems,\n}) => {\n  return (\n    <>\n      {/* <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        opacity: stage === \"assigning\" ? 0.6 : 1,\n      }}\n    >\n      <Stack spacing={3}>\n      <Typography\n      variant=\"h5\"\n      sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n      >\n      Confirm Your Submission\n        </Typography> */}\n\n      <Stack spacing={3}>\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Parent item(s) to Assign:\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{ marginBottom: 2, whiteSpace: \"pre-line\" }}\n          >\n            {parentParts}\n          </Typography>\n        </Box>\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Source Organization:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {sourceOrg}\n          </Typography>\n        </Box>\n\n        {/* <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Destination JDI Orgs:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {destOrg}\n          </Typography>\n        </Box> */}\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Items to be Processed:\n          </Typography>\n          {selectedItems.length > 0 ? (\n            <Box\n              sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}\n            >\n              {selectedItems.map((item) => (\n                <Chip key={item} label={item} color=\"primary\" />\n              ))}\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              No items selected.\n            </Typography>\n          )}\n        </Box>\n        {/* <Box>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n              Mapped Items:\n            </Typography>\n            {selectedItems.length > 0 ? (\n              <Box\n                sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}l\n              >\n                {selectedItems.map((item) => (\n                  <Chip key={item} label={item} color=\"primary\" />\n                ))}\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                No items selected.\n              </Typography>\n            )}\n          </Box> */}\n        {/* <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Confirm\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => setIsOpen(false)}\n            disabled={isLoading}\n          >\n            Cancel\n          </Button>\n        </Stack> */}\n      </Stack>\n      {/* </Stack>\n    </Paper> */}\n    </>\n  );\n};\n","import { Box, LinearProgress, Paper, Typography } from \"@mui/material\";\n\nexport const LoadingScreen = ({ message }) => {\n  return (\n    <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        textAlign: \"center\",\n        backgroundColor: \"#f5f5f5\",\n        border: \"2px solid #3f51b5\",\n      }}\n    >\n      <Box sx={{ marginBottom: 2 }}>\n        <Typography variant=\"h6\" color=\"primary\" fontWeight=\"bold\">\n          {message}\n        </Typography>\n      </Box>\n      <LinearProgress color=\"primary\" />\n    </Paper>\n  );\n};\n","import { Button, Stack, Typography } from \"@mui/material\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport {  useEffect, useRef } from \"react\";\n\nexport function Dialog({\n  children,\n  isOpen,\n  onSubmit,\n  onCancel,\n  disabled,\n  title,\n}) {\n  const dialogRef = useRef(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    function handleClickOutside(event) {\n      if (dialogRef.current && !dialogRef.current.contains(event.target)) {\n        onCancel();\n      }\n    }\n\n    if (isOpen) window.addEventListener(\"mousedown\", handleClickOutside, { signal });\n\n    return () => controller.abort();\n  }, [isOpen, onCancel]);\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed inset-0 flex items-center justify-center backdrop-blur-xs bg-black/30 z-10\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div\n              ref={dialogRef}\n              className=\"bg-white rounded-2xl p-6 shadow-xl min-w-[70%] md:min-w-[40%] max-w-[60%]\"\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n            >\n              <Typography\n                variant=\"h5\"\n                sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n              >\n                {title}\n              </Typography>\n\n              {disabled && (\n                <div className=\"w-full flex justify-center py-4\">\n                  <LoadingScreen message=\"Searching for parts...\" />\n                </div>\n              )}\n\n              {children}\n\n              <Stack\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"flex-end\"\n                className=\"pt-4\"\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={disabled}\n                >\n                  Confirm\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={onCancel}\n                  disabled={disabled}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","import { atom, useAtom } from \"jotai\";\n\nconst productAtom = atom(false);\n\nexport const useConfirmations = () => {\n  const [isOpen, setIsOpen] = useAtom(productAtom);\n\n  return {\n    isOpen,\n    setIsOpen,\n  };\n};\n","import {\n  Autocomplete,\n  TextField,\n  Chip,\n  Box,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { useOrgListQuery, useRdoListQuery } from \"../slices/apis/app.api\";\n\nexport const DropdownMultiSelect = ({\n  selectedItems,\n  onChange,\n  disabled,\n}) => {\n  const handleSelect = (newValue) => {\n    if (newValue && !selectedItems?.includes(newValue)) {\n      onChange([...selectedItems, newValue]);\n    }\n  };\n\n  const handleDelete = (itemToDelete) => {\n    onChange(selectedItems?.filter((item) => item !== itemToDelete));\n  };\n\n  const { data: rdoList } = useRdoListQuery({});\n  const { data: orgList } = useOrgListQuery({});\n\n  return (\n    <Box\n      sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 2 }}\n    >\n      <Autocomplete\n        options={rdoList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"RDO Name (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n      <Autocomplete\n        options={orgList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Destination JDI Orgs (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n\n      {/* Helper text indicating both selections will be shown */}\n      <Typography variant=\"caption\" color=\"textSecondary\">\n        Selections from both fields will appear below.\n      </Typography>\n\n      <Paper\n        sx={{\n          padding: 2,\n          borderRadius: 2,\n          boxShadow: 2,\n          maxHeight: 200,\n          overflowY: \"auto\",\n        }}\n      >\n        <Typography\n          variant=\"subtitle1\"\n          sx={{ fontWeight: \"bold\", marginBottom: 2 }}\n        >\n          Selected Plants\n        </Typography>\n\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, minHeight: 20 }}>\n          {selectedItems.map((item) => (\n            <Chip\n              key={item}\n              label={item}\n              onDelete={() => handleDelete(item)}\n              color=\"primary\"\n            />\n          ))}\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n","import { useState } from \"react\";\nimport { TextField, Box, Paper, Button, Stack, Alert } from \"@mui/material\";\nimport { ConfirmationScreen } from \"../components/Confirmation\";\nimport { ResultsScreen } from \"../components/Result\";\nimport { Dialog } from \"../components/Dialog\";\nimport { useConfirmations } from \"../hooks/useConfirmations\";\nimport { usePostMutation } from \"../slices/apis/app.api\";\nimport toast from \"react-hot-toast\";\nimport { getErrorMessage } from \"../slices/apis/types\";\nimport { DropdownMultiSelect } from \"../components/DropdownSelect\";\n\nexport const JdiBomPage = () => {\n  // Form fields and error state\n  const [errors, setErrors] = useState({});\n\n  const [formState, setFormState] = useState({\n    parentParts: \"\",\n    sourceOrg: \"\",\n    plants: [],\n  });\n\n  const handleChange = (key, value) => {\n    setFormState((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const { isOpen, setIsOpen } = useConfirmations();\n\n  // --- Form Submission ---\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const newErrors = {};\n\n    if (!formState.parentParts.trim())\n      newErrors.parentParts = \"Parent Part is required\";\n    if (!formState.sourceOrg.trim())\n      newErrors.sourceOrg = \"Source org is required\";\n    if (!formState.plants.length)\n      newErrors.plants = \"Select either RDO Name or Destination JDI Org\";\n\n    setErrors(newErrors);\n\n    if (Object.keys(newErrors).length === 0) setIsOpen(true);\n  };\n\n  // --- Cancel Handler ---\n  const handleCancel = () => setIsOpen(false);\n\n  const [postMutation, { isLoading }] = usePostMutation();\n\n  // --- Confirmation Stage ---\n  const handleConfirmationSubmit = async () => {\n    const { data, error } = await postMutation({\n      parentPart: formState.parentParts,\n      sourceOrg: formState.sourceOrg,\n      plants: formState.plants,\n    });\n\n    if (error) toast.error(getErrorMessage(error));\n\n    setIsOpen(false);\n    toast.success(data.message);\n    // setTimeout(() => navigate(\"/tasks\"), 500);\n  };\n\n  return (\n    <Box sx={{ minHeight: \"calc(100vh - 65px)\", backgroundColor: \"#eef2f6\" }}>\n      <Dialog\n        isOpen={isOpen}\n        title=\"Confirm Your Submission\"\n        onSubmit={handleConfirmationSubmit}\n        onCancel={handleCancel}\n        disabled={isLoading}\n      >\n        <ConfirmationScreen\n          parentParts={formState.parentParts}\n          sourceOrg={formState.sourceOrg}\n          selectedItems={formState.plants}\n        />\n      </Dialog>\n\n      <Box\n        sx={{\n          padding: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          gap: 4,\n          minHeight: \"calc(100vh - 200px)\",\n        }}\n      >\n        <Paper\n          sx={{\n            padding: 4,\n            width: \"100%\",\n            maxWidth: 600,\n            borderRadius: 4,\n            boxShadow: 3,\n          }}\n        >\n          <form onSubmit={handleFormSubmit}>\n            <Stack spacing={3}>\n              <TextField\n                label=\"Parent item(s) to Assign\"\n                variant=\"outlined\"\n                value={formState.parentParts}\n                onChange={(e) => handleChange(\"parentParts\", e.target.value)}\n                error={!!errors.parentParts}\n                helperText={errors.parentParts}\n                fullWidth\n              />\n              <TextField\n                label=\"Source Organization\"\n                variant=\"outlined\"\n                value={formState.sourceOrg}\n                onChange={(e) => handleChange(\"sourceOrg\", e.target.value)}\n                error={!!errors.sourceOrg}\n                helperText={errors.sourceOrg}\n                fullWidth\n              />\n\n              <DropdownMultiSelect\n                selectedItems={formState.plants}\n                onChange={(newSelectedItems) =>\n                  handleChange(\"plants\", newSelectedItems)\n                }\n                disabled={false}\n              />\n\n              {errors.plants && <Alert severity=\"error\">{errors.plants}</Alert>}\n\n              <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Submit\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </Stack>\n          </form>\n        </Paper>\n\n        {/* <LoadingScreen message=\"Assigning items and commoning required parts...\" /> */}\n\n        {/* Results Screen */}\n        {false && (\n          <ResultsScreen\n            parentParts={formState.parentParts}\n            sourceOrg={formState.sourceOrg}\n            selectedItems={formState.plants}\n            onBack={handleCancel}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default JdiBomPage;\n","/**\n * Extracts an error message from an RTK Query error response.\n *\n * @param error - The error object from an API call.\n * @returns The extracted error message or a default message.\n */\nexport function getErrorMessage(error) {\n  if (error && typeof error === \"object\" && \"data\" in error) {\n    const fetchError = error;\n\n    if (\n      typeof fetchError.data === \"object\" &&\n      fetchError.data !== null &&\n      \"message\" in fetchError.data\n    ) {\n      return fetchError.data.message;\n    }\n  }\n\n  if (typeof error === \"object\" && error !== null && \"message\" in error) {\n    console.error(error);\n    return error.message;\n  }\n\n  return \"An unexpected error occurred.\";\n}\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\";\r\nimport useToast from \"./hooks/useToast\";\r\nimport useDroppableArea from \"./hooks/useDroppableArea\";\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport store from \"./store\"; // ✅ Import Redux store directly\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader/> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import { createRoot } from \"react-dom/client\";\nimport { Providers } from \"../providers\";\nimport WidgetLifecycle from \"../WidgetLifecycle-munish\";\n\n// Global React root reference\nlet root = null;\n\n/**\n * Mounts the React application dynamically.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nfunction start(AppComponent) {\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\n    window.PlatformAPI = PlatformAPI;\n  });\n\n  // Find the root element within the widget's body (if available)\n  const widget = window.widget;\n\n  let rootElement =\n    widget?.body?.querySelector(\"#root\") || document.getElementById(\"root\");\n\n  // If no root element exists, create one and append it to the widget body or document body.\n  if (!rootElement) {\n    rootElement = document.createElement(\"div\");\n    rootElement.id = \"root\";\n    (widget?.body || document.body).appendChild(rootElement);\n  }\n\n  root = root || createRoot(rootElement);\n  root.render(\n    <Providers>\n      <WidgetLifecycle />\n\n      {AppComponent}\n    </Providers>\n  );\n\n  return AppComponent;\n}\n\n// Function to inject the refresh listener script into the **parent window**\nfunction injectRefreshListener() {\n  const scriptContent = `\n      function listenForRefreshClicks() {\n        // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\n  \n        document.body.addEventListener(\"click\", function (event) {\n          let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\n  \n          if (refreshButton) {\n            // console.log(\"✅ [Parent] User clicked Refresh!\");\n            sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\n            // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\n          }\n        }, true);\n      }\n  \n      // ✅ Ensure event listener is added even if DOM is already loaded\n      if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\n      } else {\n        listenForRefreshClicks();\n      }\n    `;\n\n  // Inject script **into the parent window**\n  if (window.parent && window.parent.document) {\n    let injectedScript = window.parent.document.createElement(\"script\");\n    injectedScript.textContent = scriptContent;\n    window.parent.document.body.appendChild(injectedScript);\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\n  } else {\n    console.warn(\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\n    );\n  }\n}\n\n/**\n * Initializes the widget and returns the mounted component.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nexport function initializeWidget(AppComponent) {\n  // ✅ Inject the script when the React app starts\n  injectRefreshListener();\n\n  if (window.widget) {\n    let hasOnLoadRun = false;\n\n    window.widget.addEvent(\"onLoad\", () => {\n      if (hasOnLoadRun) {\n        console.warn(\n          \"⏳ onLoad was already executed. Ignoring duplicate trigger.\"\n        );\n        return;\n      }\n\n      hasOnLoadRun = true;\n      start(AppComponent);\n    });\n  } else {\n    console.error(\"❌ Widget not detected! onLoad cannot be registered.\");\n  }\n\n  return AppComponent;\n}\n","import { useEffect, useRef, useCallback } from \"react\";\r\nimport useDroppableArea from \"./useDroppableArea\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\n\r\nexport const useInitializeDroppableArea = () => {\r\n  const { initializeDroppableArea } = useDroppableArea();\r\n  const hasInitializedDroppable = useRef(false);\r\n\r\n  // ✅ Memoized function to prevent re-creation\r\n  const initDroppable = useCallback(() => {\r\n    if (!hasInitializedDroppable.current) {\r\n      initializeDroppableArea();\r\n      hasInitializedDroppable.current = true;\r\n    }\r\n  }, [initializeDroppableArea]);\r\n\r\n  // ✅ Use shallowEqual to prevent unnecessary re-renders\r\n  const isDropped = useSelector(\r\n    (state) => state.droppedObject.isDropped,\r\n    shallowEqual\r\n  );\r\n\r\n  // ✅ Use a single effect to optimize performance\r\n  useEffect(() => {\r\n    initDroppable();\r\n\r\n    console.info(\"[RevisionFloat] State Changes:\", { isDropped });\r\n  }, [initDroppable, isDropped]);\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DragAndDropComponent from \"./DragAndDrop/DragAndDrop\";\r\nimport Loader from \"./Loader/Loader\";\r\nimport { useInitializeDroppableArea } from \"../hooks/useInitializeDropableArea\";\r\nimport useDroppableArea from \"../hooks/useDroppableArea\";\r\n\r\nexport const WithDroppableLogic = ({ children, objectDropped }) => {\r\n  const { loading } = useDroppableArea();\r\n\r\n  useInitializeDroppableArea();\r\n\r\n  // Use Redux for isDropped\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n\r\n  // Check if a dynamic loadingObject value is passed via props;\r\n  // if not, fallback to Redux.\r\n  const loadingObject = objectDropped;\r\n\r\n  console.warn(\"loadingObject...............\", loadingObject);\r\n\r\n  // Show loading states\r\n  if (loading || loadingObject) {\r\n    return <Loader />;\r\n  }\r\n\r\n  // If not dropped, show drag-and-drop area\r\n  if (!isDropped) {\r\n    return <DragAndDropComponent />;\r\n  }\r\n\r\n  // Render the wrapped component when isDropped = true\r\n  return children;\r\n};\r\n","import { initializeWidget } from \"src/components/InitializeWidget\";\nimport { JdiBomPage } from \"src/pages\";\nimport { useSelector } from \"react-redux\";\nimport { WithDroppableLogic } from \"src/components/DragAndDrop\";\n\nconst JDIWidget = () => {\n  const loadingParentDetails = useSelector(\n    (state) => state.droppedObject.loadingParentDetails\n  );\n\n  return <WithDroppableLogic objectDropped={loadingParentDetails}>\n    <JdiBomPage />\n  </WithDroppableLogic>;\n};\n\nconst JdiBomWidget = () => initializeWidget(<JDIWidget />);\n\nexport default JdiBomWidget;\n","import { Suspense } from \"react\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Provider } from \"react-redux\";\n\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Bounce, ToastContainer } from \"react-toastify\";\nimport store from \"../store\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport \"../index.css\";\nimport \"../App.css\";\nimport \"../styles/variables.css\";\n\nexport const Providers = ({ children }) => {\n  const queryClient = new QueryClient();\n\n  return (\n    <HelmetProvider>\n      <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <Suspense fallback={<h1>loading</h1>}>\n            <Toaster position=\"top-center\" reverseOrder={false} />\n            <ToastContainer\n              position={\"top-right\"}\n              autoClose={2000}\n              hideProgressBar={false}\n              closeOnClick={true}\n              pauseOnHover={false}\n              pauseOnFocusLoss={false}\n              draggable={true}\n              theme={\"light\"}\n              transition={Bounce}\n            />\n\n            {children}\n          </Suspense>\n        </QueryClientProvider>\n      </Provider>\n    </HelmetProvider>\n  );\n};\n","export const refreshWidgetData = async (dataItems, handleDrop) => {\r\n  console.log(\"[refreshWidgetData] called with dataItems:\", dataItems);\r\n  if (!dataItems || dataItems.length === 0) {\r\n    console.warn(\"[Refresh] No dropped data available to refresh.\");\r\n    return;\r\n  }\r\n  try {\r\n    if (typeof handleDrop !== \"function\") {\r\n      throw new Error(\"[Refresh] handleDrop is not a function.\");\r\n    }\r\n    await handleDrop(dataItems);\r\n  } catch (error) {\r\n    console.error(\"[Refresh] Error during handleDrop execution:\", error);\r\n  }\r\n};\r\n"],"names":["DragAndDropComponent","handleDrop","useDroppableArea","performSearch","useInterComSearch","_jsx","_Fragment","children","_jsxs","className","Image","style","width","height","src","alt","SearchInput","onSearch","searchText","title","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","length","id","objectId","objectType","console","warn","Loader","_ref","disabled","setSearchText","useState","inputRef","useRef","FontAwesomeIcon","icon","faMagnifyingGlass","onClick","handleSearchIconClick","trim","InputGroup","Form","Control","type","ref","value","onChange","event","newSearchText","target","onKeyDown","key","placeholder","Button","variant","handleClearClick","current","focus","useRevisions","showSuccessToast","showErrorToast","useToast","fetchRevisionsAndParents","async","relativePath","error","response","api","post","data","status","Error","concat","replaceRevisions","selectedParents","droppedData","userEmail","SelectedParents","DroppedData","log","MSG_REPLACE_SUCCESS","success","MSG_REPLACE_ERROR","message","dispatch","useDispatch","isDropped","useSelector","state","droppedObject","loading","fetchObjectDetails","useCallback","objectDetailsResult","getDroppedObjectDetails","dataItems","_dataItems$","_dataItems$2","cardData","revisionParentData","Promise","all","setDroppedObjectData","parentDetails","MSG_FETCH_OBJECT_DETAILS_FAILED","setLoading","_dataItems$3","includes","MSG_INVALID_OBJECT_TYPE","setIsDroppedAction","setTimeout","MSG_UNEXPECTED_ERROR","droppableContainer","isLoading","useQuery","queryKey","queryFn","resolve","interval","setInterval","container","document","querySelector","clearInterval","initDroppable","enabled","initializeDroppableArea","socket","setSocket","InterCom","setInterCom","useEffect","interComInstance","loadInterCom","loadData","disconnect","searchOpts","onObjectsSelected","_window$widget","socketName","Date","toISOString","replace","newSocket","Socket","dispatchRetryInternal","subscribeServer","widgetId","window","widget","finalSearchOpts","_objectSpread","widget_id","app_socket_id","default_search_criteria","dispatchEvent","addListener","showToast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","_objectWithoutProperties","_excluded","toast","options","arguments","undefined","showInfoToast","showWarningToast","ConfirmationScreen","parentParts","sourceOrg","selectedItems","Stack","spacing","Box","Typography","sx","fontWeight","marginBottom","whiteSpace","display","flexWrap","gap","marginTop","map","item","Chip","label","color","LoadingScreen","Paper","padding","maxWidth","borderRadius","boxShadow","textAlign","backgroundColor","border","LinearProgress","Dialog","isOpen","onSubmit","onCancel","dialogRef","controller","AbortController","signal","addEventListener","contains","abort","AnimatePresence","motion","div","initial","opacity","animate","exit","scale","direction","justifyContent","productAtom","atom","DropdownMultiSelect","_rdoList$data","_orgList$data","handleSelect","newValue","rdoList","useRdoListQuery","orgList","useOrgListQuery","flexDirection","Autocomplete","_","renderInput","params","TextField","fullWidth","maxHeight","overflowY","minHeight","onDelete","handleDelete","itemToDelete","filter","JdiBomPage","errors","setErrors","formState","setFormState","plants","handleChange","prev","setIsOpen","useConfirmations","useAtom","handleCancel","postMutation","usePostMutation","parentPart","fetchError","getErrorMessage","alignItems","e","preventDefault","newErrors","Object","keys","helperText","newSelectedItems","Alert","severity","WidgetLifecycle","trace","addEvent","_latestDraggedData$da","_latestDraggedData$da2","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","isAutoTriggeredRefresh","removeItem","latestDraggedData","store","getState","droppedObjectData","initialDraggedData","items","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","root","initializeWidget","AppComponent","parent","injectedScript","createElement","textContent","body","appendChild","injectRefreshListener","hasOnLoadRun","_widget$body","requirejs","PlatformAPI","rootElement","getElementById","createRoot","render","Providers","start","WithDroppableLogic","objectDropped","useInitializeDroppableArea","hasInitializedDroppable","shallowEqual","info","loadingObject","JDIWidget","loadingParentDetails","JdiBomWidget","queryClient","QueryClient","HelmetProvider","Provider","QueryClientProvider","client","Suspense","fallback","Toaster","reverseOrder","ToastContainer"],"sourceRoot":""}