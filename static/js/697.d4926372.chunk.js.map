{"version":3,"file":"static/js/697.d4926372.chunk.js","mappings":"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","sources":["WidgetLifecycle-munish.jsx","components/Loader/Loader.js","hooks/useDroppableArea.js","hooks/useRevisions.js","hooks/useToast.js","components/Confirmation.jsx","components/LoadingScreen.jsx","components/Dialog.jsx","hooks/useConfirmations.jsx","components/DropdownSelect.jsx","hooks/useInitializeDropableArea.js","pages/index.jsx","slices/apis/types.js","providers/index.jsx","components/InitializeWidget.jsx","pages/jdiBom/index.jsx","services/api/refreshService.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\";\r\nimport useToast from \"./hooks/useToast\";\r\nimport useDroppableArea from \"./hooks/useDroppableArea\";\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport store from \"./store\"; // ✅ Import Redux store directly\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader/> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction, setLoading } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\nimport useRevisions from \"./useRevisions\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  // fetchCsrfTokenAndDependencies as fetchCsrfService,\r\n  getDroppedObjectDetails,\r\n  // fetchCardOwnerDetails as fetchCardOwnerDetailsService,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\n\r\nconst useDroppableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { fetchRevisionsAndParents } = useRevisions();\r\n  const dispatch = useDispatch();\r\n  // ✅ Use `useSelector` to get the latest values from Redux\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const loading = useSelector((state) => state.droppedObject.loading);\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Fetch Revisions and Parents in parallel\r\n          const relativePath = objectDetailsResult.data.cardData.relativePath;\r\n          const [revisionParentData] = await Promise.all([\r\n            fetchRevisionsAndParents(\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              relativePath\r\n            ),\r\n          ]);\r\n          // Dispatch all updates together (batching updates)\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n              parentDetails: revisionParentData || [],\r\n            })\r\n          );\r\n          console.log(\"[fetchObjectDetails] ✅ Redux store updated.\");\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        console.log(\"[fetchObjectDetails] 🏁 Ensuring loading is reset.\");\r\n        dispatch(setLoading(false));\r\n      }\r\n    },\r\n    [dispatch, fetchRevisionsAndParents, showErrorToast]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          // Validate object type\r\n          const objectType = dataItems[0]?.objectType;\r\n          const validTypes = [\"VPMReference\", \"Document\", \"Raw_Material\"];\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n            return;\r\n          }\r\n          dispatch(setIsDroppedAction(true));\r\n          // ✅ Ensure we only start loading if another request isn't running\r\n          console.log(\"[handleDrop] 🔄 Force setting `loading = true`...\");\r\n          dispatch(setLoading(false));\r\n          setTimeout(() => dispatch(setLoading(true)), 0);\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        dispatch(setLoading(false)); // ✅ Reset loading in Redux\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n      // finally {\r\n      //   const latestLoadingState = store.getState().droppedObject.loading;\r\n      //   if (latestLoadingState) {\r\n      //     console.log(\"[handleDrop] ✅ Resetting `loading = false`...\");\r\n      //     setLoading(false);\r\n      //   } else {\r\n      //     console.log(\"[handleDrop] ⏳ `loading` is already false. Skipping reset.\");\r\n      //   }\r\n      // }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    // ✅ Only reset isDropped if it's currently false (prevent overwriting a valid drop)\r\n    if (!isDropped) {\r\n      console.log(\r\n        \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n      );\r\n      dispatch(setIsDroppedAction(false)); // ✅ Reset only if necessary\r\n    } else {\r\n      console.log(\r\n        \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n      );\r\n    }\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDroppableArea;\r\n","import useToast from \"../hooks/useToast\";\r\n\r\nimport api from \"../utils/api\"; // Import axios instance\r\nimport { MSG_REPLACE_SUCCESS, MSG_REPLACE_ERROR } from \"../utils/toastMessages\";\r\n\r\nconst useRevisions = () => {\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n  const fetchRevisionsAndParents = async (\r\n    objectId,\r\n    objectType,\r\n    relativePath\r\n  ) => {\r\n    if (!relativePath) {\r\n      console.error(\"[Fetch Revisions] ❌ Missing relative path.\");\r\n      return;\r\n    }\r\n\r\n    const parentURL = `/revFloat/getParents`;\r\n\r\n    try {\r\n      // Use the axios instance to make the POST request\r\n      const response = await api.post(parentURL, {\r\n        data: {\r\n          id: objectId,\r\n          type: objectType,\r\n          relativePath: relativePath,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const parentDetails = response.data;\r\n\r\n        // 🚀 Return data instead of dispatching\r\n        return parentDetails;\r\n      } else {\r\n        throw new Error(\r\n          `[Fetch Revisions] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[Fetch Revisions] ❌ Error occurred:\", error);\r\n      return null; // Ensure it returns null on error\r\n    }\r\n  };\r\n\r\n  const replaceRevisions = async (selectedParents, droppedData, userEmail) => {\r\n    const parentURL = `/revFloat/floatRevisions`; // Use relative path for axios\r\n\r\n    try {\r\n      // Make the POST request to the replacement API\r\n      const response = await api.post(parentURL, {\r\n        SelectedParents: selectedParents,\r\n        DroppedData: droppedData,\r\n        userEmail: userEmail,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Handle successful replacement\r\n        console.log(\"Replacement successful:\", response.data);\r\n        showSuccessToast(MSG_REPLACE_SUCCESS); // Show success toast\r\n        // You might want to update the Redux store or refetch data here\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(\r\n          `[Replacement API] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during replacement:\", error);\r\n      showErrorToast(MSG_REPLACE_ERROR); // Show error toast\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  return { fetchRevisionsAndParents, replaceRevisions };\r\n};\r\n\r\nexport default useRevisions;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import { Box, Chip, Stack, Typography } from \"@mui/material\";\n\n\nexport const ConfirmationScreen = ({\n  parentParts,\n  sourceOrg,\n  selectedItems,\n}) => {\n  return (\n    <>\n      {/* <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        opacity: stage === \"assigning\" ? 0.6 : 1,\n      }}\n    >\n      <Stack spacing={3}>\n      <Typography\n      variant=\"h5\"\n      sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n      >\n      Confirm Your Submission\n        </Typography> */}\n\n      <Stack spacing={3}>\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Parent item(s) to Assign:\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{ marginBottom: 2, whiteSpace: \"pre-line\" }}\n          >\n            {parentParts}\n          </Typography>\n        </Box>\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Source Organization:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {sourceOrg}\n          </Typography>\n        </Box>\n\n        {/* <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Destination JDI Orgs:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {destOrg}\n          </Typography>\n        </Box> */}\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Items to be Processed:\n          </Typography>\n          {selectedItems.length > 0 ? (\n            <Box\n              sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}\n            >\n              {selectedItems.map((item) => (\n                <Chip key={item} label={item} color=\"primary\" />\n              ))}\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              No items selected.\n            </Typography>\n          )}\n        </Box>\n        {/* <Box>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n              Mapped Items:\n            </Typography>\n            {selectedItems.length > 0 ? (\n              <Box\n                sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}l\n              >\n                {selectedItems.map((item) => (\n                  <Chip key={item} label={item} color=\"primary\" />\n                ))}\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                No items selected.\n              </Typography>\n            )}\n          </Box> */}\n        {/* <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Confirm\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => setIsOpen(false)}\n            disabled={isLoading}\n          >\n            Cancel\n          </Button>\n        </Stack> */}\n      </Stack>\n      {/* </Stack>\n    </Paper> */}\n    </>\n  );\n};\n","import { Box, LinearProgress, Paper, Typography } from \"@mui/material\";\n\nexport const LoadingScreen = ({ message }) => {\n  return (\n    <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        textAlign: \"center\",\n        backgroundColor: \"#f5f5f5\",\n        border: \"2px solid #3f51b5\",\n      }}\n    >\n      <Box sx={{ marginBottom: 2 }}>\n        <Typography variant=\"h6\" color=\"primary\" fontWeight=\"bold\">\n          {message}\n        </Typography>\n      </Box>\n      <LinearProgress color=\"primary\" />\n    </Paper>\n  );\n};\n","import { Button, Stack, Typography } from \"@mui/material\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport {  useEffect, useRef } from \"react\";\n\nexport function Dialog({\n  children,\n  isOpen,\n  onSubmit,\n  onCancel,\n  disabled,\n  title,\n}) {\n  const dialogRef = useRef(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    function handleClickOutside(event) {\n      if (dialogRef.current && !dialogRef.current.contains(event.target)) {\n        onCancel();\n      }\n    }\n\n    if (isOpen) window.addEventListener(\"mousedown\", handleClickOutside, { signal });\n\n    return () => controller.abort();\n  }, [isOpen, onCancel]);\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed inset-0 flex items-center justify-center backdrop-blur-xs bg-black/30 z-10\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div\n              ref={dialogRef}\n              className=\"bg-white rounded-2xl p-6 shadow-xl min-w-[70%] md:min-w-[40%] max-w-[60%]\"\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n            >\n              <Typography\n                variant=\"h5\"\n                sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n              >\n                {title}\n              </Typography>\n\n              {disabled && (\n                <div className=\"w-full flex justify-center py-4\">\n                  <LoadingScreen message=\"Searching for parts...\" />\n                </div>\n              )}\n\n              {children}\n\n              <Stack\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"flex-end\"\n                className=\"pt-4\"\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={disabled}\n                >\n                  Confirm\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={onCancel}\n                  disabled={disabled}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","import { atom, useAtom } from \"jotai\";\n\nconst productAtom = atom(false);\n\nexport const useConfirmations = () => {\n  const [isOpen, setIsOpen] = useAtom(productAtom);\n\n  return {\n    isOpen,\n    setIsOpen,\n  };\n};\n","import {\n  Autocomplete,\n  TextField,\n  Chip,\n  Box,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { useOrgListQuery, useRdoListQuery } from \"../slices/apis/app.api\";\n\nexport const DropdownMultiSelect = ({\n  selectedItems,\n  onChange,\n  disabled,\n}) => {\n  const handleSelect = (newValue) => {\n    if (newValue && !selectedItems?.includes(newValue)) {\n      onChange([...selectedItems, newValue]);\n    }\n  };\n\n  const handleDelete = (itemToDelete) => {\n    onChange(selectedItems?.filter((item) => item !== itemToDelete));\n  };\n\n  const { data: rdoList } = useRdoListQuery({});\n  const { data: orgList } = useOrgListQuery({});\n\n  return (\n    <Box\n      sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 2 }}\n    >\n      <Autocomplete\n        options={rdoList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"RDO Name (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n      <Autocomplete\n        options={orgList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Destination JDI Orgs (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n\n      {/* Helper text indicating both selections will be shown */}\n      <Typography variant=\"caption\" color=\"textSecondary\">\n        Selections from both fields will appear below.\n      </Typography>\n\n      <Paper\n        sx={{\n          padding: 2,\n          borderRadius: 2,\n          boxShadow: 2,\n          maxHeight: 200,\n          overflowY: \"auto\",\n        }}\n      >\n        <Typography\n          variant=\"subtitle1\"\n          sx={{ fontWeight: \"bold\", marginBottom: 2 }}\n        >\n          Selected Plants\n        </Typography>\n\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, minHeight: 20 }}>\n          {selectedItems.map((item) => (\n            <Chip\n              key={item}\n              label={item}\n              onDelete={() => handleDelete(item)}\n              color=\"primary\"\n            />\n          ))}\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n","import { useEffect, useRef, useCallback } from \"react\";\r\nimport useDroppableArea from \"./useDroppableArea\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\n\r\nexport const useInitializeDroppableArea = () => {\r\n  const { initializeDroppableArea } = useDroppableArea();\r\n  const hasInitializedDroppable = useRef(false);\r\n\r\n  // ✅ Memoized function to prevent re-creation\r\n  const initDroppable = useCallback(() => {\r\n    if (!hasInitializedDroppable.current) {\r\n      initializeDroppableArea();\r\n      hasInitializedDroppable.current = true;\r\n    }\r\n  }, [initializeDroppableArea]);\r\n\r\n  // ✅ Use shallowEqual to prevent unnecessary re-renders\r\n  const isDropped = useSelector(\r\n    (state) => state.droppedObject.isDropped,\r\n    shallowEqual\r\n  );\r\n\r\n  // ✅ Use a single effect to optimize performance\r\n  useEffect(() => {\r\n    initDroppable();\r\n\r\n    console.info(\"[RevisionFloat] State Changes:\", { isDropped });\r\n  }, [initDroppable, isDropped]);\r\n};\r\n","import { useState } from \"react\";\nimport { TextField, Box, Paper, Button, Stack, Alert } from \"@mui/material\";\nimport { ConfirmationScreen } from \"../components/Confirmation\";\nimport { ResultsScreen } from \"../components/Result\";\nimport { Dialog } from \"../components/Dialog\";\nimport { useConfirmations } from \"../hooks/useConfirmations\";\nimport { usePostMutation } from \"../slices/apis/app.api\";\nimport toast from \"react-hot-toast\";\nimport { getErrorMessage } from \"../slices/apis/types\";\nimport { DropdownMultiSelect } from \"../components/DropdownSelect\";\nimport { useInitializeDroppableArea } from \"../hooks/useInitializeDropableArea\";\n\n\nexport const JdiBomPage = () => {\n    useInitializeDroppableArea();\n  // Form fields and error state\n  const [errors, setErrors] = useState({});\n\n  const [formState, setFormState] = useState({\n    parentParts: \"\",\n    sourceOrg: \"\",\n    plants: [],\n  });\n\n  const handleChange = (key, value) => {\n    setFormState((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const { isOpen, setIsOpen } = useConfirmations();\n\n  // --- Form Submission ---\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const newErrors = {};\n\n    if (!formState.parentParts.trim())\n      newErrors.parentParts = \"Parent Part is required\";\n    if (!formState.sourceOrg.trim())\n      newErrors.sourceOrg = \"Source org is required\";\n    if (!formState.plants.length)\n      newErrors.plants = \"Select either RDO Name or Destination JDI Org\";\n\n    setErrors(newErrors);\n\n    if (Object.keys(newErrors).length === 0) setIsOpen(true);\n  };\n\n  // --- Cancel Handler ---\n  const handleCancel = () => setIsOpen(false);\n\n  const [postMutation, { isLoading }] = usePostMutation();\n\n  // --- Confirmation Stage ---\n  const handleConfirmationSubmit = async () => {\n    const { data, error } = await postMutation({\n      parentPart: formState.parentParts,\n      sourceOrg: formState.sourceOrg,\n      plants: formState.plants,\n    });\n\n    if (error) toast.error(getErrorMessage(error));\n\n    setIsOpen(false);\n    toast.success(data.message);\n    // setTimeout(() => navigate(\"/tasks\"), 500);\n  };\n\n  return (\n    <Box sx={{ minHeight: \"calc(100vh - 65px)\", backgroundColor: \"#eef2f6\" }}>\n      <Dialog\n        isOpen={isOpen}\n        title=\"Confirm Your Submission\"\n        onSubmit={handleConfirmationSubmit}\n        onCancel={handleCancel}\n        disabled={isLoading}\n      >\n        <ConfirmationScreen\n          parentParts={formState.parentParts}\n          sourceOrg={formState.sourceOrg}\n          selectedItems={formState.plants}\n        />\n      </Dialog>\n\n      <Box\n        sx={{\n          padding: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          gap: 4,\n          minHeight: \"calc(100vh - 200px)\",\n        }}\n      >\n        <Paper\n          sx={{\n            padding: 4,\n            width: \"100%\",\n            maxWidth: 600,\n            borderRadius: 4,\n            boxShadow: 3,\n          }}\n        >\n          <form onSubmit={handleFormSubmit}>\n            <Stack spacing={3}>\n              <TextField\n                label=\"Parent item(s) to Assign\"\n                variant=\"outlined\"\n                value={formState.parentParts}\n                onChange={(e) => handleChange(\"parentParts\", e.target.value)}\n                error={!!errors.parentParts}\n                helperText={errors.parentParts}\n                fullWidth\n              />\n              <TextField\n                label=\"Source Organization\"\n                variant=\"outlined\"\n                value={formState.sourceOrg}\n                onChange={(e) => handleChange(\"sourceOrg\", e.target.value)}\n                error={!!errors.sourceOrg}\n                helperText={errors.sourceOrg}\n                fullWidth\n              />\n\n              <DropdownMultiSelect\n                selectedItems={formState.plants}\n                onChange={(newSelectedItems) =>\n                  handleChange(\"plants\", newSelectedItems)\n                }\n                disabled={false}\n              />\n\n              {errors.plants && <Alert severity=\"error\">{errors.plants}</Alert>}\n\n              <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Submit\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </Stack>\n          </form>\n        </Paper>\n\n        {/* <LoadingScreen message=\"Assigning items and commoning required parts...\" /> */}\n\n        {/* Results Screen */}\n        {false && (\n          <ResultsScreen\n            parentParts={formState.parentParts}\n            sourceOrg={formState.sourceOrg}\n            selectedItems={formState.plants}\n            onBack={handleCancel}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default JdiBomPage;\n","/**\n * Extracts an error message from an RTK Query error response.\n *\n * @param error - The error object from an API call.\n * @returns The extracted error message or a default message.\n */\nexport function getErrorMessage(error) {\n  if (error && typeof error === \"object\" && \"data\" in error) {\n    const fetchError = error;\n\n    if (\n      typeof fetchError.data === \"object\" &&\n      fetchError.data !== null &&\n      \"message\" in fetchError.data\n    ) {\n      return fetchError.data.message;\n    }\n  }\n\n  if (typeof error === \"object\" && error !== null && \"message\" in error) {\n    console.error(error);\n    return error.message;\n  }\n\n  return \"An unexpected error occurred.\";\n}\n","import {  Suspense } from \"react\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Provider } from \"react-redux\";\n\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Bounce, ToastContainer } from \"react-toastify\";\nimport store from \"../store\";\n\nexport const Providers = ({ children }) => {\n  const queryClient = new QueryClient();\n\n  return (\n    <HelmetProvider>\n      <Provider store={store}>\n          <QueryClientProvider client={queryClient}>\n            <Suspense fallback={<h1>loading................</h1>}>\n              <Toaster position=\"top-center\" reverseOrder={false} />\n              <ToastContainer\n                position={\"top-right\"}\n                autoClose={2000}\n                hideProgressBar={false}\n                closeOnClick={true}\n                pauseOnHover={false}\n                pauseOnFocusLoss={false}\n                draggable={true}\n                theme={\"light\"}\n                transition={Bounce}\n              />\n\n              {children}\n            </Suspense>\n          </QueryClientProvider>\n      </Provider>\n    </HelmetProvider>\n  );\n};\n","import { JSX } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Providers } from \"../providers\";\nimport WidgetLifecycle from \"../WidgetLifecycle-munish\";\n\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n// import \"../App.css\";\n// import \"../styles/variables.css\";\n// import \"./index.css\";\n\n// Global React root reference\nlet root = null;\n\n/**\n * Mounts the React application dynamically.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nfunction start(AppComponent) {\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\n    window.PlatformAPI = PlatformAPI;\n  });\n\n  // Find the root element within the widget's body (if available)\n  const widget = window.widget;\n\n  let rootElement =\n    widget?.body?.querySelector(\"#root\") || document.getElementById(\"root\");\n\n  // If no root element exists, create one and append it to the widget body or document body.\n  if (!rootElement) {\n    rootElement = document.createElement(\"div\");\n    rootElement.id = \"root\";\n    (widget?.body || document.body).appendChild(rootElement);\n  }\n\n  root = root || createRoot(rootElement);\n  root.render(\n    <Providers>\n      <WidgetLifecycle />\n\n      {AppComponent}\n    </Providers>\n  );\n\n  return AppComponent;\n}\n\n// Function to inject the refresh listener script into the **parent window**\nfunction injectRefreshListener() {\n  const scriptContent = `\n      function listenForRefreshClicks() {\n        // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\n  \n        document.body.addEventListener(\"click\", function (event) {\n          let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\n  \n          if (refreshButton) {\n            // console.log(\"✅ [Parent] User clicked Refresh!\");\n            sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\n            // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\n          }\n        }, true);\n      }\n  \n      // ✅ Ensure event listener is added even if DOM is already loaded\n      if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\n      } else {\n        listenForRefreshClicks();\n      }\n    `;\n\n  // Inject script **into the parent window**\n  if (window.parent && window.parent.document) {\n    let injectedScript = window.parent.document.createElement(\"script\");\n    injectedScript.textContent = scriptContent;\n    window.parent.document.body.appendChild(injectedScript);\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\n  } else {\n    console.warn(\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\n    );\n  }\n}\n\n/**\n * Initializes the widget and returns the mounted component.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nexport function initializeWidget(AppComponent) {\n  // ✅ Inject the script when the React app starts\n  injectRefreshListener();\n\n  if (window.widget) {\n    let hasOnLoadRun = false;\n\n    window.widget.addEvent(\"onLoad\", () => {\n      if (hasOnLoadRun) {\n        console.warn(\n          \"⏳ onLoad was already executed. Ignoring duplicate trigger.\"\n        );\n        return;\n      }\n\n      hasOnLoadRun = true;\n      start(AppComponent);\n    });\n  } else {\n    console.error(\"❌ Widget not detected! onLoad cannot be registered.\");\n  }\n\n  return AppComponent;\n}\n","import { initializeWidget } from \"../../components/InitializeWidget\";\nimport { JdiBomPage } from \"../../pages\";\n\nconst JdiBomWidget = () => initializeWidget(<JdiBomPage />);\n\nexport default JdiBomWidget;\n","export const refreshWidgetData = async (dataItems, handleDrop) => {\r\n  console.log(\"[refreshWidgetData] called with dataItems:\", dataItems);\r\n  if (!dataItems || dataItems.length === 0) {\r\n    console.warn(\"[Refresh] No dropped data available to refresh.\");\r\n    return;\r\n  }\r\n  try {\r\n    if (typeof handleDrop !== \"function\") {\r\n      throw new Error(\"[Refresh] handleDrop is not a function.\");\r\n    }\r\n    await handleDrop(dataItems);\r\n  } catch (error) {\r\n    console.error(\"[Refresh] Error during handleDrop execution:\", error);\r\n  }\r\n};\r\n"],"names":["WidgetLifecycle","handleDrop","useDroppableArea","showSuccessToast","showErrorToast","useToast","loading","setLoading","useState","useEffect","window","widget","console","trace","addEvent","async","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","includes","isAutoTriggeredRefresh","warn","removeItem","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","data","items","length","error","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","_jsx","Loader","className","children","fetchRevisionsAndParents","useRevisions","dispatch","useDispatch","isDropped","useSelector","state","fetchObjectDetails","useCallback","objectDetailsResult","getDroppedObjectDetails","dataItems","success","_dataItems$","_dataItems$2","relativePath","cardData","revisionParentData","Promise","all","objectId","objectType","setDroppedObjectData","parentDetails","log","MSG_FETCH_OBJECT_DETAILS_FAILED","_dataItems$3","MSG_INVALID_OBJECT_TYPE","setIsDroppedAction","setTimeout","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","response","api","post","id","type","status","concat","replaceRevisions","selectedParents","droppedData","userEmail","SelectedParents","DroppedData","MSG_REPLACE_SUCCESS","MSG_REPLACE_ERROR","message","showToast","_ref","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","_objectWithoutProperties","_excluded","toast","_objectSpread","options","arguments","undefined","showInfoToast","showWarningToast","ConfirmationScreen","parentParts","sourceOrg","selectedItems","_Fragment","_jsxs","Stack","spacing","Box","Typography","variant","sx","fontWeight","marginBottom","whiteSpace","display","flexWrap","gap","marginTop","map","item","Chip","label","color","LoadingScreen","Paper","padding","width","maxWidth","borderRadius","boxShadow","textAlign","backgroundColor","border","LinearProgress","Dialog","isOpen","onSubmit","onCancel","disabled","title","dialogRef","useRef","controller","AbortController","signal","addEventListener","event","current","contains","target","abort","AnimatePresence","motion","div","initial","opacity","animate","exit","ref","scale","direction","justifyContent","Button","onClick","productAtom","atom","DropdownMultiSelect","_rdoList$data","_orgList$data","onChange","handleSelect","newValue","rdoList","useRdoListQuery","orgList","useOrgListQuery","flexDirection","Autocomplete","_","renderInput","params","TextField","fullWidth","maxHeight","overflowY","minHeight","onDelete","handleDelete","itemToDelete","filter","JdiBomPage","useInitializeDroppableArea","hasInitializedDroppable","shallowEqual","info","errors","setErrors","formState","setFormState","plants","handleChange","key","value","prev","setIsOpen","useConfirmations","useAtom","handleCancel","postMutation","isLoading","usePostMutation","parentPart","fetchError","getErrorMessage","alignItems","e","preventDefault","newErrors","trim","Object","keys","helperText","newSelectedItems","Alert","severity","Providers","queryClient","QueryClient","HelmetProvider","Provider","QueryClientProvider","client","Suspense","fallback","Toaster","reverseOrder","ToastContainer","root","initializeWidget","AppComponent","parent","injectedScript","createElement","textContent","body","appendChild","injectRefreshListener","hasOnLoadRun","_widget$body","requirejs","PlatformAPI","rootElement","getElementById","createRoot","render","start","JdiBomWidget"],"sourceRoot":""}