{"version":3,"file":"static/js/697.9c1e71da.chunk.js","mappings":"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","sources":["WidgetLifecycle-munish.jsx","components/DragAndDrop/DragAndDrop.jsx","hooks/useBOSWidget.js","hooks/useBOSDropableArea.js","components/Confirmation.jsx","components/LoadingScreen.jsx","components/Dialog.jsx","hooks/useConfirmations.jsx","components/DropdownSelect.jsx","hoc/DragAndDrop.jsx","pages/index.jsx","hooks/useInitializeDropableArea.js","slices/apis/types.js","providers/index.jsx","components/InitializeWidget.jsx","pages/jdiBom/index.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\";\r\nimport useToast from \"./hooks/useToast\";\r\nimport useDroppableArea from \"./hooks/useDroppableArea\";\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport store from \"./store\"; // ✅ Import Redux store directly\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader/> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import React, { useEffect } from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const {  handleDrop } = useDroppableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      // console.log(\"Selected objects:\", selectedObjects);\r\n      // console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"droppable-container mt-4\"\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  setParentDetailsLoading,\r\n  setSpecDocument,\r\n} from \"../store/droppedObjectSlice\";\r\nimport { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../utils/toastMessages\";\r\nimport useToast from \"./useToast\";\r\nimport { fetchCsrfToken } from \"../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { initWidget } from \"../lib/widget\";\r\nimport { callEnoviaWebService, loadWAFData, fetchData } from \"../utils/helpers\";\r\n\r\nconst useBOSWidget = () => {\r\n  const { showErrorToast } = useToast();\r\n  const dispatch = useDispatch();\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n  let email = window.widget.getValue(\"email\");\r\n\r\n  console.log(\"Email in useBOSWidget:\", email);\r\n  // console.log(\"Security context using preferences are\", securitycontext);\r\n\r\n  const handleBOSWidget = async (\r\n    collabSpace,\r\n    state,\r\n    objectId,\r\n    type,\r\n    parentName,\r\n    parentRevision\r\n  ) => {\r\n    try {\r\n      console.log(\"Object id is:\", objectId);\r\n      console.log(\"Object type is:\", type);\r\n      dispatch(setParentDetailsLoading(true));\r\n\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      console.log(\"[useBOSWidget] CSRF Headers:\", headers);\r\n\r\n      // Step 1: Call Enovia Web Service\r\n      let baseURL = `${ENOVIA_BASE_URL}/resources/v1/modeler/documents/parentId/${objectId}?parentRelName=SpecificationDocument`;\r\n\r\n      let parentDirection = type === \"Document\" ? \"to\" : \"from\";\r\n\r\n      let urlObjWAF = `${baseURL}&parentDirection=${parentDirection}`;\r\n      let ChildObject = await callEnoviaWebService(\r\n        \"GET\",\r\n        urlObjWAF,\r\n        \"\",\r\n        headers\r\n      );\r\n      console.log(\"SpecDetails Response:\", ChildObject);\r\n\r\n      if (\r\n        ChildObject &&\r\n        ChildObject.status &&\r\n        ChildObject.output.data.length > 0\r\n      ) {\r\n        let ChildObjectDocument = ChildObject.output.data.map((sSpec) => ({\r\n          id: sSpec.id,\r\n          title:\r\n            sSpec.dataelements.title && sSpec.dataelements.title.trim() !== \"\"\r\n              ? sSpec.dataelements.title\r\n              : sSpec.dataelements.secondaryTitle,\r\n          revision: sSpec.dataelements.revision,\r\n          state: sSpec.dataelements.stateNLS,\r\n          name: sSpec.dataelements.name,\r\n        }));\r\n\r\n        console.log(\r\n          \"[useBOSWidget] Extracted Spec Documents:\",\r\n          ChildObjectDocument\r\n        );\r\n        // if type is Document and then iterate ovet the\r\n        if (type === \"Document\") {\r\n          const revisionBody = {\r\n            data: [],\r\n          };\r\n          ChildObjectDocument.forEach((child) => {\r\n            const body = {\r\n              id: child.id,\r\n              identifier: child.id,\r\n              type: \"VPMReference\",\r\n              source: `${ENOVIA_BASE_URL}`,\r\n              relativePath: `/resources/v1/modeler/dseng/dseng:EngItem/${child.id}`,\r\n            };\r\n            revisionBody.data.push(body);\r\n          });\r\n          const RevisionUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslc/version/getGraph`;\r\n          const response = await callEnoviaWebService(\r\n            \"POST\",\r\n            RevisionUrl,\r\n            revisionBody,\r\n            headers\r\n          );\r\n          console.log(\"response is:\", response);\r\n          response.output.results.forEach((item) => {\r\n            // Find the latest version based on the 'revision' key\r\n            const latestVersion = item.versions.reduce((latest, current) => {\r\n              return convertRevisionToNumber(current.revision) >\r\n                convertRevisionToNumber(latest.revision)\r\n                ? current\r\n                : latest;\r\n            });\r\n\r\n            // Update 'isLatestRevision' for only the matching document\r\n            ChildObjectDocument = ChildObjectDocument.map((doc) => {\r\n              if (item.versions.some((version) => version.id === doc.id)) {\r\n                return {\r\n                  ...doc,\r\n                  isLatestRevision:\r\n                    doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n                };\r\n              }\r\n              return doc;\r\n            });\r\n          });\r\n\r\n          // Function to convert revision to a comparable numeric value\r\n          function convertRevisionToNumber(rev) {\r\n            if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n            let number = 0;\r\n            for (let i = 0; i < rev.length; i++) {\r\n              number =\r\n                number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n            }\r\n            return number; // Handles A-Z, AA-ZZ revisions\r\n          }\r\n\r\n          console.log(\"ChildObjectDocument is:\", ChildObjectDocument);\r\n        }\r\n        let requestBody;\r\n        let getUrl;\r\n        if (type === \"Document\") {\r\n          getUrl =\r\n            \"https://emr-product-datahub-server-sap-stage.azurewebsites.net/bosAttribute/getLatestSpecItemDetails\";\r\n          requestBody = {\r\n            SpecName: parentName, // Replace with actual SpecName if dynamic\r\n            SpecRevision: parentRevision, // Replace with actual SpecRevision if dynamic\r\n            Items: ChildObjectDocument.map((obj) => ({\r\n              ItemName: obj.name, // Replace dynamically if needed\r\n              ItemRevision: obj.revision,\r\n            })),\r\n          };\r\n        } else {\r\n          getUrl =\r\n            \"https://emr-product-datahub-server-sap-stage.azurewebsites.net/bosAttribute/getLatestItemSpecDetails\";\r\n          requestBody = {\r\n            ItemName: parentName, // Replace with actual ItemName if dynamic\r\n            ItemRevision: parentRevision, // Replace with actual revision if dynamic\r\n            Specifications: ChildObjectDocument.map((obj) => ({\r\n              SpecName: obj.name,\r\n              SpecRevision: obj.revision,\r\n            })),\r\n          };\r\n        }\r\n\r\n        console.log(\"Requested Body is:\", requestBody);\r\n\r\n        const response = await fetchData(\"POST\", getUrl, requestBody);\r\n\r\n        console.log(\"the response from node API is:\", response);\r\n\r\n        let mergedData = [];\r\n        if (response?.data?.data?.Specifications) {\r\n          // **Case 1: API Response Contains \"Specifications\"**\r\n          response.data.data.Specifications.forEach((spec) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (obj) =>\r\n                obj.name === spec.SpecName && obj.revision === spec.SpecRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              childName: spec.SpecName,\r\n              childRevision: spec.SpecRevision,\r\n              PrintOnPurchaseOrderRequired: spec.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: spec.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: spec.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: spec.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": spec[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else if (response?.data?.data?.Items) {\r\n          // get all the id's\r\n\r\n          // **Case 2: API Response Contains \"Items\"**\r\n          response.data.data.Items.forEach((item) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (doc) =>\r\n                doc.name === item.ItemName && doc.revision === item.ItemRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childName: item.ItemName,\r\n              childRevision: item.ItemRevision,\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              PrintOnPurchaseOrderRequired: item.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: item.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: item.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: item.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": item[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else {\r\n          console.warn(\"[useBOSWidget] Unexpected API response format.\");\r\n        }\r\n        console.log(\r\n          \"[useBOSWidget] Final Merged Data for Dispatch:\",\r\n          mergedData\r\n        );\r\n\r\n        dispatch(setSpecDocument(mergedData));\r\n        // You can now dispatch or return this data as needed\r\n      } else {\r\n        console.warn(\"[useBOSWidget] No connected childs.\");\r\n        dispatch(setSpecDocument([]));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[useBOSWidget] Error:\", error);\r\n      throw error; // Let the caller handle the error\r\n    } finally {\r\n      dispatch(setParentDetailsLoading(false)); // Ensure loading state is reset\r\n    }\r\n  };\r\n\r\n  return { handleBOSWidget };\r\n};\r\n\r\nexport default useBOSWidget;\r\n\r\n// response.output.results.forEach((item) => {\r\n//   // Find the latest version based on the 'revision' key\r\n//   const latestVersion = item.versions.reduce((latest, current) => {\r\n//     return convertRevisionToNumber(current.revision) > convertRevisionToNumber(latest.revision)\r\n//       ? current\r\n//       : latest;\r\n//   });\r\n\r\n//   // Update 'isLatestRevision' for each document\r\n//   ChildObjectDocument = ChildObjectDocument.map((doc) => ({\r\n//     ...doc,\r\n//     isLatestRevision: doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n//   }));\r\n// });\r\n\r\n// // Function to convert revision to a comparable numeric value\r\n// function convertRevisionToNumber(rev) {\r\n//   if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n//   let number = 0;\r\n//   for (let i = 0; i < rev.length; i++) {\r\n//     number = number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n//   }\r\n//   return number; // Handles A-Z, AA-ZZ revisions\r\n// }\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\nimport usePlantAssignment from \"./usePlantAssignment\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  getDroppedObjectDetails,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\nimport useBOSWidget from \"./useBOSWidget\";\r\n\r\nconst useBOSDropableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { handleBOSWidget } = useBOSWidget();\r\n\r\n  // const [csrfHeaders, setCsrfHeaders] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        // const cardownerResult = await fetchCardOwnerDetailsService({\r\n        //   dataItems,\r\n        //   headers,\r\n        // });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Merge the data from both services\r\n          // const combineData = {\r\n          //   cardData: objectDetailsResult.data.cardData,\r\n          //   ownerData: cardownerResult.data.ownerData,\r\n          // };\r\n\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n            })\r\n          );\r\n\r\n          const draggedObjectData = objectDetailsResult.data.cardData;\r\n          console.log(\"[Dragged Items are]\", draggedObjectData);\r\n\r\n          dispatch(setIsDroppedAction(true));\r\n\r\n          // call usePlantAssignment after successfully fetching object details\r\n          if (objectDetailsResult) {\r\n            await handleBOSWidget(\r\n              draggedObjectData[\"Collaborative Space\"],\r\n              draggedObjectData[\"Maturity State\"],\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              draggedObjectData.Name,\r\n              draggedObjectData[\"Dropped Revision\"]\r\n            );\r\n          }\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [dispatch, handleBOSWidget]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      setLoading(true); // Start loading state\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    dispatch(setIsDroppedAction(false));\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useBOSDropableArea;\r\n","import { Box, Chip, Stack, Typography } from \"@mui/material\";\n\n\nexport const ConfirmationScreen = ({\n  parentParts,\n  sourceOrg,\n  selectedItems,\n}) => {\n  return (\n    <>\n      {/* <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        opacity: stage === \"assigning\" ? 0.6 : 1,\n      }}\n    >\n      <Stack spacing={3}>\n      <Typography\n      variant=\"h5\"\n      sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n      >\n      Confirm Your Submission\n        </Typography> */}\n\n      <Stack spacing={3}>\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Parent item(s) to Assign:\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{ marginBottom: 2, whiteSpace: \"pre-line\" }}\n          >\n            {parentParts}\n          </Typography>\n        </Box>\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Source Organization:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {sourceOrg}\n          </Typography>\n        </Box>\n\n        {/* <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Destination JDI Orgs:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {destOrg}\n          </Typography>\n        </Box> */}\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Items to be Processed:\n          </Typography>\n          {selectedItems.length > 0 ? (\n            <Box\n              sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}\n            >\n              {selectedItems.map((item) => (\n                <Chip key={item} label={item} color=\"primary\" />\n              ))}\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              No items selected.\n            </Typography>\n          )}\n        </Box>\n        {/* <Box>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n              Mapped Items:\n            </Typography>\n            {selectedItems.length > 0 ? (\n              <Box\n                sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}l\n              >\n                {selectedItems.map((item) => (\n                  <Chip key={item} label={item} color=\"primary\" />\n                ))}\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                No items selected.\n              </Typography>\n            )}\n          </Box> */}\n        {/* <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Confirm\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => setIsOpen(false)}\n            disabled={isLoading}\n          >\n            Cancel\n          </Button>\n        </Stack> */}\n      </Stack>\n      {/* </Stack>\n    </Paper> */}\n    </>\n  );\n};\n","import { Box, LinearProgress, Paper, Typography } from \"@mui/material\";\n\nexport const LoadingScreen = ({ message }) => {\n  return (\n    <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        textAlign: \"center\",\n        backgroundColor: \"#f5f5f5\",\n        border: \"2px solid #3f51b5\",\n      }}\n    >\n      <Box sx={{ marginBottom: 2 }}>\n        <Typography variant=\"h6\" color=\"primary\" fontWeight=\"bold\">\n          {message}\n        </Typography>\n      </Box>\n      <LinearProgress color=\"primary\" />\n    </Paper>\n  );\n};\n","import { Button, Stack, Typography } from \"@mui/material\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport {  useEffect, useRef } from \"react\";\n\nexport function Dialog({\n  children,\n  isOpen,\n  onSubmit,\n  onCancel,\n  disabled,\n  title,\n}) {\n  const dialogRef = useRef(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    function handleClickOutside(event) {\n      if (dialogRef.current && !dialogRef.current.contains(event.target)) {\n        onCancel();\n      }\n    }\n\n    if (isOpen) window.addEventListener(\"mousedown\", handleClickOutside, { signal });\n\n    return () => controller.abort();\n  }, [isOpen, onCancel]);\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed inset-0 flex items-center justify-center backdrop-blur-xs bg-black/30 z-10\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div\n              ref={dialogRef}\n              className=\"bg-white rounded-2xl p-6 shadow-xl min-w-[70%] md:min-w-[40%] max-w-[60%]\"\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n            >\n              <Typography\n                variant=\"h5\"\n                sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n              >\n                {title}\n              </Typography>\n\n              {disabled && (\n                <div className=\"w-full flex justify-center py-4\">\n                  <LoadingScreen message=\"Searching for parts...\" />\n                </div>\n              )}\n\n              {children}\n\n              <Stack\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"flex-end\"\n                className=\"pt-4\"\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={disabled}\n                >\n                  Confirm\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={onCancel}\n                  disabled={disabled}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","import { atom, useAtom } from \"jotai\";\n\nconst productAtom = atom(false);\n\nexport const useConfirmations = () => {\n  const [isOpen, setIsOpen] = useAtom(productAtom);\n\n  return {\n    isOpen,\n    setIsOpen,\n  };\n};\n","import {\n  Autocomplete,\n  TextField,\n  Chip,\n  Box,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { useOrgListQuery, useRdoListQuery } from \"../slices/apis/app.api\";\n\nexport const DropdownMultiSelect = ({\n  selectedItems,\n  onChange,\n  disabled,\n}) => {\n  const handleSelect = (newValue) => {\n    if (newValue && !selectedItems?.includes(newValue)) {\n      onChange([...selectedItems, newValue]);\n    }\n  };\n\n  const handleDelete = (itemToDelete) => {\n    onChange(selectedItems?.filter((item) => item !== itemToDelete));\n  };\n\n  const { data: rdoList } = useRdoListQuery({});\n  const { data: orgList } = useOrgListQuery({});\n\n  return (\n    <Box\n      sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 2 }}\n    >\n      <Autocomplete\n        options={rdoList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"RDO Name (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n      <Autocomplete\n        options={orgList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Destination JDI Orgs (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n\n      {/* Helper text indicating both selections will be shown */}\n      <Typography variant=\"caption\" color=\"textSecondary\">\n        Selections from both fields will appear below.\n      </Typography>\n\n      <Paper\n        sx={{\n          padding: 2,\n          borderRadius: 2,\n          boxShadow: 2,\n          maxHeight: 200,\n          overflowY: \"auto\",\n        }}\n      >\n        <Typography\n          variant=\"subtitle1\"\n          sx={{ fontWeight: \"bold\", marginBottom: 2 }}\n        >\n          Selected Plants\n        </Typography>\n\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, minHeight: 20 }}>\n          {selectedItems.map((item) => (\n            <Chip\n              key={item}\n              label={item}\n              onDelete={() => handleDelete(item)}\n              color=\"primary\"\n            />\n          ))}\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useBOSDropableArea from \"../hooks/useBOSDropableArea\";\r\nimport DragAndDropComponent from \"../components/DragAndDrop/DragAndDrop\";\r\nimport Loader from \"../components/Loader/Loader\";\r\n\r\nexport const withDroppableLogic = (WrappedComponent) => {\r\n  return (props) => {\r\n    const { initializeDroppableArea, loading } = useBOSDropableArea();\r\n\r\n    // Use Redux for isDropped\r\n    const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n\r\n    // Check if a dynamic loadingObject value is passed via props;\r\n    // if not, fallback to Redux.\r\n    const loadingObject = props.objectDropped;\r\n\r\n    console.warn('loadingObject...............', loadingObject)\r\n\r\n    useEffect(() => {\r\n      if (!isDropped) {\r\n        initializeDroppableArea();\r\n      }\r\n    }, [isDropped, initializeDroppableArea]);\r\n\r\n    // Show loading states\r\n    if (loading || loadingObject) {\r\n      return <Loader />;\r\n    }\r\n\r\n    // If not dropped, show drag-and-drop area\r\n    if (!isDropped) {\r\n      return <DragAndDropComponent />;\r\n    }\r\n\r\n    // Render the wrapped component when isDropped = true\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n};\r\n\r\n","import { useState } from \"react\";\nimport { TextField, Box, Paper, Button, Stack, Alert } from \"@mui/material\";\nimport { ConfirmationScreen } from \"../components/Confirmation\";\nimport { ResultsScreen } from \"../components/Result\";\nimport { Dialog } from \"../components/Dialog\";\nimport { useConfirmations } from \"../hooks/useConfirmations\";\nimport { usePostMutation } from \"../slices/apis/app.api\";\nimport toast from \"react-hot-toast\";\nimport { getErrorMessage } from \"../slices/apis/types\";\nimport { DropdownMultiSelect } from \"../components/DropdownSelect\";\nimport { useInitializeDroppableArea } from \"../hooks/useInitializeDropableArea\";\nimport { withDroppableLogic } from \"../hoc/DragAndDrop\";\n\n\nexport const JdiBomPage = () => {\n    useInitializeDroppableArea();\n  // Form fields and error state\n  const [errors, setErrors] = useState({});\n\n  const [formState, setFormState] = useState({\n    parentParts: \"\",\n    sourceOrg: \"\",\n    plants: [],\n  });\n\n  const handleChange = (key, value) => {\n    setFormState((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const { isOpen, setIsOpen } = useConfirmations();\n\n  // --- Form Submission ---\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const newErrors = {};\n\n    if (!formState.parentParts.trim())\n      newErrors.parentParts = \"Parent Part is required\";\n    if (!formState.sourceOrg.trim())\n      newErrors.sourceOrg = \"Source org is required\";\n    if (!formState.plants.length)\n      newErrors.plants = \"Select either RDO Name or Destination JDI Org\";\n\n    setErrors(newErrors);\n\n    if (Object.keys(newErrors).length === 0) setIsOpen(true);\n  };\n\n  // --- Cancel Handler ---\n  const handleCancel = () => setIsOpen(false);\n\n  const [postMutation, { isLoading }] = usePostMutation();\n\n  // --- Confirmation Stage ---\n  const handleConfirmationSubmit = async () => {\n    const { data, error } = await postMutation({\n      parentPart: formState.parentParts,\n      sourceOrg: formState.sourceOrg,\n      plants: formState.plants,\n    });\n\n    if (error) toast.error(getErrorMessage(error));\n\n    setIsOpen(false);\n    toast.success(data.message);\n    // setTimeout(() => navigate(\"/tasks\"), 500);\n  };\n\n  return (\n    <Box sx={{ minHeight: \"calc(100vh - 65px)\", backgroundColor: \"#eef2f6\" }}>\n      <Dialog\n        isOpen={isOpen}\n        title=\"Confirm Your Submission\"\n        onSubmit={handleConfirmationSubmit}\n        onCancel={handleCancel}\n        disabled={isLoading}\n      >\n        <ConfirmationScreen\n          parentParts={formState.parentParts}\n          sourceOrg={formState.sourceOrg}\n          selectedItems={formState.plants}\n        />\n      </Dialog>\n\n      <Box\n        sx={{\n          padding: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          gap: 4,\n          minHeight: \"calc(100vh - 200px)\",\n        }}\n      >\n        <Paper\n          sx={{\n            padding: 4,\n            width: \"100%\",\n            maxWidth: 600,\n            borderRadius: 4,\n            boxShadow: 3,\n          }}\n        >\n          <form onSubmit={handleFormSubmit}>\n            <Stack spacing={3}>\n              <TextField\n                label=\"Parent item(s) to Assign\"\n                variant=\"outlined\"\n                value={formState.parentParts}\n                onChange={(e) => handleChange(\"parentParts\", e.target.value)}\n                error={!!errors.parentParts}\n                helperText={errors.parentParts}\n                fullWidth\n              />\n              <TextField\n                label=\"Source Organization\"\n                variant=\"outlined\"\n                value={formState.sourceOrg}\n                onChange={(e) => handleChange(\"sourceOrg\", e.target.value)}\n                error={!!errors.sourceOrg}\n                helperText={errors.sourceOrg}\n                fullWidth\n              />\n\n              <DropdownMultiSelect\n                selectedItems={formState.plants}\n                onChange={(newSelectedItems) =>\n                  handleChange(\"plants\", newSelectedItems)\n                }\n                disabled={false}\n              />\n\n              {errors.plants && <Alert severity=\"error\">{errors.plants}</Alert>}\n\n              <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Submit\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </Stack>\n          </form>\n        </Paper>\n\n        {/* <LoadingScreen message=\"Assigning items and commoning required parts...\" /> */}\n\n        {/* Results Screen */}\n        {false && (\n          <ResultsScreen\n            parentParts={formState.parentParts}\n            sourceOrg={formState.sourceOrg}\n            selectedItems={formState.plants}\n            onBack={handleCancel}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default withDroppableLogic(JdiBomPage);\n","import { useEffect, useRef, useCallback } from \"react\";\r\nimport useDroppableArea from \"./useDroppableArea\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\n\r\nexport const useInitializeDroppableArea = () => {\r\n  const { initializeDroppableArea } = useDroppableArea();\r\n  const hasInitializedDroppable = useRef(false);\r\n\r\n  // ✅ Memoized function to prevent re-creation\r\n  const initDroppable = useCallback(() => {\r\n    if (!hasInitializedDroppable.current) {\r\n      initializeDroppableArea();\r\n      hasInitializedDroppable.current = true;\r\n    }\r\n  }, [initializeDroppableArea]);\r\n\r\n  // ✅ Use shallowEqual to prevent unnecessary re-renders\r\n  const isDropped = useSelector(\r\n    (state) => state.droppedObject.isDropped,\r\n    shallowEqual\r\n  );\r\n\r\n  // ✅ Use a single effect to optimize performance\r\n  useEffect(() => {\r\n    initDroppable();\r\n\r\n    console.info(\"[RevisionFloat] State Changes:\", { isDropped });\r\n  }, [initDroppable, isDropped]);\r\n};\r\n","/**\n * Extracts an error message from an RTK Query error response.\n *\n * @param error - The error object from an API call.\n * @returns The extracted error message or a default message.\n */\nexport function getErrorMessage(error) {\n  if (error && typeof error === \"object\" && \"data\" in error) {\n    const fetchError = error;\n\n    if (\n      typeof fetchError.data === \"object\" &&\n      fetchError.data !== null &&\n      \"message\" in fetchError.data\n    ) {\n      return fetchError.data.message;\n    }\n  }\n\n  if (typeof error === \"object\" && error !== null && \"message\" in error) {\n    console.error(error);\n    return error.message;\n  }\n\n  return \"An unexpected error occurred.\";\n}\n","import {  Suspense } from \"react\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Provider } from \"react-redux\";\n\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Bounce, ToastContainer } from \"react-toastify\";\nimport store from \"../store\";\n\nexport const Providers = ({ children }) => {\n  const queryClient = new QueryClient();\n\n  return (\n    <HelmetProvider>\n      <Provider store={store}>\n          <QueryClientProvider client={queryClient}>\n            <Suspense fallback={<h1>loading</h1>}>\n              <Toaster position=\"top-center\" reverseOrder={false} />\n              <ToastContainer\n                position={\"top-right\"}\n                autoClose={2000}\n                hideProgressBar={false}\n                closeOnClick={true}\n                pauseOnHover={false}\n                pauseOnFocusLoss={false}\n                draggable={true}\n                theme={\"light\"}\n                transition={Bounce}\n              />\n\n              {children}\n            </Suspense>\n          </QueryClientProvider>\n      </Provider>\n    </HelmetProvider>\n  );\n};\n","import { JSX } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Providers } from \"../providers\";\nimport WidgetLifecycle from \"../WidgetLifecycle-munish\";\n\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n// import \"../App.css\";\n// import \"../styles/variables.css\";\n// import \"./index.css\";\n\n// Global React root reference\nlet root = null;\n\n/**\n * Mounts the React application dynamically.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nfunction start(AppComponent) {\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\n    window.PlatformAPI = PlatformAPI;\n  });\n\n  // Find the root element within the widget's body (if available)\n  const widget = window.widget;\n\n  let rootElement =\n    widget?.body?.querySelector(\"#root\") || document.getElementById(\"root\");\n\n  // If no root element exists, create one and append it to the widget body or document body.\n  if (!rootElement) {\n    rootElement = document.createElement(\"div\");\n    rootElement.id = \"root\";\n    (widget?.body || document.body).appendChild(rootElement);\n  }\n\n  root = root || createRoot(rootElement);\n  root.render(\n    <Providers>\n      <WidgetLifecycle />\n\n      {AppComponent}\n    </Providers>\n  );\n\n  return AppComponent;\n}\n\n// Function to inject the refresh listener script into the **parent window**\nfunction injectRefreshListener() {\n  const scriptContent = `\n      function listenForRefreshClicks() {\n        // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\n  \n        document.body.addEventListener(\"click\", function (event) {\n          let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\n  \n          if (refreshButton) {\n            // console.log(\"✅ [Parent] User clicked Refresh!\");\n            sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\n            // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\n          }\n        }, true);\n      }\n  \n      // ✅ Ensure event listener is added even if DOM is already loaded\n      if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\n      } else {\n        listenForRefreshClicks();\n      }\n    `;\n\n  // Inject script **into the parent window**\n  if (window.parent && window.parent.document) {\n    let injectedScript = window.parent.document.createElement(\"script\");\n    injectedScript.textContent = scriptContent;\n    window.parent.document.body.appendChild(injectedScript);\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\n  } else {\n    console.warn(\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\n    );\n  }\n}\n\n/**\n * Initializes the widget and returns the mounted component.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nexport function initializeWidget(AppComponent) {\n  // ✅ Inject the script when the React app starts\n  injectRefreshListener();\n\n  if (window.widget) {\n    let hasOnLoadRun = false;\n\n    window.widget.addEvent(\"onLoad\", () => {\n      if (hasOnLoadRun) {\n        console.warn(\n          \"⏳ onLoad was already executed. Ignoring duplicate trigger.\"\n        );\n        return;\n      }\n\n      hasOnLoadRun = true;\n      start(AppComponent);\n    });\n  } else {\n    console.error(\"❌ Widget not detected! onLoad cannot be registered.\");\n  }\n\n  return AppComponent;\n}\n","import { useSelector } from \"react-redux\";\nimport { initializeWidget } from \"../../components/InitializeWidget\";\nimport { JdiBomPage } from \"../../pages\";\n\nconst JdiBomPageWrapper = () => {\n    const loadingParentDetails = useSelector(\n      (state) => state.droppedObject.loadingParentDetails\n    );\n  \n    console.log(\"loadingParentDetails:\", loadingParentDetails);\n  \n    return <JdiBomPage objectDropped={loadingParentDetails} />;\n  };\n  \n  // Pass the component directly to initializeWidget\n  const JdiBomWidget = () => initializeWidget(<JdiBomPageWrapper />);\n\nexport default JdiBomWidget;\n"],"names":["WidgetLifecycle","handleDrop","useDroppableArea","showSuccessToast","showErrorToast","useToast","loading","setLoading","useState","useEffect","window","widget","console","trace","addEvent","async","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","includes","isAutoTriggeredRefresh","warn","removeItem","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","data","items","length","error","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","_jsx","Loader","DragAndDropComponent","performSearch","useInterComSearch","_Fragment","children","_jsxs","className","Image","style","width","height","src","alt","SearchInput","onSearch","searchText","title","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","id","objectId","objectType","useBOSWidget","dispatch","useDispatch","ENOVIA_BASE_URL","process","REACT_APP_ENOVIA_BASE_URL","email","getValue","log","handleBOSWidget","collabSpace","state","type","parentName","parentRevision","setParentDetailsLoading","headers","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","baseURL","concat","parentDirection","urlObjWAF","ChildObject","callEnoviaWebService","status","output","_response$data","_response$data$data","_response$data2","_response$data2$data","requestBody","getUrl","ChildObjectDocument","map","sSpec","dataelements","trim","secondaryTitle","revision","stateNLS","name","revisionBody","forEach","child","body","identifier","source","relativePath","push","RevisionUrl","response","convertRevisionToNumber","rev","test","parseInt","number","i","charCodeAt","results","item","latestVersion","versions","reduce","latest","current","doc","version","_objectSpread","isLatestRevision","SpecName","SpecRevision","Items","obj","ItemName","ItemRevision","Specifications","fetchData","mergedData","spec","matchingDoc","find","childState","childTitle","childLatest","childName","childRevision","PrintOnPurchaseOrderRequired","PrintOnWorkOrderRequired","WorkOrderDocumentRequired","PrintOnReportOrderRequired","setSpecDocument","useBOSDropableArea","fetchObjectDetails","useCallback","objectDetailsResult","getDroppedObjectDetails","dataItems","success","setDroppedObjectData","cardData","draggedObjectData","_dataItems$","_dataItems$2","setIsDroppedAction","Name","MSG_FETCH_OBJECT_DETAILS_FAILED","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","ConfirmationScreen","_ref","parentParts","sourceOrg","selectedItems","Stack","spacing","Box","Typography","variant","sx","fontWeight","marginBottom","whiteSpace","display","flexWrap","gap","marginTop","Chip","label","color","LoadingScreen","message","Paper","padding","maxWidth","borderRadius","boxShadow","textAlign","backgroundColor","border","LinearProgress","Dialog","isOpen","onSubmit","onCancel","disabled","dialogRef","useRef","controller","AbortController","signal","addEventListener","event","contains","target","abort","AnimatePresence","motion","div","initial","opacity","animate","exit","ref","scale","direction","justifyContent","Button","onClick","productAtom","atom","DropdownMultiSelect","_rdoList$data","_orgList$data","onChange","handleSelect","newValue","rdoList","useRdoListQuery","orgList","useOrgListQuery","flexDirection","Autocomplete","options","_","renderInput","params","TextField","fullWidth","maxHeight","overflowY","minHeight","onDelete","handleDelete","itemToDelete","filter","JdiBomPage","useInitializeDroppableArea","hasInitializedDroppable","isDropped","useSelector","shallowEqual","info","errors","setErrors","formState","setFormState","plants","handleChange","key","value","prev","setIsOpen","useConfirmations","useAtom","handleCancel","postMutation","isLoading","usePostMutation","parentPart","toast","fetchError","getErrorMessage","alignItems","e","preventDefault","newErrors","Object","keys","helperText","newSelectedItems","Alert","severity","WrappedComponent","Providers","queryClient","QueryClient","HelmetProvider","Provider","QueryClientProvider","client","Suspense","fallback","Toaster","position","reverseOrder","ToastContainer","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","root","initializeWidget","AppComponent","parent","injectedScript","createElement","textContent","appendChild","injectRefreshListener","hasOnLoadRun","_widget$body","requirejs","PlatformAPI","rootElement","getElementById","createRoot","render","start","JdiBomPageWrapper","loadingParentDetails","objectDropped","JdiBomWidget"],"sourceRoot":""}