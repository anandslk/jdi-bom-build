{"version":3,"file":"static/js/567.391b08ea.chunk.js","mappings":"mKAGA,MAQA,EAReA,KAEXC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,Y,2GCArB,MA2DA,EA3DoBE,IAA6B,IAA5B,SAAEC,EAAQ,SAAEC,GAAUF,EACzC,MAAOG,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IACvCC,GAAWC,EAAAA,EAAAA,QAAO,MAuBxB,OACEC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,qDAAoDC,SAAA,EACjEF,EAAAA,EAAAA,KAACY,EAAAA,EAAe,CACdC,KAAMC,EAAAA,IACNC,QAVwBC,KACxBV,EAAWW,QACbb,EAASE,EACX,EAQIL,UAAU,iBAGZD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sCAAqCC,UACnDS,EAAAA,EAAAA,MAACO,EAAAA,EAAU,CAAAhB,SAAA,EACTF,EAAAA,EAAAA,KAACmB,EAAAA,EAAKC,QAAO,CACXC,KAAK,OACLC,IAAKb,EACLc,MAAOjB,EACPkB,SAnCiBC,IACzB,MAAMC,EAAgBD,EAAME,OAAOJ,MACnChB,EAAcmB,EAAc,EAkCpBE,UA/BmBH,IACT,UAAdA,EAAMI,KAAmBvB,EAAWW,QACtCb,EAASE,EACX,EA6BQwB,YAAY,YACZzB,SAAUA,IAEXC,IACCN,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLC,QAAQ,WACRjB,QAhCakB,KACvB1B,EAAc,IACdE,EAASyB,QAAQC,OAAO,EA+BdlC,UAAU,eAAcC,SACzB,kBAMH,C,0GCzCV,MAwHA,EAxHyBkC,KACvB,MAAM,eAAEC,IAAmBC,EAAAA,EAAAA,MACrB,yBAAEC,IAA6BC,EAAAA,EAAAA,KAC/BC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,cAAcH,YACvDI,GAAUH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,cAAcC,UAErDC,GAAqBC,EAAAA,EAAAA,cACzBC,UACE,IACE,MAAMC,QAA4BC,EAAAA,EAAAA,IAAwB,CACxDC,cAGF,GAAIF,EAAoBG,QAAS,CAAC,IAADC,EAAAC,EAE/B,MAAMC,EAAeN,EAAoBO,KAAKC,SAASF,cAChDG,SAA4BC,QAAQC,IAAI,CAC7CvB,EACc,QADUgB,EACtBF,EAAU,UAAE,IAAAE,OAAA,EAAZA,EAAcQ,SACF,QADUP,EACtBH,EAAU,UAAE,IAAAG,OAAA,EAAZA,EAAcQ,WACdP,KAIJhB,GACEwB,EAAAA,EAAAA,IAAqB,CACnBN,SAAUR,EAAoBO,KAAKC,SACnCO,cAAeN,GAAsB,MAGzCO,QAAQC,IAAI,mDACd,MACE/B,EAAegC,EAAAA,GAEnB,CAAE,MAAOC,GACPH,QAAQG,MAAM,+CAAgDA,GAC9DjC,EAAegC,EAAAA,GACjB,CAAC,QACCF,QAAQC,IAAI,gEACZ3B,GAAS8B,EAAAA,EAAAA,KAAW,GACtB,IAEF,CAAC9B,EAAUF,EAA0BF,IAGjCmC,GAAavB,EAAAA,EAAAA,cACjBC,UACEiB,QAAQC,IAAI,iDAAkDf,GAE9D,IACE,GAAIA,GAAaA,EAAUoB,OAAS,EAAG,CAAC,IAADC,EAErC,MAAMV,EAAyB,QAAfU,EAAGrB,EAAU,UAAE,IAAAqB,OAAA,EAAZA,EAAcV,WAEjC,IADmB,CAAC,eAAgB,WAAY,gBAChCW,SAASX,GAEvB,YADA3B,EAAeuC,EAAAA,IAGjBnC,GAASoC,EAAAA,EAAAA,KAAmB,IAE5BV,QAAQC,IAAI,+DACZ3B,GAAS8B,EAAAA,EAAAA,KAAW,IACpBO,YAAW,IAAMrC,GAAS8B,EAAAA,EAAAA,KAAW,KAAQ,SACvCvB,EAAmBK,EAC3B,MACEc,QAAQY,KAAK,yCAEjB,CAAE,MAAOT,GACPH,QAAQG,MAAM,8BAA+BA,GAC7C7B,GAAS8B,EAAAA,EAAAA,KAAW,IACpBJ,QAAQC,IACN,8DAEF/B,EAAe2C,EAAAA,GACjB,IAWF,CAAChC,EAAoBX,IA0BvB,MAAO,CACL4C,yBAxB8BhC,EAAAA,EAAAA,cAAY,KAErCN,EAMHwB,QAAQC,IACN,gFANFD,QAAQC,IACN,0EAEF3B,GAASoC,EAAAA,EAAAA,KAAmB,KAM9B,MAAMK,EAAWC,aAAY,KAC3B,MAAMC,EAAqBC,SAASC,cAAc,wBAC9CF,IACFG,cAAcL,IACdM,EAAAA,EAAAA,IAAcJ,EAAoBZ,EAAY/B,EAAUJ,GAC1D,GACC,KAEH,MAAO,IAAMkD,cAAcL,EAAS,GACnC,CAACV,EAAY/B,IAIdM,UACAyB,aACD,C,oECtIH,MAgGA,EAhG0BiB,KACxB,MAAOC,EAAQC,IAAanF,EAAAA,EAAAA,UAAS,OAC9BoF,EAAUC,IAAerF,EAAAA,EAAAA,UAAS,OAEzCsF,EAAAA,EAAAA,YAAU,KACS5C,WACf,IAEE,MAAM6C,QAAyBC,EAAAA,EAAAA,MAC/BH,EAAYE,EACd,CAAE,MAAOzB,GACPH,QAAQG,MACN,mDACAA,EAEJ,GAEF2B,EAAU,GACT,KAEHH,EAAAA,EAAAA,YAAU,IACD,KACDJ,GACFA,EAAOQ,YAET,GAED,CAACR,IAgEJ,MAAO,CACLS,eA/DoBlD,EAAAA,EAAAA,cACpB,CAAC3C,EAAY8F,EAAYC,KAAuB,IAADC,EAE7C,IAAKV,EAEH,YADAzB,QAAQY,KAAK,mDAIf,MAAMwB,EACJ,UAAW,IAAIC,MAAOC,cAAcC,QAAQ,QAAS,IACjDC,EAAY,IAAIf,EAASgB,OAAOL,EAAY,CAChDM,sBAAuB,IAEzBF,EAAUG,gBAAgB,mBAC1BnB,EAAUgB,GAEVxC,QAAQC,IACN,iDACA9D,EACA8F,GAGF,MAAMW,EAAwB,QAAhBT,EAAGU,OAAOC,cAAM,IAAAX,OAAA,EAAbA,EAAeY,GAG1BC,GAAeC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBhB,GAAU,IACbiB,UAAWN,EACXO,cAAef,EACfgB,wBAAyBjH,IAI3B6D,QAAQC,IACN,8DACA+C,GAEFR,EAAUa,cAAc,kBAAmBL,GAO3CR,EAAUa,cAAc,kBAAmBL,GAU3ChD,QAAQC,IACN,mEAEFuC,EAAUc,YAAY,2BAVO/D,IAC3BS,QAAQC,IAAI,+CAAgDV,GACxD2C,GACFA,EAAkB3C,EACpB,GAMmE,GAEvE,CAACkC,IAKF,C,mEC3FH,MAyEA,EAzEqBpD,KACnB,MAAM,iBAAEkF,EAAgB,eAAErF,IAAmBC,EAAAA,EAAAA,KAqE7C,MAAO,CAAEC,yBAnEwBW,MAC/Ba,EACAC,EACAP,KAEA,IAAKA,EAEH,YADAU,QAAQG,MAAM,mDAMhB,IAEE,MAAMqD,QAAiBC,EAAAA,EAAIC,KAJd,uBAI8B,CACzCnE,KAAM,CACJwD,GAAInD,EACJ1C,KAAM2C,EACNP,aAAcA,KAIlB,GAAwB,MAApBkE,EAASG,OAAgB,CAI3B,OAHsBH,EAASjE,IAIjC,CACE,MAAM,IAAIqE,MAAM,yCAADC,OAC4BL,EAASG,QAGxD,CAAE,MAAOxD,GAEP,OADAH,QAAQG,MAAM,2CAAuCA,GAC9C,IACT,GAgCiC2D,iBA7BV/E,MAAOgF,EAAiBC,EAAaC,KAG5D,IAEE,MAAMT,QAAiBC,EAAAA,EAAIC,KAJd,2BAI8B,CACzCQ,gBAAiBH,EACjBI,YAAaH,EACbC,UAAWA,IAGb,GAAwB,MAApBT,EAASG,OAKX,OAHA3D,QAAQC,IAAI,0BAA2BuD,EAASjE,MAChDgE,EAAiBa,EAAAA,IAEV,CAAEjF,SAAS,GAElB,MAAM,IAAIyE,MAAM,yCAADC,OAC4BL,EAASG,QAGxD,CAAE,MAAOxD,GAGP,OAFAH,QAAQG,MAAM,4BAA6BA,GAC3CjC,EAAemG,EAAAA,IACR,CAAElF,SAAS,EAAOgB,MAAOA,EAAMmE,QACxC,GAGmD,C,0NCtBvD,EAjDiBnG,KACf,MAAMoG,EAAYvI,IAaX,IAbY,QACjBsI,EAAO,KACPpH,EAAO,UAAS,SAChBsH,EAAW,YAAW,UACtBC,EAAY,IAAI,gBAChBC,GAAkB,EAAK,aACvBC,GAAe,EAAI,aACnBC,GAAe,EAAK,iBACpBC,GAAkB,EAAK,UACvBC,GAAY,EAAI,MAChBC,EAAQ,QAAO,WACfC,EAAaC,EAAAA,IAEdjJ,EADIkJ,GAAYC,EAAAA,EAAAA,GAAAnJ,EAAAoJ,IAEOC,EAAAA,GAAMnI,IAASmI,EAAAA,IAEvBf,GAAOrB,EAAAA,EAAAA,GAAA,CACnBuB,WACAC,YACAC,kBACAC,eACAC,eACAE,YACAC,QACAC,cACGE,GACH,EAmBJ,MAAO,CAAEX,YAAWhB,iBAhBK,SAACe,GAA2B,IAAlBgB,EAAOC,UAAAjF,OAAA,QAAAkF,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5ChB,GAAStB,EAAAA,EAAAA,GAAC,CAAEqB,UAASpH,KAAM,WAAcoI,GAC3C,EAcsCpH,eAZf,SAACoG,GAA2B,IAAlBgB,EAAOC,UAAAjF,OAAA,QAAAkF,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1ChB,GAAStB,EAAAA,EAAAA,GAAC,CAAEqB,UAASpH,KAAM,SAAYoI,GACzC,EAUsDG,cARhC,SAACnB,GAA2B,IAAlBgB,EAAOC,UAAAjF,OAAA,QAAAkF,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzChB,GAAStB,EAAAA,EAAAA,GAAC,CAAEqB,UAASpH,KAAM,QAAWoI,GACxC,EAMqEI,iBAJ5C,SAACpB,GAA2B,IAAlBgB,EAAOC,UAAAjF,OAAA,QAAAkF,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5ChB,GAAStB,EAAAA,EAAAA,GAAC,CAAEqB,UAASpH,KAAM,QAAWoI,GACxC,EAEuF,C,iCClDlF,MAAMK,EAAoB5G,MAAOG,EAAWmB,KAEjD,GADAL,QAAQC,IAAI,6CAA8Cf,GACrDA,GAAkC,IAArBA,EAAUoB,OAI5B,IACE,GAA0B,oBAAfD,EACT,MAAM,IAAIuD,MAAM,iDAEZvD,EAAWnB,EACnB,CAAE,MAAOiB,GACPH,QAAQG,MAAM,+CAAgDA,EAChE,MAVEH,QAAQY,KAAK,kDAUf,C","sources":["components/Loader/Loader.js","components/SearchInput/SearchInput.jsx","hooks/useDroppableArea.js","hooks/useInterComSearch.js","hooks/useRevisions.js","hooks/useToast.js","services/api/refreshService.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport \"./SearchInput.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SearchInput = ({ onSearch, disabled }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    const newSearchText = event.target.value;\r\n    setSearchText(newSearchText);\r\n  };\r\n\r\n  const handleInputKeyPress = (event) => {\r\n    if (event.key === \"Enter\" && searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setSearchText(\"\");\r\n    inputRef.current.focus(); // Keep focus on the input after clearing\r\n  };\r\n  const handleSearchIconClick = () => {\r\n    if (searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-content-container d-flex align-items-center\">\r\n      <FontAwesomeIcon\r\n        icon={faMagnifyingGlass}\r\n        onClick={handleSearchIconClick}\r\n        className=\"search-icon\"\r\n      />\r\n\r\n      <span className=\"ms-4 drag-and-drop-text flex-grow-1\">\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            value={searchText}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputKeyPress}\r\n            placeholder=\"Search...\"\r\n            disabled={disabled}\r\n          />\r\n          {searchText && (\r\n            <Button\r\n              variant=\"btn-link\"\r\n              onClick={handleClearClick}\r\n              className=\"clear-button\"\r\n            >\r\n              ✖\r\n            </Button>\r\n          )}\r\n        </InputGroup>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction, setLoading } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\nimport useRevisions from \"./useRevisions\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  // fetchCsrfTokenAndDependencies as fetchCsrfService,\r\n  getDroppedObjectDetails,\r\n  // fetchCardOwnerDetails as fetchCardOwnerDetailsService,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\n\r\nconst useDroppableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { fetchRevisionsAndParents } = useRevisions();\r\n  const dispatch = useDispatch();\r\n  // ✅ Use `useSelector` to get the latest values from Redux\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const loading = useSelector((state) => state.droppedObject.loading);\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Fetch Revisions and Parents in parallel\r\n          const relativePath = objectDetailsResult.data.cardData.relativePath;\r\n          const [revisionParentData] = await Promise.all([\r\n            fetchRevisionsAndParents(\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              relativePath\r\n            ),\r\n          ]);\r\n          // Dispatch all updates together (batching updates)\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n              parentDetails: revisionParentData || [],\r\n            })\r\n          );\r\n          console.log(\"[fetchObjectDetails] ✅ Redux store updated.\");\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        console.log(\"[fetchObjectDetails] 🏁 Ensuring loading is reset.\");\r\n        dispatch(setLoading(false));\r\n      }\r\n    },\r\n    [dispatch, fetchRevisionsAndParents, showErrorToast]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          // Validate object type\r\n          const objectType = dataItems[0]?.objectType;\r\n          const validTypes = [\"VPMReference\", \"Document\", \"Raw_Material\"];\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n            return;\r\n          }\r\n          dispatch(setIsDroppedAction(true));\r\n          // ✅ Ensure we only start loading if another request isn't running\r\n          console.log(\"[handleDrop] 🔄 Force setting `loading = true`...\");\r\n          dispatch(setLoading(false));\r\n          setTimeout(() => dispatch(setLoading(true)), 0);\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        dispatch(setLoading(false)); // ✅ Reset loading in Redux\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n      // finally {\r\n      //   const latestLoadingState = store.getState().droppedObject.loading;\r\n      //   if (latestLoadingState) {\r\n      //     console.log(\"[handleDrop] ✅ Resetting `loading = false`...\");\r\n      //     setLoading(false);\r\n      //   } else {\r\n      //     console.log(\"[handleDrop] ⏳ `loading` is already false. Skipping reset.\");\r\n      //   }\r\n      // }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    // ✅ Only reset isDropped if it's currently false (prevent overwriting a valid drop)\r\n    if (!isDropped) {\r\n      console.log(\r\n        \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n      );\r\n      dispatch(setIsDroppedAction(false)); // ✅ Reset only if necessary\r\n    } else {\r\n      console.log(\r\n        \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n      );\r\n    }\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDroppableArea;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { loadInterCom } from \"../utils/helpers\";\r\n\r\nconst useInterComSearch = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [InterCom, setInterCom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // console.log(\"[useInterComSearch] Loading InterCom module\");\r\n        const interComInstance = await loadInterCom();\r\n        setInterCom(interComInstance);\r\n      } catch (error) {\r\n        console.error(\r\n          \"[useInterComSearch] Error initializing InterCom:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        // console.log(\"[useInterComSearch] Socket disconnected\");\r\n      }\r\n    };\r\n  }, [socket]);\r\n\r\n  const performSearch = useCallback(\r\n    (searchText, searchOpts, onObjectsSelected) => {\r\n      // Check if InterCom is loaded\r\n      if (!InterCom) {\r\n        console.warn(\"[useInterComSearch] InterCom is not loaded yet.\");\r\n        return;\r\n      }\r\n\r\n      const socketName =\r\n        \"socket\" + new Date().toISOString().replace(/[-:]/g, \"\");\r\n      const newSocket = new InterCom.Socket(socketName, {\r\n        dispatchRetryInternal: 0,\r\n      });\r\n      newSocket.subscribeServer(\"SearchComServer\");\r\n      setSocket(newSocket);\r\n\r\n      console.log(\r\n        \"[useInterComSearch] performSearch called with:\",\r\n        searchText,\r\n        searchOpts\r\n      );\r\n\r\n      const widgetId = window.widget?.id;\r\n      // console.log(\"[useInterComSearch] widget id:\", widgetId);\r\n\r\n      const finalSearchOpts = {\r\n        ...searchOpts,\r\n        widget_id: widgetId,\r\n        app_socket_id: socketName,\r\n        default_search_criteria: searchText,\r\n      };\r\n\r\n      // Register the search context (if needed)\r\n      console.log(\r\n        \"[useInterComSearch] Dispatching RegisterContext event with:\",\r\n        finalSearchOpts\r\n      );\r\n      newSocket.dispatchEvent(\"RegisterContext\", finalSearchOpts);\r\n\r\n      // Dispatch the search event\r\n      // console.log(\r\n      //   \"[useInterComSearch] Dispatching InContextSearch event with:\",\r\n      //   finalSearchOpts\r\n      // );\r\n      newSocket.dispatchEvent(\"InContextSearch\", finalSearchOpts);\r\n\r\n      // Add a listener for search results\r\n      const handleSearchResults = (data) => {\r\n        console.log(\"[useInterComSearch] Search results received:\", data);\r\n        if (onObjectsSelected) {\r\n          onObjectsSelected(data);\r\n        }\r\n      };\r\n\r\n      console.log(\r\n        \"[useInterComSearch] Adding listener for Selected_Objects_search\"\r\n      );\r\n      newSocket.addListener(\"Selected_Objects_search\", handleSearchResults);\r\n    },\r\n    [InterCom]\r\n  );\r\n\r\n  return {\r\n    performSearch,\r\n  };\r\n};\r\n\r\nexport default useInterComSearch;\r\n","import useToast from \"../hooks/useToast\";\r\n\r\nimport api from \"../utils/api\"; // Import axios instance\r\nimport { MSG_REPLACE_SUCCESS, MSG_REPLACE_ERROR } from \"../utils/toastMessages\";\r\n\r\nconst useRevisions = () => {\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n  const fetchRevisionsAndParents = async (\r\n    objectId,\r\n    objectType,\r\n    relativePath\r\n  ) => {\r\n    if (!relativePath) {\r\n      console.error(\"[Fetch Revisions] ❌ Missing relative path.\");\r\n      return;\r\n    }\r\n\r\n    const parentURL = `/revFloat/getParents`;\r\n\r\n    try {\r\n      // Use the axios instance to make the POST request\r\n      const response = await api.post(parentURL, {\r\n        data: {\r\n          id: objectId,\r\n          type: objectType,\r\n          relativePath: relativePath,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const parentDetails = response.data;\r\n\r\n        // 🚀 Return data instead of dispatching\r\n        return parentDetails;\r\n      } else {\r\n        throw new Error(\r\n          `[Fetch Revisions] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[Fetch Revisions] ❌ Error occurred:\", error);\r\n      return null; // Ensure it returns null on error\r\n    }\r\n  };\r\n\r\n  const replaceRevisions = async (selectedParents, droppedData, userEmail) => {\r\n    const parentURL = `/revFloat/floatRevisions`; // Use relative path for axios\r\n\r\n    try {\r\n      // Make the POST request to the replacement API\r\n      const response = await api.post(parentURL, {\r\n        SelectedParents: selectedParents,\r\n        DroppedData: droppedData,\r\n        userEmail: userEmail,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Handle successful replacement\r\n        console.log(\"Replacement successful:\", response.data);\r\n        showSuccessToast(MSG_REPLACE_SUCCESS); // Show success toast\r\n        // You might want to update the Redux store or refetch data here\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(\r\n          `[Replacement API] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during replacement:\", error);\r\n      showErrorToast(MSG_REPLACE_ERROR); // Show error toast\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  return { fetchRevisionsAndParents, replaceRevisions };\r\n};\r\n\r\nexport default useRevisions;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","export const refreshWidgetData = async (dataItems, handleDrop) => {\r\n  console.log(\"[refreshWidgetData] called with dataItems:\", dataItems);\r\n  if (!dataItems || dataItems.length === 0) {\r\n    console.warn(\"[Refresh] No dropped data available to refresh.\");\r\n    return;\r\n  }\r\n  try {\r\n    if (typeof handleDrop !== \"function\") {\r\n      throw new Error(\"[Refresh] handleDrop is not a function.\");\r\n    }\r\n    await handleDrop(dataItems);\r\n  } catch (error) {\r\n    console.error(\"[Refresh] Error during handleDrop execution:\", error);\r\n  }\r\n};\r\n"],"names":["Loader","_jsx","className","children","_ref","onSearch","disabled","searchText","setSearchText","useState","inputRef","useRef","_jsxs","FontAwesomeIcon","icon","faMagnifyingGlass","onClick","handleSearchIconClick","trim","InputGroup","Form","Control","type","ref","value","onChange","event","newSearchText","target","onKeyDown","key","placeholder","Button","variant","handleClearClick","current","focus","useDroppableArea","showErrorToast","useToast","fetchRevisionsAndParents","useRevisions","dispatch","useDispatch","isDropped","useSelector","state","droppedObject","loading","fetchObjectDetails","useCallback","async","objectDetailsResult","getDroppedObjectDetails","dataItems","success","_dataItems$","_dataItems$2","relativePath","data","cardData","revisionParentData","Promise","all","objectId","objectType","setDroppedObjectData","parentDetails","console","log","MSG_FETCH_OBJECT_DETAILS_FAILED","error","setLoading","handleDrop","length","_dataItems$3","includes","MSG_INVALID_OBJECT_TYPE","setIsDroppedAction","setTimeout","warn","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","useInterComSearch","socket","setSocket","InterCom","setInterCom","useEffect","interComInstance","loadInterCom","loadData","disconnect","performSearch","searchOpts","onObjectsSelected","_window$widget","socketName","Date","toISOString","replace","newSocket","Socket","dispatchRetryInternal","subscribeServer","widgetId","window","widget","id","finalSearchOpts","_objectSpread","widget_id","app_socket_id","default_search_criteria","dispatchEvent","addListener","showSuccessToast","response","api","post","status","Error","concat","replaceRevisions","selectedParents","droppedData","userEmail","SelectedParents","DroppedData","MSG_REPLACE_SUCCESS","MSG_REPLACE_ERROR","message","showToast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","_objectWithoutProperties","_excluded","toast","options","arguments","undefined","showInfoToast","showWarningToast","refreshWidgetData"],"sourceRoot":""}