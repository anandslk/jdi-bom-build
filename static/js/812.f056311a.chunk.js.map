{"version":3,"file":"static/js/812.f056311a.chunk.js","mappings":"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","sources":["index.js","components/Confirmation.jsx","components/LoadingScreen.jsx","components/Dialog.jsx","hooks/useConfirmations.js","components/DropdownSelect.jsx","pages/index.jsx","slices/apis/types.js","providers/index.jsx"],"sourcesContent":["import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport { Providers } from \"./providers\";\r\nimport JdiBomPage from \"./pages\";\r\n\r\ncreateRoot(document.getElementById(\"root\")).render(\r\n  <StrictMode>\r\n    <Providers>\r\n      <JdiBomPage />\r\n    </Providers>\r\n  </StrictMode>\r\n);\r\n","import { Box, Chip, Stack, Typography } from \"@mui/material\";\n\n\nexport const ConfirmationScreen = ({\n  parentParts,\n  sourceOrg,\n  selectedItems,\n}) => {\n  return (\n    <>\n      {/* <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        opacity: stage === \"assigning\" ? 0.6 : 1,\n      }}\n    >\n      <Stack spacing={3}>\n      <Typography\n      variant=\"h5\"\n      sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n      >\n      Confirm Your Submission\n        </Typography> */}\n\n      <Stack spacing={3}>\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Parent item(s) to Assign:\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{ marginBottom: 2, whiteSpace: \"pre-line\" }}\n          >\n            {parentParts}\n          </Typography>\n        </Box>\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Source Organization:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {sourceOrg}\n          </Typography>\n        </Box>\n\n        {/* <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Destination JDI Orgs:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {destOrg}\n          </Typography>\n        </Box> */}\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Items to be Processed:\n          </Typography>\n          {selectedItems.length > 0 ? (\n            <Box\n              sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}\n            >\n              {selectedItems.map((item) => (\n                <Chip key={item} label={item} color=\"primary\" />\n              ))}\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              No items selected.\n            </Typography>\n          )}\n        </Box>\n        {/* <Box>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n              Mapped Items:\n            </Typography>\n            {selectedItems.length > 0 ? (\n              <Box\n                sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}l\n              >\n                {selectedItems.map((item) => (\n                  <Chip key={item} label={item} color=\"primary\" />\n                ))}\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                No items selected.\n              </Typography>\n            )}\n          </Box> */}\n        {/* <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Confirm\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => setIsOpen(false)}\n            disabled={isLoading}\n          >\n            Cancel\n          </Button>\n        </Stack> */}\n      </Stack>\n      {/* </Stack>\n    </Paper> */}\n    </>\n  );\n};\n","import { Box, LinearProgress, Paper, Typography } from \"@mui/material\";\n\nexport const LoadingScreen = ({ message }) => {\n  return (\n    <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        textAlign: \"center\",\n        backgroundColor: \"#f5f5f5\",\n        border: \"2px solid #3f51b5\",\n      }}\n    >\n      <Box sx={{ marginBottom: 2 }}>\n        <Typography variant=\"h6\" color=\"primary\" fontWeight=\"bold\">\n          {message}\n        </Typography>\n      </Box>\n      <LinearProgress color=\"primary\" />\n    </Paper>\n  );\n};\n","import { Button, Stack, Typography } from \"@mui/material\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport {  useEffect, useRef } from \"react\";\n\nexport function Dialog({\n  children,\n  isOpen,\n  onSubmit,\n  onCancel,\n  disabled,\n  title,\n}) {\n  const dialogRef = useRef(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    function handleClickOutside(event) {\n      if (dialogRef.current && !dialogRef.current.contains(event.target)) {\n        onCancel();\n      }\n    }\n\n    if (isOpen) window.addEventListener(\"mousedown\", handleClickOutside, { signal });\n\n    return () => controller.abort();\n  }, [isOpen, onCancel]);\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed inset-0 flex items-center justify-center backdrop-blur-xs bg-black/30 z-10\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div\n              ref={dialogRef}\n              className=\"bg-white rounded-2xl p-6 shadow-xl min-w-[70%] md:min-w-[40%] max-w-[60%]\"\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n            >\n              <Typography\n                variant=\"h5\"\n                sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n              >\n                {title}\n              </Typography>\n\n              {disabled && (\n                <div className=\"w-full flex justify-center py-4\">\n                  <LoadingScreen message=\"Searching for parts...\" />\n                </div>\n              )}\n\n              {children}\n\n              <Stack\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"flex-end\"\n                className=\"pt-4\"\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={disabled}\n                >\n                  Confirm\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={onCancel}\n                  disabled={disabled}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","import { atom, useAtom } from \"jotai\";\n\nconst productAtom = atom(false);\n\nexport const useConfirmations = () => {\n  const [isOpen, setIsOpen] = useAtom(productAtom);\n\n  return {\n    isOpen,\n    setIsOpen,\n  };\n};\n","import {\n  Autocomplete,\n  TextField,\n  Chip,\n  Box,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { useOrgListQuery, useRdoListQuery } from \"../slices/apis/app.api\";\n\nexport const DropdownMultiSelect = ({\n  selectedItems,\n  onChange,\n  disabled,\n}) => {\n  const handleSelect = (newValue) => {\n    if (newValue && !selectedItems?.includes(newValue)) {\n      onChange([...selectedItems, newValue]);\n    }\n  };\n\n  const handleDelete = (itemToDelete) => {\n    onChange(selectedItems?.filter((item) => item !== itemToDelete));\n  };\n\n  const { data: rdoList } = useRdoListQuery({});\n  const { data: orgList } = useOrgListQuery({});\n\n  return (\n    <Box\n      sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 2 }}\n    >\n      <Autocomplete\n        options={rdoList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"RDO Name (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n      <Autocomplete\n        options={orgList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Destination JDI Orgs (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n\n      {/* Helper text indicating both selections will be shown */}\n      <Typography variant=\"caption\" color=\"textSecondary\">\n        Selections from both fields will appear below.\n      </Typography>\n\n      <Paper\n        sx={{\n          padding: 2,\n          borderRadius: 2,\n          boxShadow: 2,\n          maxHeight: 200,\n          overflowY: \"auto\",\n        }}\n      >\n        <Typography\n          variant=\"subtitle1\"\n          sx={{ fontWeight: \"bold\", marginBottom: 2 }}\n        >\n          Selected Plants\n        </Typography>\n\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, minHeight: 20 }}>\n          {selectedItems.map((item) => (\n            <Chip\n              key={item}\n              label={item}\n              onDelete={() => handleDelete(item)}\n              color=\"primary\"\n            />\n          ))}\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n","import { useState } from \"react\";\nimport { TextField, Box, Paper, Button, Stack, Alert } from \"@mui/material\";\nimport { ConfirmationScreen } from \"../components/Confirmation\";\nimport { ResultsScreen } from \"../components/Result\";\nimport { Dialog } from \"../components/Dialog\";\nimport { useConfirmations } from \"../hooks/useConfirmations\";\nimport { usePostMutation } from \"../slices/apis/app.api\";\nimport toast from \"react-hot-toast\";\nimport { getErrorMessage } from \"../slices/apis/types\";\nimport { DropdownMultiSelect } from \"../components/DropdownSelect\";\n\nexport const JdiBomPage = () => {\n  // Form fields and error state\n  const [errors, setErrors] = useState({});\n\n  const [formState, setFormState] = useState({\n    parentParts: \"\",\n    sourceOrg: \"\",\n    plants: [],\n  });\n\n  const handleChange = (key, value) => {\n    setFormState((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const { isOpen, setIsOpen } = useConfirmations();\n\n  // --- Form Submission ---\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const newErrors = {};\n\n    if (!formState.parentParts.trim())\n      newErrors.parentParts = \"Parent Part is required\";\n    if (!formState.sourceOrg.trim())\n      newErrors.sourceOrg = \"Source org is required\";\n    if (!formState.plants.length)\n      newErrors.plants = \"Select either RDO Name or Destination JDI Org\";\n\n    setErrors(newErrors);\n\n    if (Object.keys(newErrors).length === 0) setIsOpen(true);\n  };\n\n  // --- Cancel Handler ---\n  const handleCancel = () => setIsOpen(false);\n\n  const [postMutation, { isLoading }] = usePostMutation();\n\n  // --- Confirmation Stage ---\n  const handleConfirmationSubmit = async () => {\n    const { data, error } = await postMutation({\n      parentPart: formState.parentParts,\n      sourceOrg: formState.sourceOrg,\n      plants: formState.plants,\n    });\n\n    if (error) toast.error(getErrorMessage(error));\n\n    setIsOpen(false);\n    toast.success(data.message);\n    // setTimeout(() => navigate(\"/tasks\"), 500);\n  };\n\n  return (\n    <Box sx={{ minHeight: \"calc(100vh - 65px)\", backgroundColor: \"#eef2f6\" }}>\n      <Dialog\n        isOpen={isOpen}\n        title=\"Confirm Your Submission\"\n        onSubmit={handleConfirmationSubmit}\n        onCancel={handleCancel}\n        disabled={isLoading}\n      >\n        <ConfirmationScreen\n          parentParts={formState.parentParts}\n          sourceOrg={formState.sourceOrg}\n          selectedItems={formState.plants}\n        />\n      </Dialog>\n\n      <Box\n        sx={{\n          padding: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          gap: 4,\n          minHeight: \"calc(100vh - 200px)\",\n        }}\n      >\n        <Paper\n          sx={{\n            padding: 4,\n            width: \"100%\",\n            maxWidth: 600,\n            borderRadius: 4,\n            boxShadow: 3,\n          }}\n        >\n          <form onSubmit={handleFormSubmit}>\n            <Stack spacing={3}>\n              <TextField\n                label=\"Parent item(s) to Assign\"\n                variant=\"outlined\"\n                value={formState.parentParts}\n                onChange={(e) => handleChange(\"parentParts\", e.target.value)}\n                error={!!errors.parentParts}\n                helperText={errors.parentParts}\n                fullWidth\n              />\n              <TextField\n                label=\"Source Organization\"\n                variant=\"outlined\"\n                value={formState.sourceOrg}\n                onChange={(e) => handleChange(\"sourceOrg\", e.target.value)}\n                error={!!errors.sourceOrg}\n                helperText={errors.sourceOrg}\n                fullWidth\n              />\n\n              <DropdownMultiSelect\n                selectedItems={formState.plants}\n                onChange={(newSelectedItems) =>\n                  handleChange(\"plants\", newSelectedItems)\n                }\n                disabled={false}\n              />\n\n              {errors.plants && <Alert severity=\"error\">{errors.plants}</Alert>}\n\n              <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Submit\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </Stack>\n          </form>\n        </Paper>\n\n        {/* <LoadingScreen message=\"Assigning items and commoning required parts...\" /> */}\n\n        {/* Results Screen */}\n        {false && (\n          <ResultsScreen\n            parentParts={formState.parentParts}\n            sourceOrg={formState.sourceOrg}\n            selectedItems={formState.plants}\n            onBack={handleCancel}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default JdiBomPage;\n","/**\n * Extracts an error message from an RTK Query error response.\n *\n * @param error - The error object from an API call.\n * @returns The extracted error message or a default message.\n */\nexport function getErrorMessage(error) {\n  if (error && typeof error === \"object\" && \"data\" in error) {\n    const fetchError = error;\n\n    if (\n      typeof fetchError.data === \"object\" &&\n      fetchError.data !== null &&\n      \"message\" in fetchError.data\n    ) {\n      return fetchError.data.message;\n    }\n  }\n\n  if (typeof error === \"object\" && error !== null && \"message\" in error) {\n    console.error(error);\n    return error.message;\n  }\n\n  return \"An unexpected error occurred.\";\n}\n","import { Suspense } from \"react\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Provider } from \"react-redux\";\n\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Bounce, ToastContainer } from \"react-toastify\";\nimport store from \"../store\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport \"../index.css\";\nimport \"../App.css\";\nimport \"../styles/variables.css\";\n\nexport const Providers = ({ children }) => {\n  const queryClient = new QueryClient();\n\n  return (\n    <HelmetProvider>\n      <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <Suspense fallback={<h1>loading</h1>}>\n            <Toaster position=\"top-center\" reverseOrder={false} />\n            <ToastContainer\n              position={\"top-right\"}\n              autoClose={2000}\n              hideProgressBar={false}\n              closeOnClick={true}\n              pauseOnHover={false}\n              pauseOnFocusLoss={false}\n              draggable={true}\n              theme={\"light\"}\n              transition={Bounce}\n            />\n\n            {children}\n          </Suspense>\n        </QueryClientProvider>\n      </Provider>\n    </HelmetProvider>\n  );\n};\n"],"names":["createRoot","document","getElementById","render","_jsx","StrictMode","children","Providers","JdiBomPage","ConfirmationScreen","_ref","parentParts","sourceOrg","selectedItems","_Fragment","_jsxs","Stack","spacing","Box","Typography","variant","sx","fontWeight","marginBottom","whiteSpace","length","display","flexWrap","gap","marginTop","map","item","Chip","label","color","LoadingScreen","message","Paper","padding","width","maxWidth","borderRadius","boxShadow","textAlign","backgroundColor","border","LinearProgress","Dialog","isOpen","onSubmit","onCancel","disabled","title","dialogRef","useRef","useEffect","controller","AbortController","signal","window","addEventListener","event","current","contains","target","abort","className","AnimatePresence","motion","div","initial","opacity","animate","exit","ref","scale","direction","justifyContent","Button","onClick","productAtom","atom","DropdownMultiSelect","_rdoList$data","_orgList$data","onChange","handleSelect","newValue","includes","data","rdoList","useRdoListQuery","orgList","useOrgListQuery","flexDirection","Autocomplete","options","_","renderInput","params","TextField","_objectSpread","fullWidth","maxHeight","overflowY","minHeight","onDelete","handleDelete","itemToDelete","filter","errors","setErrors","useState","formState","setFormState","plants","handleChange","key","value","prev","setIsOpen","useConfirmations","useAtom","handleCancel","postMutation","isLoading","usePostMutation","async","error","parentPart","toast","fetchError","console","getErrorMessage","success","alignItems","e","preventDefault","newErrors","trim","Object","keys","helperText","newSelectedItems","Alert","severity","type","queryClient","QueryClient","HelmetProvider","Provider","store","QueryClientProvider","client","Suspense","fallback","Toaster","position","reverseOrder","ToastContainer","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce"],"sourceRoot":""}