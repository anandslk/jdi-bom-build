{"version":3,"file":"static/js/697.09c0b6c5.chunk.js","mappings":"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","sources":["WidgetLifecycle-munish.jsx","components/DragAndDrop/DragAndDrop.jsx","components/Confirmation.jsx","components/LoadingScreen.jsx","components/Dialog.jsx","hooks/useConfirmations.jsx","components/DropdownSelect.jsx","hooks/useInitializeDropableArea.js","hoc/DragAndDrop.jsx","pages/index.jsx","slices/apis/types.js","providers/index.jsx","components/InitializeWidget.jsx","pages/jdiBom/index.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\";\r\nimport useToast from \"./hooks/useToast\";\r\nimport useDroppableArea from \"./hooks/useDroppableArea\";\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport store from \"./store\"; // ✅ Import Redux store directly\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader/> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import React, { useEffect } from \"react\";\r\nimport useDroppableArea from \"../../hooks/useDroppableArea\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\n\r\nconst DragAndDropComponent = () => {\r\n  const {  handleDrop } = useDroppableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      // console.log(\"Selected objects:\", selectedObjects);\r\n      // console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"droppable-container mt-4\"\r\n      >\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import { Box, Chip, Stack, Typography } from \"@mui/material\";\n\n\nexport const ConfirmationScreen = ({\n  parentParts,\n  sourceOrg,\n  selectedItems,\n}) => {\n  return (\n    <>\n      {/* <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        opacity: stage === \"assigning\" ? 0.6 : 1,\n      }}\n    >\n      <Stack spacing={3}>\n      <Typography\n      variant=\"h5\"\n      sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n      >\n      Confirm Your Submission\n        </Typography> */}\n\n      <Stack spacing={3}>\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Parent item(s) to Assign:\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{ marginBottom: 2, whiteSpace: \"pre-line\" }}\n          >\n            {parentParts}\n          </Typography>\n        </Box>\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Source Organization:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {sourceOrg}\n          </Typography>\n        </Box>\n\n        {/* <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Destination JDI Orgs:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {destOrg}\n          </Typography>\n        </Box> */}\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Items to be Processed:\n          </Typography>\n          {selectedItems.length > 0 ? (\n            <Box\n              sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}\n            >\n              {selectedItems.map((item) => (\n                <Chip key={item} label={item} color=\"primary\" />\n              ))}\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              No items selected.\n            </Typography>\n          )}\n        </Box>\n        {/* <Box>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n              Mapped Items:\n            </Typography>\n            {selectedItems.length > 0 ? (\n              <Box\n                sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}l\n              >\n                {selectedItems.map((item) => (\n                  <Chip key={item} label={item} color=\"primary\" />\n                ))}\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                No items selected.\n              </Typography>\n            )}\n          </Box> */}\n        {/* <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Confirm\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => setIsOpen(false)}\n            disabled={isLoading}\n          >\n            Cancel\n          </Button>\n        </Stack> */}\n      </Stack>\n      {/* </Stack>\n    </Paper> */}\n    </>\n  );\n};\n","import { Box, LinearProgress, Paper, Typography } from \"@mui/material\";\n\nexport const LoadingScreen = ({ message }) => {\n  return (\n    <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        textAlign: \"center\",\n        backgroundColor: \"#f5f5f5\",\n        border: \"2px solid #3f51b5\",\n      }}\n    >\n      <Box sx={{ marginBottom: 2 }}>\n        <Typography variant=\"h6\" color=\"primary\" fontWeight=\"bold\">\n          {message}\n        </Typography>\n      </Box>\n      <LinearProgress color=\"primary\" />\n    </Paper>\n  );\n};\n","import { Button, Stack, Typography } from \"@mui/material\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport {  useEffect, useRef } from \"react\";\n\nexport function Dialog({\n  children,\n  isOpen,\n  onSubmit,\n  onCancel,\n  disabled,\n  title,\n}) {\n  const dialogRef = useRef(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    function handleClickOutside(event) {\n      if (dialogRef.current && !dialogRef.current.contains(event.target)) {\n        onCancel();\n      }\n    }\n\n    if (isOpen) window.addEventListener(\"mousedown\", handleClickOutside, { signal });\n\n    return () => controller.abort();\n  }, [isOpen, onCancel]);\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed inset-0 flex items-center justify-center backdrop-blur-xs bg-black/30 z-10\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div\n              ref={dialogRef}\n              className=\"bg-white rounded-2xl p-6 shadow-xl min-w-[70%] md:min-w-[40%] max-w-[60%]\"\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n            >\n              <Typography\n                variant=\"h5\"\n                sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n              >\n                {title}\n              </Typography>\n\n              {disabled && (\n                <div className=\"w-full flex justify-center py-4\">\n                  <LoadingScreen message=\"Searching for parts...\" />\n                </div>\n              )}\n\n              {children}\n\n              <Stack\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"flex-end\"\n                className=\"pt-4\"\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={disabled}\n                >\n                  Confirm\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={onCancel}\n                  disabled={disabled}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","import { atom, useAtom } from \"jotai\";\n\nconst productAtom = atom(false);\n\nexport const useConfirmations = () => {\n  const [isOpen, setIsOpen] = useAtom(productAtom);\n\n  return {\n    isOpen,\n    setIsOpen,\n  };\n};\n","import {\n  Autocomplete,\n  TextField,\n  Chip,\n  Box,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { useOrgListQuery, useRdoListQuery } from \"../slices/apis/app.api\";\n\nexport const DropdownMultiSelect = ({\n  selectedItems,\n  onChange,\n  disabled,\n}) => {\n  const handleSelect = (newValue) => {\n    if (newValue && !selectedItems?.includes(newValue)) {\n      onChange([...selectedItems, newValue]);\n    }\n  };\n\n  const handleDelete = (itemToDelete) => {\n    onChange(selectedItems?.filter((item) => item !== itemToDelete));\n  };\n\n  const { data: rdoList } = useRdoListQuery({});\n  const { data: orgList } = useOrgListQuery({});\n\n  return (\n    <Box\n      sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 2 }}\n    >\n      <Autocomplete\n        options={rdoList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"RDO Name (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n      <Autocomplete\n        options={orgList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Destination JDI Orgs (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n\n      {/* Helper text indicating both selections will be shown */}\n      <Typography variant=\"caption\" color=\"textSecondary\">\n        Selections from both fields will appear below.\n      </Typography>\n\n      <Paper\n        sx={{\n          padding: 2,\n          borderRadius: 2,\n          boxShadow: 2,\n          maxHeight: 200,\n          overflowY: \"auto\",\n        }}\n      >\n        <Typography\n          variant=\"subtitle1\"\n          sx={{ fontWeight: \"bold\", marginBottom: 2 }}\n        >\n          Selected Plants\n        </Typography>\n\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, minHeight: 20 }}>\n          {selectedItems.map((item) => (\n            <Chip\n              key={item}\n              label={item}\n              onDelete={() => handleDelete(item)}\n              color=\"primary\"\n            />\n          ))}\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n","import { useEffect, useRef, useCallback } from \"react\";\r\nimport useDroppableArea from \"./useDroppableArea\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\n\r\nexport const useInitializeDroppableArea = () => {\r\n  const { initializeDroppableArea } = useDroppableArea();\r\n  const hasInitializedDroppable = useRef(false);\r\n\r\n  // ✅ Memoized function to prevent re-creation\r\n  const initDroppable = useCallback(() => {\r\n    if (!hasInitializedDroppable.current) {\r\n      initializeDroppableArea();\r\n      hasInitializedDroppable.current = true;\r\n    }\r\n  }, [initializeDroppableArea]);\r\n\r\n  // ✅ Use shallowEqual to prevent unnecessary re-renders\r\n  const isDropped = useSelector(\r\n    (state) => state.droppedObject.isDropped,\r\n    shallowEqual\r\n  );\r\n\r\n  // ✅ Use a single effect to optimize performance\r\n  useEffect(() => {\r\n    initDroppable();\r\n\r\n    console.info(\"[RevisionFloat] State Changes:\", { isDropped });\r\n  }, [initDroppable, isDropped]);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DragAndDropComponent from \"../components/DragAndDrop/DragAndDrop\";\r\nimport Loader from \"../components/Loader/Loader\";\r\nimport { useInitializeDroppableArea } from \"../hooks/useInitializeDropableArea\";\r\nimport useDroppableArea from \"../hooks/useDroppableArea\";\r\n\r\nexport const WithDroppableLogic = ({ children, objectDropped }) => {\r\n  const { loading } = useDroppableArea();\r\n\r\n  useInitializeDroppableArea();\r\n\r\n  // Use Redux for isDropped\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n\r\n  // Check if a dynamic loadingObject value is passed via props;\r\n  // if not, fallback to Redux.\r\n  const loadingObject = objectDropped;\r\n\r\n  console.warn(\"loadingObject...............\", loadingObject);\r\n\r\n  // Show loading states\r\n  if (loading || loadingObject) {\r\n    return <Loader />;\r\n  }\r\n\r\n  // If not dropped, show drag-and-drop area\r\n  if (!isDropped) {\r\n    return <DragAndDropComponent />;\r\n  }\r\n\r\n  // Render the wrapped component when isDropped = true\r\n  return children;\r\n};\r\n","import { useState } from \"react\";\nimport { TextField, Box, Paper, Button, Stack, Alert } from \"@mui/material\";\nimport { ConfirmationScreen } from \"../components/Confirmation\";\nimport { ResultsScreen } from \"../components/Result\";\nimport { Dialog } from \"../components/Dialog\";\nimport { useConfirmations } from \"../hooks/useConfirmations\";\nimport { usePostMutation } from \"../slices/apis/app.api\";\nimport toast from \"react-hot-toast\";\nimport { getErrorMessage } from \"../slices/apis/types\";\nimport { DropdownMultiSelect } from \"../components/DropdownSelect\";\nimport { WithDroppableLogic } from \"../hoc/DragAndDrop\";\nimport { useSelector } from \"react-redux\";\n\nexport const JdiBomPage = () => {\n  const loadingParentDetails = useSelector(\n    (state) => state.droppedObject.loadingParentDetails\n  );\n\n  // Form fields and error state\n  const [errors, setErrors] = useState({});\n\n  const [formState, setFormState] = useState({\n    parentParts: \"\",\n    sourceOrg: \"\",\n    plants: [],\n  });\n\n  const handleChange = (key, value) => {\n    setFormState((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const { isOpen, setIsOpen } = useConfirmations();\n\n  // --- Form Submission ---\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const newErrors = {};\n\n    if (!formState.parentParts.trim())\n      newErrors.parentParts = \"Parent Part is required\";\n    if (!formState.sourceOrg.trim())\n      newErrors.sourceOrg = \"Source org is required\";\n    if (!formState.plants.length)\n      newErrors.plants = \"Select either RDO Name or Destination JDI Org\";\n\n    setErrors(newErrors);\n\n    if (Object.keys(newErrors).length === 0) setIsOpen(true);\n  };\n\n  // --- Cancel Handler ---\n  const handleCancel = () => setIsOpen(false);\n\n  const [postMutation, { isLoading }] = usePostMutation();\n\n  // --- Confirmation Stage ---\n  const handleConfirmationSubmit = async () => {\n    const { data, error } = await postMutation({\n      parentPart: formState.parentParts,\n      sourceOrg: formState.sourceOrg,\n      plants: formState.plants,\n    });\n\n    if (error) toast.error(getErrorMessage(error));\n\n    setIsOpen(false);\n    toast.success(data.message);\n    // setTimeout(() => navigate(\"/tasks\"), 500);\n  };\n\n  return (\n    <>\n      <WithDroppableLogic objectDropped={loadingParentDetails}>\n      <Box\n        sx={{\n          minHeight: \"calc(100vh - 65px)\",\n          backgroundColor: \"#eef2f6\",\n          overflow: \"auto\",\n        }}\n      >\n        <Dialog\n          isOpen={isOpen}\n          title=\"Confirm Your Submission\"\n          onSubmit={handleConfirmationSubmit}\n          onCancel={handleCancel}\n          disabled={isLoading}\n        >\n          <ConfirmationScreen\n            parentParts={formState.parentParts}\n            sourceOrg={formState.sourceOrg}\n            selectedItems={formState.plants}\n          />\n        </Dialog>\n\n        <Box\n          sx={{\n            padding: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            gap: 4,\n            minHeight: \"calc(100vh - 200px)\",\n            overflow: \"auto\",\n          }}\n        >\n          <Paper\n            sx={{\n              padding: 4,\n              width: \"100%\",\n              maxWidth: 600,\n              borderRadius: 4,\n              boxShadow: 3,\n            }}\n          >\n            <form onSubmit={handleFormSubmit}>\n              <Stack spacing={3}>\n                <TextField\n                  label=\"Parent item(s) to Assign\"\n                  variant=\"outlined\"\n                  value={formState.parentParts}\n                  onChange={(e) => handleChange(\"parentParts\", e.target.value)}\n                  error={!!errors.parentParts}\n                  helperText={errors.parentParts}\n                  fullWidth\n                />\n                <TextField\n                  label=\"Source Organization\"\n                  variant=\"outlined\"\n                  value={formState.sourceOrg}\n                  onChange={(e) => handleChange(\"sourceOrg\", e.target.value)}\n                  error={!!errors.sourceOrg}\n                  helperText={errors.sourceOrg}\n                  fullWidth\n                />\n\n                <DropdownMultiSelect\n                  selectedItems={formState.plants}\n                  onChange={(newSelectedItems) =>\n                    handleChange(\"plants\", newSelectedItems)\n                  }\n                  disabled={false}\n                />\n\n                {errors.plants && (\n                  <Alert severity=\"error\">{errors.plants}</Alert>\n                )}\n\n                <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Submit\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={handleCancel}\n                  >\n                    Cancel\n                  </Button>\n                </Stack>\n              </Stack>\n            </form>\n          </Paper>\n\n          {/* <LoadingScreen message=\"Assigning items and commoning required parts...\" /> */}\n\n          {/* Results Screen */}\n          {false && (\n            <ResultsScreen\n              parentParts={formState.parentParts}\n              sourceOrg={formState.sourceOrg}\n              selectedItems={formState.plants}\n              onBack={handleCancel}\n            />\n          )}\n        </Box>\n      </Box>\n      </WithDroppableLogic>\n    </>\n  );\n};\n\nexport default JdiBomPage;\n","/**\n * Extracts an error message from an RTK Query error response.\n *\n * @param error - The error object from an API call.\n * @returns The extracted error message or a default message.\n */\nexport function getErrorMessage(error) {\n  if (error && typeof error === \"object\" && \"data\" in error) {\n    const fetchError = error;\n\n    if (\n      typeof fetchError.data === \"object\" &&\n      fetchError.data !== null &&\n      \"message\" in fetchError.data\n    ) {\n      return fetchError.data.message;\n    }\n  }\n\n  if (typeof error === \"object\" && error !== null && \"message\" in error) {\n    console.error(error);\n    return error.message;\n  }\n\n  return \"An unexpected error occurred.\";\n}\n","import {  Suspense } from \"react\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Provider } from \"react-redux\";\n\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Bounce, ToastContainer } from \"react-toastify\";\nimport store from \"../store\";\n\nexport const Providers = ({ children }) => {\n  const queryClient = new QueryClient();\n\n  return (\n    <HelmetProvider>\n      <Provider store={store}>\n          <QueryClientProvider client={queryClient}>\n            <Suspense fallback={<h1>loading</h1>}>\n              <Toaster position=\"top-center\" reverseOrder={false} />\n              <ToastContainer\n                position={\"top-right\"}\n                autoClose={2000}\n                hideProgressBar={false}\n                closeOnClick={true}\n                pauseOnHover={false}\n                pauseOnFocusLoss={false}\n                draggable={true}\n                theme={\"light\"}\n                transition={Bounce}\n              />\n\n              {children}\n            </Suspense>\n          </QueryClientProvider>\n      </Provider>\n    </HelmetProvider>\n  );\n};\n","import { JSX } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Providers } from \"../providers\";\nimport WidgetLifecycle from \"../WidgetLifecycle-munish\";\n\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n// import \"../App.css\";\n// import \"../styles/variables.css\";\n// import \"./index.css\";\n\n// Global React root reference\nlet root = null;\n\n/**\n * Mounts the React application dynamically.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nfunction start(AppComponent) {\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\n    window.PlatformAPI = PlatformAPI;\n  });\n\n  // Find the root element within the widget's body (if available)\n  const widget = window.widget;\n\n  let rootElement =\n    widget?.body?.querySelector(\"#root\") || document.getElementById(\"root\");\n\n  // If no root element exists, create one and append it to the widget body or document body.\n  if (!rootElement) {\n    rootElement = document.createElement(\"div\");\n    rootElement.id = \"root\";\n    (widget?.body || document.body).appendChild(rootElement);\n  }\n\n  root = root || createRoot(rootElement);\n  root.render(\n    <Providers>\n      <WidgetLifecycle />\n\n      {AppComponent}\n    </Providers>\n  );\n\n  return AppComponent;\n}\n\n// Function to inject the refresh listener script into the **parent window**\nfunction injectRefreshListener() {\n  const scriptContent = `\n      function listenForRefreshClicks() {\n        // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\n  \n        document.body.addEventListener(\"click\", function (event) {\n          let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\n  \n          if (refreshButton) {\n            // console.log(\"✅ [Parent] User clicked Refresh!\");\n            sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\n            // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\n          }\n        }, true);\n      }\n  \n      // ✅ Ensure event listener is added even if DOM is already loaded\n      if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\n      } else {\n        listenForRefreshClicks();\n      }\n    `;\n\n  // Inject script **into the parent window**\n  if (window.parent && window.parent.document) {\n    let injectedScript = window.parent.document.createElement(\"script\");\n    injectedScript.textContent = scriptContent;\n    window.parent.document.body.appendChild(injectedScript);\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\n  } else {\n    console.warn(\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\n    );\n  }\n}\n\n/**\n * Initializes the widget and returns the mounted component.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nexport function initializeWidget(AppComponent) {\n  // ✅ Inject the script when the React app starts\n  injectRefreshListener();\n\n  if (window.widget) {\n    let hasOnLoadRun = false;\n\n    window.widget.addEvent(\"onLoad\", () => {\n      if (hasOnLoadRun) {\n        console.warn(\n          \"⏳ onLoad was already executed. Ignoring duplicate trigger.\"\n        );\n        return;\n      }\n\n      hasOnLoadRun = true;\n      start(AppComponent);\n    });\n  } else {\n    console.error(\"❌ Widget not detected! onLoad cannot be registered.\");\n  }\n\n  return AppComponent;\n}\n","import { useSelector } from \"react-redux\";\nimport { initializeWidget } from \"../../components/InitializeWidget\";\nimport { JdiBomPage } from \"../../pages\";\n\nconst JdiBomPageWrapper = () => {\n  const loadingParentDetails = useSelector(\n    (state) => state.droppedObject.loadingParentDetails\n  );\n\n  console.log(\"loadingParentDetails:\", loadingParentDetails);\n\n  return <JdiBomPage objectDropped={loadingParentDetails} />;\n};\n\n// Pass the component directly to initializeWidget\nconst JdiBomWidget = () => initializeWidget(<JdiBomPage />);\n\nexport default JdiBomWidget;\n"],"names":["WidgetLifecycle","handleDrop","useDroppableArea","showSuccessToast","showErrorToast","useToast","loading","setLoading","useState","useEffect","window","widget","console","trace","addEvent","async","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","includes","isAutoTriggeredRefresh","warn","removeItem","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","data","items","length","error","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","_jsx","Loader","DragAndDropComponent","performSearch","useInterComSearch","_Fragment","children","_jsxs","className","Image","style","width","height","src","alt","SearchInput","onSearch","searchText","title","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","id","objectId","objectType","ConfirmationScreen","_ref","parentParts","sourceOrg","selectedItems","Stack","spacing","Box","Typography","variant","sx","fontWeight","marginBottom","whiteSpace","display","flexWrap","gap","marginTop","map","item","Chip","label","color","LoadingScreen","message","Paper","padding","maxWidth","borderRadius","boxShadow","textAlign","backgroundColor","border","LinearProgress","Dialog","isOpen","onSubmit","onCancel","disabled","dialogRef","useRef","controller","AbortController","signal","addEventListener","event","current","contains","target","abort","AnimatePresence","motion","div","initial","opacity","animate","exit","ref","scale","direction","justifyContent","Button","onClick","productAtom","atom","DropdownMultiSelect","_rdoList$data","_orgList$data","onChange","handleSelect","newValue","rdoList","useRdoListQuery","orgList","useOrgListQuery","flexDirection","Autocomplete","options","_","renderInput","params","TextField","_objectSpread","fullWidth","maxHeight","overflowY","minHeight","onDelete","handleDelete","itemToDelete","filter","WithDroppableLogic","objectDropped","useInitializeDroppableArea","initializeDroppableArea","hasInitializedDroppable","initDroppable","useCallback","isDropped","useSelector","state","shallowEqual","info","loadingObject","JdiBomPage","loadingParentDetails","errors","setErrors","formState","setFormState","plants","handleChange","key","value","prev","setIsOpen","useConfirmations","useAtom","handleCancel","postMutation","isLoading","usePostMutation","overflow","parentPart","toast","fetchError","getErrorMessage","success","alignItems","e","preventDefault","newErrors","trim","Object","keys","helperText","newSelectedItems","Alert","severity","type","Providers","queryClient","QueryClient","HelmetProvider","Provider","QueryClientProvider","client","Suspense","fallback","Toaster","position","reverseOrder","ToastContainer","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","root","initializeWidget","AppComponent","parent","document","injectedScript","createElement","textContent","body","appendChild","injectRefreshListener","hasOnLoadRun","_widget$body","requirejs","PlatformAPI","rootElement","querySelector","getElementById","createRoot","render","start","JdiBomWidget"],"sourceRoot":""}