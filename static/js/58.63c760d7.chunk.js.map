{"version":3,"file":"static/js/58.63c760d7.chunk.js","mappings":"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","sources":["WidgetLifecycle-munish.jsx","components/Loader/Loader.js","components/SearchInput/SearchInput.jsx","hooks/useDroppableArea.js","hooks/useInterComSearch.js","hooks/useRevisions.js","hooks/useToast.js","providers/index.jsx","components/InitializeWidget.jsx","components/Confirmation.jsx","components/LoadingScreen.jsx","components/Dialog.jsx","hooks/useConfirmations.js","components/DropdownSelect.jsx","pages/jdiBom/JdiBomPage.jsx","slices/apis/types.js","components/WithDroppable/DragAndDrop.jsx","components/WithDroppable/index.jsx","pages/jdiBom/index.jsx","services/api/refreshService.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"./services/api/refreshService\";\r\nimport useToast from \"./hooks/useToast\";\r\nimport useDroppableArea from \"./hooks/useDroppableArea\";\r\nimport { MSG_REFRESH_ERROR, MSG_REFRESH_SUCCESS } from \"./utils/toastMessages\";\r\nimport store from \"./store\"; // ✅ Import Redux store directly\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useDroppableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader/> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport \"./SearchInput.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SearchInput = ({ onSearch, disabled }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    const newSearchText = event.target.value;\r\n    setSearchText(newSearchText);\r\n  };\r\n\r\n  const handleInputKeyPress = (event) => {\r\n    if (event.key === \"Enter\" && searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setSearchText(\"\");\r\n    inputRef.current.focus(); // Keep focus on the input after clearing\r\n  };\r\n  const handleSearchIconClick = () => {\r\n    if (searchText.trim()) {\r\n      onSearch(searchText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-content-container d-flex align-items-center\">\r\n      <FontAwesomeIcon\r\n        icon={faMagnifyingGlass}\r\n        onClick={handleSearchIconClick}\r\n        className=\"search-icon\"\r\n      />\r\n\r\n      <span className=\"ms-4 drag-and-drop-text flex-grow-1\">\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            value={searchText}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputKeyPress}\r\n            placeholder=\"Search...\"\r\n            disabled={disabled}\r\n          />\r\n          {searchText && (\r\n            <Button\r\n              variant=\"btn-link\"\r\n              onClick={handleClearClick}\r\n              className=\"clear-button\"\r\n            >\r\n              ✖\r\n            </Button>\r\n          )}\r\n        </InputGroup>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction, setLoading } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\nimport useRevisions from \"./useRevisions\";\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  // fetchCsrfTokenAndDependencies as fetchCsrfService,\r\n  getDroppedObjectDetails,\r\n  // fetchCardOwnerDetails as fetchCardOwnerDetailsService,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\n\r\nconst useDroppableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { fetchRevisionsAndParents } = useRevisions();\r\n  const dispatch = useDispatch();\r\n  // ✅ Use `useSelector` to get the latest values from Redux\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const loading = useSelector((state) => state.droppedObject.loading);\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Fetch Revisions and Parents in parallel\r\n          const relativePath = objectDetailsResult.data.cardData.relativePath;\r\n          const [revisionParentData] = await Promise.all([\r\n            fetchRevisionsAndParents(\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              relativePath\r\n            ),\r\n          ]);\r\n          // Dispatch all updates together (batching updates)\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n              parentDetails: revisionParentData || [],\r\n            })\r\n          );\r\n          console.log(\"[fetchObjectDetails] ✅ Redux store updated.\");\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        console.log(\"[fetchObjectDetails] 🏁 Ensuring loading is reset.\");\r\n        dispatch(setLoading(false));\r\n      }\r\n    },\r\n    [dispatch, fetchRevisionsAndParents, showErrorToast]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          // Validate object type\r\n          const objectType = dataItems[0]?.objectType;\r\n          const validTypes = [\"VPMReference\", \"Document\", \"Raw_Material\"];\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n            return;\r\n          }\r\n          dispatch(setIsDroppedAction(true));\r\n          // ✅ Ensure we only start loading if another request isn't running\r\n          console.log(\"[handleDrop] 🔄 Force setting `loading = true`...\");\r\n          dispatch(setLoading(false));\r\n          setTimeout(() => dispatch(setLoading(true)), 0);\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        dispatch(setLoading(false)); // ✅ Reset loading in Redux\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n      // finally {\r\n      //   const latestLoadingState = store.getState().droppedObject.loading;\r\n      //   if (latestLoadingState) {\r\n      //     console.log(\"[handleDrop] ✅ Resetting `loading = false`...\");\r\n      //     setLoading(false);\r\n      //   } else {\r\n      //     console.log(\"[handleDrop] ⏳ `loading` is already false. Skipping reset.\");\r\n      //   }\r\n      // }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    // ✅ Only reset isDropped if it's currently false (prevent overwriting a valid drop)\r\n    if (!isDropped) {\r\n      console.log(\r\n        \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n      );\r\n      dispatch(setIsDroppedAction(false)); // ✅ Reset only if necessary\r\n    } else {\r\n      console.log(\r\n        \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n      );\r\n    }\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDroppableArea;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { loadInterCom } from \"../utils/helpers\";\r\n\r\nconst useInterComSearch = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [InterCom, setInterCom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // console.log(\"[useInterComSearch] Loading InterCom module\");\r\n        const interComInstance = await loadInterCom();\r\n        setInterCom(interComInstance);\r\n      } catch (error) {\r\n        console.error(\r\n          \"[useInterComSearch] Error initializing InterCom:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        // console.log(\"[useInterComSearch] Socket disconnected\");\r\n      }\r\n    };\r\n  }, [socket]);\r\n\r\n  const performSearch = useCallback(\r\n    (searchText, searchOpts, onObjectsSelected) => {\r\n      // Check if InterCom is loaded\r\n      if (!InterCom) {\r\n        console.warn(\"[useInterComSearch] InterCom is not loaded yet.\");\r\n        return;\r\n      }\r\n\r\n      const socketName =\r\n        \"socket\" + new Date().toISOString().replace(/[-:]/g, \"\");\r\n      const newSocket = new InterCom.Socket(socketName, {\r\n        dispatchRetryInternal: 0,\r\n      });\r\n      newSocket.subscribeServer(\"SearchComServer\");\r\n      setSocket(newSocket);\r\n\r\n      console.log(\r\n        \"[useInterComSearch] performSearch called with:\",\r\n        searchText,\r\n        searchOpts\r\n      );\r\n\r\n      const widgetId = window.widget?.id;\r\n      // console.log(\"[useInterComSearch] widget id:\", widgetId);\r\n\r\n      const finalSearchOpts = {\r\n        ...searchOpts,\r\n        widget_id: widgetId,\r\n        app_socket_id: socketName,\r\n        default_search_criteria: searchText,\r\n      };\r\n\r\n      // Register the search context (if needed)\r\n      console.log(\r\n        \"[useInterComSearch] Dispatching RegisterContext event with:\",\r\n        finalSearchOpts\r\n      );\r\n      newSocket.dispatchEvent(\"RegisterContext\", finalSearchOpts);\r\n\r\n      // Dispatch the search event\r\n      // console.log(\r\n      //   \"[useInterComSearch] Dispatching InContextSearch event with:\",\r\n      //   finalSearchOpts\r\n      // );\r\n      newSocket.dispatchEvent(\"InContextSearch\", finalSearchOpts);\r\n\r\n      // Add a listener for search results\r\n      const handleSearchResults = (data) => {\r\n        console.log(\"[useInterComSearch] Search results received:\", data);\r\n        if (onObjectsSelected) {\r\n          onObjectsSelected(data);\r\n        }\r\n      };\r\n\r\n      console.log(\r\n        \"[useInterComSearch] Adding listener for Selected_Objects_search\"\r\n      );\r\n      newSocket.addListener(\"Selected_Objects_search\", handleSearchResults);\r\n    },\r\n    [InterCom]\r\n  );\r\n\r\n  return {\r\n    performSearch,\r\n  };\r\n};\r\n\r\nexport default useInterComSearch;\r\n","import useToast from \"../hooks/useToast\";\r\n\r\nimport api from \"../utils/api\"; // Import axios instance\r\nimport { MSG_REPLACE_SUCCESS, MSG_REPLACE_ERROR } from \"../utils/toastMessages\";\r\n\r\nconst useRevisions = () => {\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n  const fetchRevisionsAndParents = async (\r\n    objectId,\r\n    objectType,\r\n    relativePath\r\n  ) => {\r\n    if (!relativePath) {\r\n      console.error(\"[Fetch Revisions] ❌ Missing relative path.\");\r\n      return;\r\n    }\r\n\r\n    const parentURL = `/revFloat/getParents`;\r\n\r\n    try {\r\n      // Use the axios instance to make the POST request\r\n      const response = await api.post(parentURL, {\r\n        data: {\r\n          id: objectId,\r\n          type: objectType,\r\n          relativePath: relativePath,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const parentDetails = response.data;\r\n\r\n        // 🚀 Return data instead of dispatching\r\n        return parentDetails;\r\n      } else {\r\n        throw new Error(\r\n          `[Fetch Revisions] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[Fetch Revisions] ❌ Error occurred:\", error);\r\n      return null; // Ensure it returns null on error\r\n    }\r\n  };\r\n\r\n  const replaceRevisions = async (selectedParents, droppedData, userEmail) => {\r\n    const parentURL = `/revFloat/floatRevisions`; // Use relative path for axios\r\n\r\n    try {\r\n      // Make the POST request to the replacement API\r\n      const response = await api.post(parentURL, {\r\n        SelectedParents: selectedParents,\r\n        DroppedData: droppedData,\r\n        userEmail: userEmail,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Handle successful replacement\r\n        console.log(\"Replacement successful:\", response.data);\r\n        showSuccessToast(MSG_REPLACE_SUCCESS); // Show success toast\r\n        // You might want to update the Redux store or refetch data here\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(\r\n          `[Replacement API] HTTP error! status: ${response.status}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during replacement:\", error);\r\n      showErrorToast(MSG_REPLACE_ERROR); // Show error toast\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  return { fetchRevisionsAndParents, replaceRevisions };\r\n};\r\n\r\nexport default useRevisions;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import { Suspense } from \"react\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Provider } from \"react-redux\";\n\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Bounce, ToastContainer } from \"react-toastify\";\nimport store from \"../store\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport \"../index.css\";\nimport \"../App.css\";\nimport \"../styles/variables.css\";\nimport Loader from \"src/components/Loader/Loader\";\n\nexport const Providers = ({ children }) => {\n  const queryClient = new QueryClient();\n\n  return (\n    <HelmetProvider>\n      <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <Suspense fallback={<Loader/>}>\n            <ToastContainer\n              position={\"top-right\"}\n              autoClose={2000}\n              hideProgressBar={false}\n              closeOnClick={true}\n              pauseOnHover={false}\n              pauseOnFocusLoss={false}\n              draggable={true}\n              theme={\"light\"}\n              transition={Bounce}\n            />\n\n            {children}\n          </Suspense>\n        </QueryClientProvider>\n      </Provider>\n    </HelmetProvider>\n  );\n};\n","import { createRoot } from \"react-dom/client\";\nimport { Providers } from \"../providers\";\nimport WidgetLifecycle from \"../WidgetLifecycle-munish\";\n\n// Global React root reference\nlet root = null;\n\n/**\n * Mounts the React application dynamically.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nfunction start(AppComponent) {\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\n    window.PlatformAPI = PlatformAPI;\n  });\n\n  // Find the root element within the widget's body (if available)\n  const widget = window.widget;\n\n  let rootElement =\n    widget?.body?.querySelector(\"#root\") || document.getElementById(\"root\");\n\n  // If no root element exists, create one and append it to the widget body or document body.\n  if (!rootElement) {\n    rootElement = document.createElement(\"div\");\n    rootElement.id = \"root\";\n    (widget?.body || document.body).appendChild(rootElement);\n  }\n\n  root = root || createRoot(rootElement);\n  root.render(\n    <Providers>\n      <WidgetLifecycle />\n\n      {AppComponent}\n    </Providers>\n  );\n\n  return AppComponent;\n}\n\n// Function to inject the refresh listener script into the **parent window**\nfunction injectRefreshListener() {\n  const scriptContent = `\n      function listenForRefreshClicks() {\n        // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\n  \n        document.body.addEventListener(\"click\", function (event) {\n          let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\n  \n          if (refreshButton) {\n            // console.log(\"✅ [Parent] User clicked Refresh!\");\n            sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\n            // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\n          }\n        }, true);\n      }\n  \n      // ✅ Ensure event listener is added even if DOM is already loaded\n      if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\n      } else {\n        listenForRefreshClicks();\n      }\n    `;\n\n  // Inject script **into the parent window**\n  if (window.parent && window.parent.document) {\n    let injectedScript = window.parent.document.createElement(\"script\");\n    injectedScript.textContent = scriptContent;\n    window.parent.document.body.appendChild(injectedScript);\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\n  } else {\n    console.warn(\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\n    );\n  }\n}\n\n/**\n * Initializes the widget and returns the mounted component.\n * @param {JSX.Element} AppComponent - The main component to render inside the app.\n * @returns {JSX.Element} - Returns the mounted component.\n */\nexport function initializeWidget(AppComponent) {\n  // ✅ Inject the script when the React app starts\n  injectRefreshListener();\n\n  if (window.widget) {\n    let hasOnLoadRun = false;\n\n    window.widget.addEvent(\"onLoad\", () => {\n      if (hasOnLoadRun) {\n        console.warn(\n          \"⏳ onLoad was already executed. Ignoring duplicate trigger.\"\n        );\n        return;\n      }\n\n      hasOnLoadRun = true;\n      start(AppComponent);\n    });\n  } else {\n    console.error(\"❌ Widget not detected! onLoad cannot be registered.\");\n  }\n\n  return AppComponent;\n}\n","import { Box, Chip, Stack, Typography } from \"@mui/material\";\n\n\nexport const ConfirmationScreen = ({\n  parentParts,\n  sourceOrg,\n  selectedItems,\n}) => {\n  return (\n    <>\n      {/* <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        opacity: stage === \"assigning\" ? 0.6 : 1,\n      }}\n    >\n      <Stack spacing={3}>\n      <Typography\n      variant=\"h5\"\n      sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n      >\n      Confirm Your Submission\n        </Typography> */}\n\n      <Stack spacing={3}>\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Parent item(s) to Assign:\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{ marginBottom: 2, whiteSpace: \"pre-line\" }}\n          >\n            {parentParts}\n          </Typography>\n        </Box>\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Source Organization:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {sourceOrg}\n          </Typography>\n        </Box>\n\n        {/* <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Destination JDI Orgs:\n          </Typography>\n          <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n            {destOrg}\n          </Typography>\n        </Box> */}\n\n        <Box>\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n            Items to be Processed:\n          </Typography>\n          {selectedItems.length > 0 ? (\n            <Box\n              sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}\n            >\n              {selectedItems.map((item) => (\n                <Chip key={item} label={item} color=\"primary\" />\n              ))}\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              No items selected.\n            </Typography>\n          )}\n        </Box>\n        {/* <Box>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: \"medium\" }}>\n              Mapped Items:\n            </Typography>\n            {selectedItems.length > 0 ? (\n              <Box\n                sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, marginTop: 1 }}l\n              >\n                {selectedItems.map((item) => (\n                  <Chip key={item} label={item} color=\"primary\" />\n                ))}\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                No items selected.\n              </Typography>\n            )}\n          </Box> */}\n        {/* <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Confirm\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => setIsOpen(false)}\n            disabled={isLoading}\n          >\n            Cancel\n          </Button>\n        </Stack> */}\n      </Stack>\n      {/* </Stack>\n    </Paper> */}\n    </>\n  );\n};\n","import { Box, LinearProgress, Paper, Typography } from \"@mui/material\";\n\nexport const LoadingScreen = ({ message }) => {\n  return (\n    <Paper\n      sx={{\n        padding: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        borderRadius: 4,\n        boxShadow: 3,\n        textAlign: \"center\",\n        backgroundColor: \"#f5f5f5\",\n        border: \"2px solid #3f51b5\",\n      }}\n    >\n      <Box sx={{ marginBottom: 2 }}>\n        <Typography variant=\"h6\" color=\"primary\" fontWeight=\"bold\">\n          {message}\n        </Typography>\n      </Box>\n      <LinearProgress color=\"primary\" />\n    </Paper>\n  );\n};\n","import { Button, Stack, Typography } from \"@mui/material\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport {  useEffect, useRef } from \"react\";\n\nexport function Dialog({\n  children,\n  isOpen,\n  onSubmit,\n  onCancel,\n  disabled,\n  title,\n}) {\n  const dialogRef = useRef(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    function handleClickOutside(event) {\n      if (dialogRef.current && !dialogRef.current.contains(event.target)) {\n        onCancel();\n      }\n    }\n\n    if (isOpen) window.addEventListener(\"mousedown\", handleClickOutside, { signal });\n\n    return () => controller.abort();\n  }, [isOpen, onCancel]);\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed inset-0 flex items-center justify-center backdrop-blur-xs bg-black/30 z-10\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div\n              ref={dialogRef}\n              className=\"bg-white rounded-2xl p-6 shadow-xl min-w-[70%] md:min-w-[40%] max-w-[60%]\"\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n            >\n              <Typography\n                variant=\"h5\"\n                sx={{ fontWeight: \"bold\", textAlign: \"center\" }}\n              >\n                {title}\n              </Typography>\n\n              {disabled && (\n                <div className=\"w-full flex justify-center py-4\">\n                  <LoadingScreen message=\"Searching for parts...\" />\n                </div>\n              )}\n\n              {children}\n\n              <Stack\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"flex-end\"\n                className=\"pt-4\"\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={disabled}\n                >\n                  Confirm\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={onCancel}\n                  disabled={disabled}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","import { atom, useAtom } from \"jotai\";\n\nconst productAtom = atom(false);\n\nexport const useConfirmations = () => {\n  const [isOpen, setIsOpen] = useAtom(productAtom);\n\n  return {\n    isOpen,\n    setIsOpen,\n  };\n};\n","import {\n  Autocomplete,\n  TextField,\n  Chip,\n  Box,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { useOrgListQuery, useRdoListQuery } from \"../slices/apis/app.api\";\n\nexport const DropdownMultiSelect = ({\n  selectedItems,\n  onChange,\n  disabled,\n}) => {\n  const handleSelect = (newValue) => {\n    if (newValue && !selectedItems?.includes(newValue)) {\n      onChange([...selectedItems, newValue]);\n    }\n  };\n\n  const handleDelete = (itemToDelete) => {\n    onChange(selectedItems?.filter((item) => item !== itemToDelete));\n  };\n\n  const { data: rdoList } = useRdoListQuery({});\n  const { data: orgList } = useOrgListQuery({});\n\n  return (\n    <Box\n      sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 2 }}\n    >\n      <Autocomplete\n        options={rdoList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"RDO Name (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n      <Autocomplete\n        options={orgList?.data ?? []}\n        onChange={(_, newValue) => handleSelect(newValue )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Destination JDI Orgs (will appear in Selected Plants)\"\n            fullWidth\n            variant=\"outlined\"\n            disabled={disabled}\n          />\n        )}\n      />\n\n      {/* Helper text indicating both selections will be shown */}\n      <Typography variant=\"caption\" color=\"textSecondary\">\n        Selections from both fields will appear below.\n      </Typography>\n\n      <Paper\n        sx={{\n          padding: 2,\n          borderRadius: 2,\n          boxShadow: 2,\n          maxHeight: 200,\n          overflowY: \"auto\",\n        }}\n      >\n        <Typography\n          variant=\"subtitle1\"\n          sx={{ fontWeight: \"bold\", marginBottom: 2 }}\n        >\n          Selected Plants\n        </Typography>\n\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, minHeight: 20 }}>\n          {selectedItems.map((item) => (\n            <Chip\n              key={item}\n              label={item}\n              onDelete={() => handleDelete(item)}\n              color=\"primary\"\n            />\n          ))}\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n","import { useState } from \"react\";\nimport { TextField, Box, Paper, Button, Stack, Alert } from \"@mui/material\";\nimport { ConfirmationScreen } from \"../../components/Confirmation\";\nimport { ResultsScreen } from \"../../components/Result\";\nimport { Dialog } from \"../../components/Dialog\";\nimport { useConfirmations } from \"../../hooks/useConfirmations\";\nimport { usePostMutation } from \"../../slices/apis/app.api\";\nimport { getErrorMessage } from \"../../slices/apis/types\";\nimport { DropdownMultiSelect } from \"../../components/DropdownSelect\";\nimport { toast } from \"react-toastify\";\n\nexport const JdiBomPage = () => {\n  // Form fields and error state\n  const [errors, setErrors] = useState({});\n\n  const [formState, setFormState] = useState({\n    parentParts: \"\",\n    sourceOrg: \"\",\n    plants: [],\n  });\n\n  const handleChange = (key, value) => {\n    setFormState((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const { isOpen, setIsOpen } = useConfirmations();\n\n  // --- Form Submission ---\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const newErrors = {};\n\n    if (!formState.parentParts.trim())\n      newErrors.parentParts = \"Parent Part is required\";\n    if (!formState.sourceOrg.trim())\n      newErrors.sourceOrg = \"Source org is required\";\n    if (!formState.plants.length)\n      newErrors.plants = \"Select either RDO Name or Destination JDI Org\";\n\n    setErrors(newErrors);\n\n    if (Object.keys(newErrors).length === 0) setIsOpen(true);\n  };\n\n  // --- Cancel Handler ---\n  const handleCancel = () => setIsOpen(false);\n\n  const [postMutation, { isLoading }] = usePostMutation();\n\n  // --- Confirmation Stage ---\n  const handleConfirmationSubmit = async () => {\n    const { data, error } = await postMutation({\n      parentPart: formState.parentParts,\n      sourceOrg: formState.sourceOrg,\n      plants: formState.plants,\n    });\n\n    if (error) toast.error(getErrorMessage(error));\n\n    setIsOpen(false);\n    toast.success(data.message);\n    // setTimeout(() => navigate(\"/tasks\"), 500);\n  };\n\n  return (\n    <Box sx={{ minHeight: \"calc(100vh - 65px)\", backgroundColor: \"#eef2f6\" }}>\n      <Dialog\n        isOpen={isOpen}\n        title=\"Confirm Your Submission\"\n        onSubmit={handleConfirmationSubmit}\n        onCancel={handleCancel}\n        disabled={isLoading}\n      >\n        <ConfirmationScreen\n          parentParts={formState.parentParts}\n          sourceOrg={formState.sourceOrg}\n          selectedItems={formState.plants}\n        />\n      </Dialog>\n\n      <Box\n        sx={{\n          padding: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          gap: 4,\n          minHeight: \"calc(100vh - 200px)\",\n        }}\n      >\n        <Paper\n          sx={{\n            padding: 4,\n            width: \"100%\",\n            maxWidth: 600,\n            borderRadius: 4,\n            boxShadow: 3,\n          }}\n        >\n          <form onSubmit={handleFormSubmit}>\n            <Stack spacing={3}>\n              <TextField\n                label=\"Parent item(s) to Assign\"\n                variant=\"outlined\"\n                value={formState.parentParts}\n                onChange={(e) => handleChange(\"parentParts\", e.target.value)}\n                error={!!errors.parentParts}\n                helperText={errors.parentParts}\n                fullWidth\n              />\n              <TextField\n                label=\"Source Organization\"\n                variant=\"outlined\"\n                value={formState.sourceOrg}\n                onChange={(e) => handleChange(\"sourceOrg\", e.target.value)}\n                error={!!errors.sourceOrg}\n                helperText={errors.sourceOrg}\n                fullWidth\n              />\n\n              <DropdownMultiSelect\n                selectedItems={formState.plants}\n                onChange={(newSelectedItems) =>\n                  handleChange(\"plants\", newSelectedItems)\n                }\n                disabled={false}\n              />\n\n              {errors.plants && <Alert severity=\"error\">{errors.plants}</Alert>}\n\n              <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Submit\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </Button>\n              </Stack>\n            </Stack>\n          </form>\n        </Paper>\n\n        {/* <LoadingScreen message=\"Assigning items and commoning required parts...\" /> */}\n\n        {/* Results Screen */}\n        {false && (\n          <ResultsScreen\n            parentParts={formState.parentParts}\n            sourceOrg={formState.sourceOrg}\n            selectedItems={formState.plants}\n            onBack={handleCancel}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default JdiBomPage;\n","/**\n * Extracts an error message from an RTK Query error response.\n *\n * @param error - The error object from an API call.\n * @returns The extracted error message or a default message.\n */\nexport function getErrorMessage(error) {\n  if (error && typeof error === \"object\" && \"data\" in error) {\n    const fetchError = error;\n\n    if (\n      typeof fetchError.data === \"object\" &&\n      fetchError.data !== null &&\n      \"message\" in fetchError.data\n    ) {\n      return fetchError.data.message;\n    }\n  }\n\n  if (typeof error === \"object\" && error !== null && \"message\" in error) {\n    console.error(error);\n    return error.message;\n  }\n\n  return \"An unexpected error occurred.\";\n}\n","import React from \"react\";\r\nimport \"../DragAndDrop/DragAndDrop.css\"; \r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput\";\r\nimport useInterComSearch from \"src/hooks/useInterComSearch\";\r\n\r\nexport const DragAndDropComponent = ({ handleDrop }) => {\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = async (selectedObjects) => {\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        await handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"droppable-container mt-4\">\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n","import Loader from \"../Loader/Loader\";\r\n\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { setObjectData, setObjectDetails } from \"src/store/droppedObjectSlice\";\r\nimport { setIsDropped, setLoading } from \"src/store/droppedObjectSlice\";\r\nimport {\r\n  initializeDroppableArea,\r\n  getDroppedObjectDetails,\r\n} from \"src/services/api/droppableService\";\r\n\r\nimport useToast from \"src/hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"src/utils/toastMessages\";\r\n\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DragAndDropComponent } from \"./DragAndDrop\";\r\n\r\nexport const WithDroppableLogic = ({ children }) => {\r\n  const { showErrorToast } = useToast();\r\n  const dispatch = useDispatch();\r\n\r\n  const { isDropped, loading } = useSelector((state) => state.droppedObject);\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        if (objectDetailsResult?.success) {\r\n          dispatch(setObjectDetails(objectDetailsResult?.data?.cardData));\r\n          dispatch(setIsDropped(true));\r\n          console.info(\"[fetchObjectDetails] ✅ Redux store updated.\");\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        console.info(\"[fetchObjectDetails] 🏁 Ensuring loading is reset.\");\r\n        dispatch(setLoading(false));\r\n      }\r\n    },\r\n    [dispatch, showErrorToast]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      console.info(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n\r\n      dispatch(setLoading(true));\r\n\r\n      try {\r\n        if (!!!dataItems?.length) {\r\n          return toast.error(\"No data items to process.\");\r\n        }\r\n\r\n        const objectType = dataItems?.[0]?.objectType;\r\n        const validTypes = [\"VPMReference\", \"Document\", \"Raw_Material\"];\r\n\r\n        if (!validTypes.includes(objectType)) {\r\n          return showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n        }\r\n\r\n        // dispatch(setIsDropped(true));\r\n        dispatch(setObjectData(dataItems));\r\n\r\n        await fetchObjectDetails(dataItems);\r\n      } catch (error) {\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n\r\n        dispatch(setLoading(false)); // ✅ Reset loading in Redux\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n    },\r\n    [showErrorToast]\r\n  );\r\n\r\n  const { data: droppableContainer, isLoading } = useQuery({\r\n    queryKey: [\"droppableContainer\"],\r\n    queryFn: () =>\r\n      new Promise((resolve) => {\r\n        const interval = setInterval(() => {\r\n          const container = document.querySelector(\".droppable-container\");\r\n\r\n      toast.loading(\"rrrrrrrrrrrrrrrrr............................\")\r\n\r\n\r\n          if (container) {\r\n            clearInterval(interval);\r\n            resolve(container);\r\n          } else {\r\n            resolve(false);\r\n          }\r\n        }, 100); // check every 100ms\r\n      }),\r\n  });\r\n\r\n  const { isFetching } = useQuery({\r\n    queryKey: [\"initdrop\"],\r\n    queryFn: async () => {\r\n      if (!isDropped) {\r\n        console.info(\r\n          \"[initializeDroppableArea] 🚀 Resetting isDropped to false...\"\r\n        );\r\n        dispatch(setIsDropped(false));\r\n      } else {\r\n        console.info(\r\n          \"[initializeDroppableArea] ⏳ isDropped is already true. Skipping reset.\"\r\n        );\r\n      }\r\n\r\n      toast.loading(\"loading............................\")\r\n\r\n      await initializeDroppableArea(\r\n        droppableContainer,\r\n        handleDrop,\r\n        dispatch,\r\n        showErrorToast\r\n      );\r\n    },\r\n\r\n    enabled: !!droppableContainer,\r\n  });\r\n\r\n  if (loading) return <Loader />;\r\n  if (!isDropped) return <DragAndDropComponent handleDrop={handleDrop} />;\r\n\r\n  return children;\r\n};\r\n","import { initializeWidget } from \"src/components/InitializeWidget\";\nimport { JdiBomPage } from \"src/pages/jdiBom/JdiBomPage\";\nimport { WithDroppableLogic } from \"src/components/WithDroppable\";\n\nconst JDIWidget = () => {\n  return (\n    <WithDroppableLogic>\n      <JdiBomPage />\n    </WithDroppableLogic>\n  );\n};\n\nconst JdiBomWidget = () => initializeWidget(<JDIWidget />);\n\nexport default JdiBomWidget;\n","export const refreshWidgetData = async (dataItems, handleDrop) => {\r\n  console.log(\"[refreshWidgetData] called with dataItems:\", dataItems);\r\n  if (!dataItems || dataItems.length === 0) {\r\n    console.warn(\"[Refresh] No dropped data available to refresh.\");\r\n    return;\r\n  }\r\n  try {\r\n    if (typeof handleDrop !== \"function\") {\r\n      throw new Error(\"[Refresh] handleDrop is not a function.\");\r\n    }\r\n    await handleDrop(dataItems);\r\n  } catch (error) {\r\n    console.error(\"[Refresh] Error during handleDrop execution:\", error);\r\n  }\r\n};\r\n"],"names":["WidgetLifecycle","handleDrop","useDroppableArea","showSuccessToast","showErrorToast","useToast","loading","setLoading","useState","useEffect","window","widget","console","trace","addEvent","async","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","includes","isAutoTriggeredRefresh","warn","removeItem","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","data","items","length","error","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","_jsx","Loader","className","children","_ref","onSearch","disabled","searchText","setSearchText","inputRef","useRef","_jsxs","FontAwesomeIcon","icon","faMagnifyingGlass","onClick","handleSearchIconClick","trim","InputGroup","Form","Control","type","ref","value","onChange","event","newSearchText","target","onKeyDown","key","placeholder","Button","variant","handleClearClick","current","focus","fetchRevisionsAndParents","useRevisions","dispatch","useDispatch","isDropped","useSelector","state","fetchObjectDetails","useCallback","objectDetailsResult","getDroppedObjectDetails","dataItems","success","_dataItems$","_dataItems$2","relativePath","cardData","revisionParentData","Promise","all","objectId","objectType","setDroppedObjectData","parentDetails","log","MSG_FETCH_OBJECT_DETAILS_FAILED","_dataItems$3","MSG_INVALID_OBJECT_TYPE","setIsDroppedAction","setTimeout","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","useInterComSearch","socket","setSocket","InterCom","setInterCom","interComInstance","loadInterCom","loadData","disconnect","performSearch","searchOpts","onObjectsSelected","_window$widget","socketName","Date","toISOString","replace","newSocket","Socket","dispatchRetryInternal","subscribeServer","widgetId","id","finalSearchOpts","_objectSpread","widget_id","app_socket_id","default_search_criteria","dispatchEvent","addListener","response","api","post","status","concat","replaceRevisions","selectedParents","droppedData","userEmail","SelectedParents","DroppedData","MSG_REPLACE_SUCCESS","MSG_REPLACE_ERROR","message","showToast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","_objectWithoutProperties","_excluded","toast","options","arguments","undefined","showInfoToast","showWarningToast","Providers","queryClient","QueryClient","HelmetProvider","Provider","QueryClientProvider","client","Suspense","fallback","ToastContainer","root","initializeWidget","AppComponent","parent","injectedScript","createElement","textContent","body","appendChild","injectRefreshListener","hasOnLoadRun","_widget$body","requirejs","PlatformAPI","rootElement","getElementById","createRoot","render","start","ConfirmationScreen","parentParts","sourceOrg","selectedItems","_Fragment","Stack","spacing","Box","Typography","sx","fontWeight","marginBottom","whiteSpace","display","flexWrap","gap","marginTop","map","item","Chip","label","color","LoadingScreen","Paper","padding","width","maxWidth","borderRadius","boxShadow","textAlign","backgroundColor","border","LinearProgress","Dialog","isOpen","onSubmit","onCancel","title","dialogRef","controller","AbortController","signal","addEventListener","contains","abort","AnimatePresence","motion","div","initial","opacity","animate","exit","scale","direction","justifyContent","productAtom","atom","DropdownMultiSelect","_rdoList$data","_orgList$data","handleSelect","newValue","rdoList","useRdoListQuery","orgList","useOrgListQuery","flexDirection","Autocomplete","_","renderInput","params","TextField","fullWidth","maxHeight","overflowY","minHeight","onDelete","handleDelete","itemToDelete","filter","JdiBomPage","errors","setErrors","formState","setFormState","plants","handleChange","prev","setIsOpen","useConfirmations","useAtom","handleCancel","postMutation","isLoading","usePostMutation","parentPart","fetchError","getErrorMessage","alignItems","e","preventDefault","newErrors","Object","keys","helperText","newSelectedItems","Alert","severity","DragAndDropComponent","Image","style","height","src","alt","SearchInput","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","WithDroppableLogic","_objectDetailsResult$","setObjectDetails","setIsDropped","info","setObjectData","useQuery","queryKey","queryFn","resolve","container","isFetching","enabled","JDIWidget","JdiBomWidget"],"sourceRoot":""}