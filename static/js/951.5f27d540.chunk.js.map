{"version":3,"file":"static/js/951.5f27d540.chunk.js","mappings":"uHAgDAA,EAAOC,QA5BS,SAASC,EAAWC,EAAQC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAOzD,IAAKP,EAAW,CACd,IAAIQ,EACJ,QAAeC,IAAXR,EACFO,EAAQ,IAAIE,MACV,qIAGG,CACL,IAAIC,EAAO,CAACT,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACvBK,EAAW,GACfJ,EAAQ,IAAIE,MACVT,EAAOY,QAAQ,OAAO,WAAa,OAAOF,EAAKC,IAAa,MAExDE,KAAO,qBACf,CAGA,MADAN,EAAMO,YAAc,EACdP,CACR,CACF,C,WC5CA,IAAIQ,EAAoC,qBAAZC,QACxBC,EAAwB,oBAARC,IAChBC,EAAwB,oBAARC,IAChBC,EAAwC,oBAAhBC,eAAgCA,YAAYC,OAIxE,SAASC,EAAMvB,EAAGC,GAEhB,GAAID,IAAMC,EAAG,OAAO,EAEpB,GAAID,GAAKC,GAAiB,iBAALD,GAA6B,iBAALC,EAAe,CAC1D,GAAID,EAAEwB,cAAgBvB,EAAEuB,YAAa,OAAO,EAE5C,IAAIC,EAAQC,EAAGC,EA6BXC,EA5BJ,GAAIC,MAAMC,QAAQ9B,GAAI,CAEpB,IADAyB,EAASzB,EAAEyB,SACGxB,EAAEwB,OAAQ,OAAO,EAC/B,IAAKC,EAAID,EAAgB,IAARC,KACf,IAAKH,EAAMvB,EAAE0B,GAAIzB,EAAEyB,IAAK,OAAO,EACjC,OAAO,CACT,CAuBA,GAAIV,GAAWhB,aAAaiB,KAAShB,aAAagB,IAAM,CACtD,GAAIjB,EAAE+B,OAAS9B,EAAE8B,KAAM,OAAO,EAE9B,IADAH,EAAK5B,EAAEgC,YACEN,EAAIE,EAAGK,QAAQC,UACjBjC,EAAEkC,IAAIT,EAAEU,MAAM,IAAK,OAAO,EAEjC,IADAR,EAAK5B,EAAEgC,YACEN,EAAIE,EAAGK,QAAQC,UACjBX,EAAMG,EAAEU,MAAM,GAAInC,EAAEoC,IAAIX,EAAEU,MAAM,KAAM,OAAO,EACpD,OAAO,CACT,CAEA,GAAIlB,GAAWlB,aAAamB,KAASlB,aAAakB,IAAM,CACtD,GAAInB,EAAE+B,OAAS9B,EAAE8B,KAAM,OAAO,EAE9B,IADAH,EAAK5B,EAAEgC,YACEN,EAAIE,EAAGK,QAAQC,UACjBjC,EAAEkC,IAAIT,EAAEU,MAAM,IAAK,OAAO,EACjC,OAAO,CACT,CAGA,GAAIhB,GAAkBC,YAAYC,OAAOtB,IAAMqB,YAAYC,OAAOrB,GAAI,CAEpE,IADAwB,EAASzB,EAAEyB,SACGxB,EAAEwB,OAAQ,OAAO,EAC/B,IAAKC,EAAID,EAAgB,IAARC,KACf,GAAI1B,EAAE0B,KAAOzB,EAAEyB,GAAI,OAAO,EAC5B,OAAO,CACT,CAEA,GAAI1B,EAAEwB,cAAgBc,OAAQ,OAAOtC,EAAEuC,SAAWtC,EAAEsC,QAAUvC,EAAEwC,QAAUvC,EAAEuC,MAK5E,GAAIxC,EAAEyC,UAAYC,OAAOC,UAAUF,SAAgC,oBAAdzC,EAAEyC,SAA+C,oBAAdxC,EAAEwC,QAAwB,OAAOzC,EAAEyC,YAAcxC,EAAEwC,UAC3I,GAAIzC,EAAE4C,WAAaF,OAAOC,UAAUC,UAAkC,oBAAf5C,EAAE4C,UAAiD,oBAAf3C,EAAE2C,SAAyB,OAAO5C,EAAE4C,aAAe3C,EAAE2C,WAKhJ,IADAnB,GADAE,EAAOe,OAAOf,KAAK3B,IACLyB,UACCiB,OAAOf,KAAK1B,GAAGwB,OAAQ,OAAO,EAE7C,IAAKC,EAAID,EAAgB,IAARC,KACf,IAAKgB,OAAOC,UAAUE,eAAeC,KAAK7C,EAAG0B,EAAKD,IAAK,OAAO,EAKhE,GAAIZ,GAAkBd,aAAae,QAAS,OAAO,EAGnD,IAAKW,EAAID,EAAgB,IAARC,KACf,IAAiB,WAAZC,EAAKD,IAA+B,QAAZC,EAAKD,IAA4B,QAAZC,EAAKD,KAAiB1B,EAAE+C,YAarExB,EAAMvB,EAAE2B,EAAKD,IAAKzB,EAAE0B,EAAKD,KAAM,OAAO,EAK7C,OAAO,CACT,CAEA,OAAO1B,IAAMA,GAAKC,IAAMA,CAC1B,CAGAL,EAAOC,QAAU,SAAiBG,EAAGC,GACnC,IACE,OAAOsB,EAAMvB,EAAGC,EAClB,CAAE,MAAOK,GACP,IAAMA,EAAM0C,SAAW,IAAIC,MAAM,oBAO/B,OADAC,QAAQC,KAAK,mDACN,EAGT,MAAM7C,CACR,CACF,C,gMC9HI8C,EAA4B,CAAEC,IAChCA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAqB,SAAI,WACzBA,EAAmB,OAAI,SACvBA,EAAkB,MAAI,QACtBA,EAAkB,MAAI,QACtBA,EAAqB,SAAI,yBAClBA,GAZuB,CAa7BD,GAAa,CAAC,GACbE,EACI,CAAEC,IAAK,CAAC,UAAW,YAAa,cADpCD,EAEM,CAAEE,KAAM,CAAC,wBAFfF,EAGI,CACJG,QAAS,GACT7C,KAAM,CAAC,YAAa,SAAU,eAC9B8C,SAAU,CACR,UACA,WACA,SACA,WACA,eACA,iBACA,cACA,gBACA,sBACA,gBACA,oBACA,eACA,iBAIFC,EAAkBjB,OAAOkB,OAAOR,GAChCS,EAAgB,CAClBC,UAAW,YACXL,QAAS,UACTM,MAAO,YACPC,gBAAiB,kBACjBC,YAAa,cACb,aAAc,YACdC,SAAU,WACVC,SAAU,YAERC,EAAe1B,OAAOV,QAAQ6B,GAAeQ,QAC/C,CAACC,EAAKC,KAAmB,IAAhBC,EAAKpC,GAAMmC,EAElB,OADAD,EAAMlC,GAASoC,EACRF,CAAK,GAEd,CAAC,GAECG,EAAmB,UAGnBC,EACa,eADbA,EAEK,QAFLA,EAGyB,0BAHzBA,EAIsB,sBAJtBA,EAKc,gBALdA,EAMmB,oBAEnBC,EAAuBA,CAACC,EAAWlB,KACrC,IAAK,IAAIhC,EAAIkD,EAAUnD,OAAS,EAAGC,GAAK,EAAGA,GAAK,EAAG,CACjD,MAAMmD,EAAQD,EAAUlD,GACxB,GAAIgB,OAAOC,UAAUE,eAAeC,KAAK+B,EAAOnB,GAC9C,OAAOmB,EAAMnB,EAEjB,CACA,OAAO,IAAI,EAEToB,EAAyBF,IAC3B,IAAIG,EAAiBJ,EAAqBC,EAAW,SACrD,MAAMI,EAAoBL,EAAqBC,EAAWF,GAI1D,GAHI7C,MAAMC,QAAQiD,KAChBA,EAAiBA,EAAeE,KAAK,KAEnCD,GAAqBD,EACvB,OAAOC,EAAkBrE,QAAQ,OAAO,IAAMoE,IAEhD,MAAMG,EAAwBP,EAAqBC,EAAWF,GAC9D,OAAOK,GAAkBG,QAAyB,CAAM,EAEtDC,EAA0BP,GAAcD,EAAqBC,EAAWF,IAAwC,MACnH,GACGU,EAA6BA,CAACC,EAAST,IAAcA,EAAUU,QAAQT,GAAoC,qBAAnBA,EAAMQ,KAA0BE,KAAKV,GAAUA,EAAMQ,KAAUhB,QAAO,CAACmB,EAAUC,KAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWF,GAAaC,IAAY,CAAC,GACrNE,EAA0BA,CAACC,EAAmBhB,IAAcA,EAAUU,QAAQT,GAA8C,qBAA7BA,EAAuB,OAAmBU,KAAKV,GAAUA,EAAuB,OAAGgB,UAAUxB,QAAO,CAACyB,EAAkBC,KACxN,IAAKD,EAAiBrE,OAAQ,CAC5B,MAAME,EAAOe,OAAOf,KAAKoE,GACzB,IAAK,IAAIrE,EAAI,EAAGA,EAAIC,EAAKF,OAAQC,GAAK,EAAG,CACvC,MACMsE,EADerE,EAAKD,GACiBuE,cAC3C,IAA0D,IAAtDL,EAAkBM,QAAQF,IAAiCD,EAAIC,GACjE,OAAOF,EAAiBK,OAAOJ,EAEnC,CACF,CACA,OAAOD,CAAgB,GACtB,IAECM,EAAuBA,CAACC,EAAST,EAAmBhB,KACtD,MAAM0B,EAAmB,CAAC,EAC1B,OAAO1B,EAAUU,QAAQT,IACvB,QAAIhD,MAAMC,QAAQ+C,EAAMwB,MAGM,qBAAnBxB,EAAMwB,KAPTE,EAQD,WAADJ,OACSE,EAAO,oDAAAF,cAA0DtB,EAAMwB,GAAQ,KAT9EnD,SAAmC,oBAAjBA,QAAQC,MAAuBD,QAAQC,KAAKoD,KAYvE,GAZCA,KAYI,IACXhB,KAAKV,GAAUA,EAAMwB,KAAUR,UAAUxB,QAAO,CAACmC,EAAcC,KAChE,MAAMC,EAAmB,CAAC,EAC1BD,EAAanB,QAAQS,IACnB,IAAIY,EACJ,MAAMC,EAAQlE,OAAOf,KAAKoE,GAC1B,IAAK,IAAIrE,EAAI,EAAGA,EAAIkF,EAAMnF,OAAQC,GAAK,EAAG,CACxC,MAAMmF,EAAeD,EAAMlF,GACrBsE,EAAwBa,EAAaZ,eACe,IAAtDL,EAAkBM,QAAQF,IAA2D,QAAxBW,GAAsF,cAA3CZ,EAAIY,GAAqBV,eAA8D,QAA1BD,GAA0F,eAA7CD,EAAIC,GAAuBC,gBAC/OU,EAAsBX,IAEyB,IAA7CJ,EAAkBM,QAAQW,IAA0C,cAAjBA,GAAkE,YAAjBA,GAA8D,aAAjBA,IACnJF,EAAsBE,EAE1B,CACA,IAAKF,IAAwBZ,EAAIY,GAC/B,OAAO,EAET,MAAMvE,EAAQ2D,EAAIY,GAAqBV,cAOvC,OANKK,EAAiBK,KACpBL,EAAiBK,GAAuB,CAAC,GAEtCD,EAAiBC,KACpBD,EAAiBC,GAAuB,CAAC,IAEtCL,EAAiBK,GAAqBvE,KACzCsE,EAAiBC,GAAqBvE,IAAS,GACxC,EAEG,IACXyD,UAAUiB,SAASf,GAAQS,EAAaO,KAAKhB,KAChD,MAAMpE,EAAOe,OAAOf,KAAK+E,GACzB,IAAK,IAAIhF,EAAI,EAAGA,EAAIC,EAAKF,OAAQC,GAAK,EAAG,CACvC,MAAMmF,EAAelF,EAAKD,GACpBsF,GAAQtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTY,EAAiBO,IACjBH,EAAiBG,IAEtBP,EAAiBO,GAAgBG,CACnC,CACA,OAAOR,CAAY,GAClB,IAAIX,SAAS,EAEdoB,EAA0BA,CAACrC,EAAWsC,KACxC,GAAIrF,MAAMC,QAAQ8C,IAAcA,EAAUnD,OACxC,IAAK,IAAI0F,EAAQ,EAAGA,EAAQvC,EAAUnD,OAAQ0F,GAAS,EAAG,CAExD,GADavC,EAAUuC,GACdD,GACP,OAAO,CAEX,CAEF,OAAO,CAAK,EAoCVE,EAAgBC,GAAkBxF,MAAMC,QAAQuF,GAAiBA,EAAcpC,KAAK,IAAMoC,EAU1FC,EAAcA,CAACC,EAAcC,IAC3B3F,MAAMC,QAAQyF,GACTA,EAAalD,QAClB,CAACoD,EAAKC,KAZYC,EAAC9C,EAAO+C,KAC9B,MAAMjG,EAAOe,OAAOf,KAAKkD,GACzB,IAAK,IAAInD,EAAI,EAAGA,EAAIC,EAAKF,OAAQC,GAAK,EACpC,GAAIkG,EAAQjG,EAAKD,KAAOkG,EAAQjG,EAAKD,IAAImG,SAAShD,EAAMlD,EAAKD,KAC3D,OAAO,EAGX,OAAO,CAAK,EAMFiG,CAAkBD,EAAcF,GAClCC,EAAIK,SAASf,KAAKW,GAElBD,EAAIM,QAAQhB,KAAKW,GAEZD,IAET,CAAEK,SAAU,GAAIC,QAAS,KAGtB,CAAEA,QAASR,EAAcO,SAAU,IAExCE,EAAUA,CAACC,EAAKzD,KAClBkB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKuC,GAAG,IACN,CAACzD,QAAM,IAKP0D,EAAoB,CAAC,WAA2B,SAAuB,SACvEC,EAA0B,SAACC,GAC7B,OAAe,OADyBC,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,KAAAA,UAAA,IAE/BC,OAAOF,GAETE,OAAOF,GAAKzH,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,SAC9H,EACI4H,EAAqCC,GAAe9F,OAAOf,KAAK6G,GAAYnE,QAAO,CAAC+D,EAAK5D,KAC3F,MAAMiE,EAAkC,qBAApBD,EAAWhE,GAAuB,GAAH2B,OAAM3B,EAAG,MAAA2B,OAAKqC,EAAWhE,GAAI,QAAA2B,OAAS3B,GACzF,OAAO4D,EAAM,GAAHjC,OAAMiC,EAAG,KAAAjC,OAAIsC,GAASA,CAAI,GACnC,IAwBCC,EAAuC,SAACF,GAAU,IAAEG,EAASN,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK3F,OAAOf,KAAK6G,GAAYnE,QAAO,CAAC4D,EAAKzD,KAE9GyD,EADepE,EAAcW,IACfA,GAAOgE,EAAWhE,GACzByD,IACNU,EAAU,EASTC,EAA+BA,CAACpF,EAAMqF,IAASA,EAAKtD,KAAI,CAACQ,EAAKrE,KAChE,MAAMoH,EAAY,CAChBtE,IAAK9C,EACL,CAAC+C,IAAmB,GAYtB,OAVA/B,OAAOf,KAAKoE,GAAKe,SAASiC,IACxB,MACMC,EADSnF,EAAckF,IACKA,EAClC,GAAwB,cAApBC,GAAwE,YAApBA,EAA8C,CACpG,MAAMC,EAAUlD,EAAImD,WAAanD,EAAIoD,QACrCL,EAAUM,wBAA0B,CAAEC,OAAQJ,EAChD,MACEH,EAAUE,GAAmBjD,EAAIgD,EACnC,IAEKO,EAAAA,cAAoB9F,EAAMsF,EAAU,IAEzCS,EAAmB,SAAC/F,EAAMqF,GAAwB,IAAlBW,IAAMnB,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,KAAAA,UAAA,GACxC,OAAQ7E,GACN,IAAK,QACH,MAAO,CACLiG,YAAaA,IA7BeC,EAACC,EAAOC,EAAOpB,KACjD,MAIM3D,EAAQ6D,EAAqCF,EAJjC,CAChBhE,IAAKoF,EACL,CAACnF,IAAmB,IAGtB,MAAO,CAAC6E,EAAAA,cAAoB,QAAqBzE,EAAO+E,GAAO,EAuBtCF,CAA8BlG,EAAMqF,EAAKe,MAAOf,EAAKgB,iBACxEjH,SAAUA,IA1DUkH,EAACtG,EAAMoG,EAAOpB,EAAYgB,KACpD,MAAMO,EAAkBxB,EAAkCC,GACpDwB,EAAiB5C,EAAawC,GACpC,OAAOG,EAAkB,IAAH5D,OAAO3C,EAAI,KAAA2C,OAAI1B,EAAgB,YAAA0B,OAAW4D,EAAe,KAAA5D,OAAIgC,EACjF6B,EACAR,GACD,MAAArD,OAAK3C,EAAI,SAAA2C,OAAU3C,EAAI,KAAA2C,OAAI1B,EAAgB,YAAA0B,OAAWgC,EACrD6B,EACAR,GACD,MAAArD,OAAK3C,EAAI,IAAG,EAiDSsG,CAAsBtG,EAAMqF,EAAKe,MAAOf,EAAKgB,gBAAiBL,IAElF,IAAK,iBACL,IAAK,iBACH,MAAO,CACLC,YAAaA,IAAMf,EAAqCG,GACxDjG,SAAUA,IAAM2F,EAAkCM,IAEtD,QACE,MAAO,CACLY,YAAaA,IAAMb,EAA6BpF,EAAMqF,GACtDjG,SAAUA,IA1DS,SAACY,EAAMqF,GAAI,IAAEW,IAAMnB,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,KAAAA,UAAA,GAAO,OAAKQ,EAAKxE,QAAO,CAAC+D,EAAK6B,KAC1E,MAAMlE,EAAMkE,EACNC,EAAgBxH,OAAOf,KAAKoE,GAAKT,QACpCyD,KAA8B,cAAdA,GAA4D,YAAdA,KAC/D1E,QAAO,CAAC8F,EAAQpB,KAChB,MAAMN,EAAiC,qBAAnB1C,EAAIgD,GAA6BA,EAAY,GAAH5C,OAAM4C,EAAS,MAAA5C,OAAKgC,EAAwBpC,EAAIgD,GAAYS,GAAO,KACjI,OAAOW,EAAS,GAAHhE,OAAMgE,EAAM,KAAAhE,OAAIsC,GAASA,CAAI,GACzC,IACG2B,EAAarE,EAAImD,WAAanD,EAAIoD,SAAW,GAC7CkB,GAAqD,IAArCnC,EAAkBhC,QAAQ1C,GAChD,MAAO,GAAP2C,OAAUiC,EAAG,KAAAjC,OAAI3C,EAAI,KAAA2C,OAAI1B,EAAgB,YAAA0B,OAAW+D,GAAa/D,OAAGkE,EAAgB,KAAH,IAAAlE,OAAciE,EAAU,MAAAjE,OAAK3C,EAAI,KAAG,GACpH,GAAG,CA+CkB8G,CAAqB9G,EAAMqF,EAAMW,IAGzD,EA6DIe,EAlCoB1F,IACtB,MAAM,QACJ2F,EAAO,eACPC,EAAc,OACdjB,GAAS,EAAI,eACbkB,EAAc,aACdC,EAAY,UACZC,EAAS,MACThB,EAAQ,GAAE,gBACVC,EAAe,kBACfgB,GACEhG,EACJ,IAAI,SAAEiG,EAAQ,SAAEC,EAAQ,WAAEC,GAAenG,EACrCoG,EAAkB,CACpBxB,YAAaA,OAEb7G,SAAUA,IAAM,IAKlB,OAHIiI,KACCI,kBAAiBH,WAAUC,WAAUC,cA7CnBE,KAAgD,IAA/C,SAAEH,EAAQ,SAAED,EAAQ,WAAEE,EAAU,OAAExB,GAAQ0B,EAClE,MAAMC,EAAO7D,EAAYyD,EAAUzH,GAC7B8H,EAAO9D,EAAYwD,EAAUxH,GAC7B+H,EAAS/D,EAAY0D,EAAY1H,GAgBvC,MAAO,CACL2H,gBAhBsB,CACtBxB,YAAaA,IAAM,IACdb,EAA6B,OAAmBuC,EAAKrD,aACrDc,EAA6B,OAAmBwC,EAAKtD,aACrDc,EAA6B,SAAuByC,EAAOvD,WAEhElF,SAAUA,IACR,GAAAuD,OACGoD,EAAiB,OAAmB4B,EAAKrD,SAAU0B,GAAO,KAAArD,OAAIoD,EAC/D,OACA6B,EAAKtD,SACL0B,GACD,KAAArD,OAAIoD,EAAiB,SAAuB8B,EAAOvD,SAAU0B,KAKhEuB,SAAUI,EAAKpD,QACf+C,SAAUM,EAAKrD,QACfiD,WAAYK,EAAOtD,QACpB,EAqBwDuD,CAAmBzG,IAErE,CACLiD,SAAUmD,EACVM,KAAMhC,EAAiB,OAAmBiB,EAAShB,GACnDiB,eAAgBlB,EAAiB,iBAA6BkB,EAAgBjB,GAC9EkB,eAAgBnB,EAAiB,iBAA6BmB,EAAgBlB,GAC9E4B,KAAM7B,EAAiB,OAAmBuB,EAAUtB,GACpD2B,KAAM5B,EAAiB,OAAmBwB,EAAUvB,GACpDgC,SAAUjC,EAAiB,WAA2BoB,EAAcnB,GACpE6B,OAAQ9B,EAAiB,SAAuByB,EAAYxB,GAC5DiC,MAAOlC,EAAiB,QAAqBqB,EAAWpB,GACxDI,MAAOL,EAAiB,QAAqB,CAAEK,QAAOC,mBAAmBL,GAC1E,EAKCkC,EAAY,GACZC,IAAkC,qBAAXC,SAA0BA,OAAOC,WAAYD,OAAOC,SAASC,eACpFC,EAAa,MAmBfvK,WAAAA,CAAYwK,EAASC,IAAWC,EAAAA,EAAAA,GAAA,iBAlBpB,KAAEA,EAAAA,EAAAA,GAAA,iBACFP,IAAUO,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,aAEd,CACNC,UAAYC,IACVC,KAAKL,QAAQM,OAASF,CAAW,EAEnCG,gBAAiB,CACflK,IAAKA,IAAMgK,KAAKJ,UAAYP,EAAYW,KAAKX,UAC7Cc,IAAMC,KACHJ,KAAKJ,UAAYP,EAAYW,KAAKX,WAAW3E,KAAK0F,EAAS,EAE9DC,OAASD,IACP,MAAMtF,GAASkF,KAAKJ,UAAYP,EAAYW,KAAKX,WAAWxF,QAAQuG,IACnEJ,KAAKJ,UAAYP,EAAYW,KAAKX,WAAWiB,OAAOxF,EAAO,EAAE,KAKlEkF,KAAKL,QAAUA,EACfK,KAAKJ,UAAYA,IAAa,EACzBA,IACHD,EAAQM,OAAS/B,EAAe,CAC9BC,QAAS,GACTC,eAAgB,CAAC,EACjBtC,yBAAyB,EACzBuC,eAAgB,CAAC,EACjBI,SAAU,GACVC,SAAU,GACVJ,aAAc,GACdK,WAAY,GACZJ,UAAW,GACXhB,MAAO,GACPC,gBAAiB,CAAC,IAGxB,GAKE+C,EAAUC,EAAAA,cADK,CAAC,GAEhBC,GAAcC,EAAG,MAAMC,UAAwBC,EAAAA,UAGjDzL,WAAAA,CAAYqD,GACVqI,MAAMrI,IAAOqH,EAAAA,EAAAA,GAAA,0BACbG,KAAKc,WAAa,IAAIpB,EAAWM,KAAKxH,MAAMmH,SAAW,CAAC,EAAGgB,EAAgBf,UAC7E,CACAmB,MAAAA,GACE,OAAuBP,EAAAA,cAAqBD,EAAQS,SAAU,CAAEjL,MAAOiK,KAAKc,WAAW/K,OAASiK,KAAKxH,MAAMyI,SAC7G,IACDpB,EAAAA,EAAAA,GAAAa,EAAA,YAToBpB,GAAUoB,GAgB3BQ,EAAaA,CAAC/J,EAAMqF,KACtB,MAAM2E,EAAc3B,SAAS4B,MAAQ5B,SAAS6B,cAAc,QACtDC,EAAWH,EAAYI,iBAAiB,GAADzH,OAAI3C,EAAI,KAAA2C,OAAI1B,EAAgB,MACnEoJ,EAAU,GAAGC,MAAMhL,KAAK6K,GACxBI,EAAU,GAChB,IAAIC,EAkCJ,OAjCInF,GAAQA,EAAKpH,QACfoH,EAAK/B,SAASf,IACZ,MAAMkI,EAAapC,SAASC,cAActI,GAC1C,IAAK,MAAMuF,KAAahD,EACtB,GAAIrD,OAAOC,UAAUE,eAAeC,KAAKiD,EAAKgD,GAC5C,GAAkB,cAAdA,EACFkF,EAAW/E,UAAYnD,EAAImD,eACtB,GAAkB,YAAdH,EACLkF,EAAWC,WACbD,EAAWC,WAAW/E,QAAUpD,EAAIoD,QAEpC8E,EAAWE,YAAYtC,SAASuC,eAAerI,EAAIoD,cAEhD,CACL,MAAMV,EAAOM,EACP3G,EAA6B,qBAAd2D,EAAI0C,GAAwB,GAAK1C,EAAI0C,GAC1DwF,EAAWI,aAAatF,EAAW3G,EACrC,CAGJ6L,EAAWI,aAAa5J,EAAkB,QACtCoJ,EAAQS,MAAK,CAACC,EAAapH,KAC7B6G,EAAgB7G,EACT8G,EAAWO,YAAYD,MAE9BV,EAAQlB,OAAOqB,EAAe,GAE9BD,EAAQhH,KAAKkH,EACf,IAGJJ,EAAQ/G,SAASf,IAAG,IAAA0I,EAAA,OAAmB,QAAnBA,EAAK1I,EAAI2I,kBAAU,IAAAD,OAAA,EAAdA,EAAgBE,YAAY5I,EAAI,IACzDgI,EAAQjH,SAASf,GAAQyH,EAAYW,YAAYpI,KAC1C,CACL8H,UACAE,UACD,EAECa,GAAmBA,CAACvI,EAASmC,KAC/B,MAAMqG,EAAahD,SAASiD,qBAAqBzI,GAAS,GAC1D,IAAKwI,EACH,OAEF,MAAME,EAAwBF,EAAWG,aAAavK,GAChDwK,EAAmBF,EAAwBA,EAAsBG,MAAM,KAAO,GAC9EC,EAAqB,IAAIF,GACzBG,EAAgB1M,OAAOf,KAAK6G,GAClC,IAAK,MAAMO,KAAaqG,EAAe,CACrC,MAAMhN,EAAQoG,EAAWO,IAAc,GACnC8F,EAAWG,aAAajG,KAAe3G,GACzCyM,EAAWR,aAAatF,EAAW3G,IAEQ,IAAzC6M,EAAiB/I,QAAQ6C,IAC3BkG,EAAiBlI,KAAKgC,GAExB,MAAMsG,EAAcF,EAAmBjJ,QAAQ6C,IAC1B,IAAjBsG,GACFF,EAAmBxC,OAAO0C,EAAa,EAE3C,CACA,IAAK,IAAI3N,EAAIyN,EAAmB1N,OAAS,EAAGC,GAAK,EAAGA,GAAK,EACvDmN,EAAWS,gBAAgBH,EAAmBzN,IAE5CuN,EAAiBxN,SAAW0N,EAAmB1N,OACjDoN,EAAWS,gBAAgB7K,GAClBoK,EAAWG,aAAavK,KAAsB2K,EAAcnK,KAAK,MAC1E4J,EAAWR,aAAa5J,EAAkB2K,EAAcnK,KAAK,KAC/D,EAQEsK,GAAmBA,CAACC,EAAUC,KAChC,MAAM,QACJjF,EAAO,eACPC,EAAc,eACdC,EAAc,SACdI,EAAQ,SACRC,EAAQ,aACRJ,EAAY,oBACZ+E,EAAmB,WACnB1E,EAAU,UACVJ,EAAS,MACThB,EAAK,gBACLC,GACE2F,EACJZ,GAAiB,OAAmBnE,GACpCmE,GAAiB,OAAmBlE,GArBpBiF,EAAC/F,EAAOpB,KACH,qBAAVoB,GAAyBiC,SAASjC,QAAUA,IACrDiC,SAASjC,MAAQxC,EAAawC,IAEhCgF,GAAiB,QAAqBpG,EAAW,EAkBjDmH,CAAY/F,EAAOC,GACnB,MAAM+F,EAAa,CACjBpF,QAAS+C,EAAW,OAAmB/C,GACvCM,SAAUyC,EAAW,OAAmBzC,GACxCC,SAAUwC,EAAW,OAAmBxC,GACxCJ,aAAc4C,EAAW,WAA2B5C,GACpDK,WAAYuC,EAAW,SAAuBvC,GAC9CJ,UAAW2C,EAAW,QAAqB3C,IAEvCiF,EAAY,CAAC,EACbC,EAAc,CAAC,EACrBpN,OAAOf,KAAKiO,GAAY9I,SAASzB,IAC/B,MAAM,QAAE0I,EAAO,QAAEF,GAAY+B,EAAWvK,GACpC0I,EAAQtM,SACVoO,EAAUxK,GAAW0I,GAEnBF,EAAQpM,SACVqO,EAAYzK,GAAWuK,EAAWvK,GAASwI,QAC7C,IAEE4B,GACFA,IAEFC,EAAoBF,EAAUK,EAAWC,EAAY,EAEnDC,GAAkB,KAgBlBC,GAf6BR,IAC3BO,IACFE,qBAAqBF,IAEnBP,EAASU,MACXH,GAAkBI,uBAAsB,KACtCZ,GAAiBC,GAAU,KACzBO,GAAkB,IAAI,GACtB,KAGJR,GAAiBC,GACjBO,GAAkB,KACpB,EAKEK,GAAmB,cAAcC,EAAAA,UAAW7O,WAAAA,GAAA,SAAA6G,YAAA6D,EAAAA,EAAAA,GAAA,iBACnC,EAAK,CAChBoE,qBAAAA,CAAsBC,GACpB,OAAQC,IAAaD,EAAWlE,KAAKxH,MACvC,CACA4L,kBAAAA,GACEpE,KAAKqE,YACP,CACAC,oBAAAA,GACE,MAAM,gBAAEpE,GAAoBF,KAAKxH,MAAMmH,QACvCO,EAAgBG,OAAOL,MACvBA,KAAKqE,YACP,CACAA,UAAAA,GACE,MAAM,gBAAEnE,EAAe,UAAEJ,GAAcE,KAAKxH,MAAMmH,QAClD,IAAII,EAAc,KAClB,MAAMwE,GAlbgBhM,EAmbpB2H,EAAgBlK,MAAMkD,KAAKkH,IACzB,MAAM5H,GAAKa,EAAAA,EAAAA,GAAA,GAAQ+G,EAAS5H,OAE5B,cADOA,EAAMmH,QACNnH,CAAK,IAtbe,CACjC2F,QAAS7E,EAAwB,CAAC,QAAoBf,GACtD6F,eAAgBrF,EAA2B,iBAA6BR,GACxEsL,MAAOvL,EAAqBC,EAAWF,GACvC8E,OAAQ7E,EAAqBC,EAAWF,GACxCgG,eAAgBtF,EAA2B,iBAA6BR,GACxEkG,SAAU1E,EACR,OACA,CAAC,MAAiB,QAClBxB,GAEFmG,SAAU3E,EACR,OACA,CACE,OACA,UACA,aACA,WACA,YAEFxB,GAEF+F,aAAcvE,EAAqB,WAA2B,CAAC,aAA+BxB,GAC9F8K,oBAAqBvK,EAAuBP,GAC5CoG,WAAY5E,EACV,SACA,CAAC,MAAiB,aAClBxB,GAEFgG,UAAWxE,EAAqB,QAAqB,CAAC,WAA2BxB,GACjFgF,MAAO9E,EAAsBF,GAC7BiF,gBAAiBzE,EAA2B,kBAA+BR,GAC3EiG,kBAAmB5D,EAAwBrC,EAAWF,KAhC9BE,MAyblBkI,EAAeb,UACjB+D,GAAeY,GACNrG,IACT6B,EAAc7B,EAAeqG,IAE/BzE,EAAUC,EACZ,CAIAyE,IAAAA,GACE,GAAIxE,KAAKyE,SACP,OAEFzE,KAAKyE,UAAW,EAChB,MAAM,gBAAEvE,GAAoBF,KAAKxH,MAAMmH,QACvCO,EAAgBC,IAAIH,MACpBA,KAAKqE,YACP,CACAtD,MAAAA,GAEE,OADAf,KAAKwE,OACE,IACT,GAIQE,EAAG,cAAcC,EAAAA,UAMzBV,qBAAAA,CAAsBC,GACpB,OAAQU,IAAYjJ,EAAQqE,KAAKxH,MAAO,cAAemD,EAAQuI,EAAW,cAC5E,CACAW,wBAAAA,CAAyBC,EAAOC,GAC9B,IAAKA,EACH,OAAO,KAET,OAAQD,EAAM3N,MACZ,IAAK,SACL,IAAK,WACH,MAAO,CACL0F,UAAWkI,GAEf,IAAK,QACH,MAAO,CACLjI,QAASiI,GAEb,QACE,MAAM,IAAI5Q,MAAM,IAAD2F,OACTgL,EAAM3N,KAAI,uGAGtB,CACA6N,wBAAAA,CAAyBF,EAAOG,EAAmBC,EAAeH,GAChE,OAAA1L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK4L,GAAiB,IACpB,CAACH,EAAM3N,MAAO,IACT8N,EAAkBH,EAAM3N,OAAS,IAAEkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEjC6L,GACAlF,KAAK6E,yBAAyBC,EAAOC,MAIhD,CACAI,qBAAAA,CAAsBL,EAAOM,EAAUF,EAAeH,GACpD,OAAQD,EAAM3N,MACZ,IAAK,QACH,OAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK+L,GAAQ,IACX,CAACN,EAAM3N,MAAO4N,EACdvH,iBAAenE,EAAAA,EAAAA,GAAA,GAAO6L,KAE1B,IAAK,OACH,OAAA7L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK+L,GAAQ,IACXhH,gBAAc/E,EAAAA,EAAAA,GAAA,GAAO6L,KAEzB,IAAK,OACH,OAAA7L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK+L,GAAQ,IACX/G,gBAAchF,EAAAA,EAAAA,GAAA,GAAO6L,KAEzB,QACE,OAAA7L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK+L,GAAQ,IACX,CAACN,EAAM3N,OAAIkC,EAAAA,EAAAA,GAAA,GAAQ6L,KAG3B,CACAG,2BAAAA,CAA4BJ,EAAmBG,GAC7C,IAAIE,GAAiBjM,EAAAA,EAAAA,GAAA,GAAQ+L,GAO7B,OANA/O,OAAOf,KAAK2P,GAAmBxK,SAAS8K,IACtCD,GAAiBjM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZiM,GAAiB,IACpB,CAACC,GAAiBN,EAAkBM,IACrC,IAEID,CACT,CACAE,qBAAAA,CAAsBV,EAAOC,GAW3B,OAVAU,IACEnO,EAAgB2K,MAAM1N,GAASuQ,EAAM3N,OAAS5C,IACxB,oBAAfuQ,EAAM3N,KAAsB,oIAAH,uBAAA2C,OAAgKxC,EAAgBsB,KAC9M,MACD,qDAAAkB,OAAoDgL,EAAM3N,KAAI,uDAEjEsO,KACGV,GAA4C,kBAAnBA,GAA+BvP,MAAMC,QAAQsP,KAAoBA,EAAe9C,MAAMyD,GAAuC,kBAAhBA,IAAyB,0CAAA5L,OACtHgL,EAAM3N,KAAI,0DAAA2C,OAAyDgL,EAAM3N,KAAI,WAAA2C,OAAYgL,EAAM3N,KAAI,gDAExI,CACT,CACAwO,kBAAAA,CAAmB1E,EAAUmE,GAC3B,IAAIH,EAAoB,CAAC,EAqCzB,OApCAW,EAAAA,SAAgBnL,QAAQwG,GAAW6D,IACjC,IAAKA,IAAUA,EAAMtM,MACnB,OAEF,MAAAqN,EAAoDf,EAAMtM,OAAlDyI,SAAU8D,GAA+Bc,EAAZC,GAAUC,EAAAA,EAAAA,GAAAF,EAAAG,GACzCd,EAAgB7O,OAAOf,KAAKwQ,GAAY9N,QAAO,CAAC4D,EAAKzD,KACzDyD,EAAI7D,EAAaI,IAAQA,GAAO2N,EAAW3N,GACpCyD,IACN,CAAC,GACJ,IAAI,KAAEzE,GAAS2N,EAMf,OALoB,kBAAT3N,EACTA,EAAOA,EAAKZ,WAEZyJ,KAAKwF,sBAAsBV,EAAOC,GAE5B5N,GACN,IAAK,yBACHiO,EAAWpF,KAAK2F,mBAAmBZ,EAAgBK,GACnD,MACF,IAAK,OACL,IAAK,OACL,IAAK,WACL,IAAK,SACL,IAAK,QACHH,EAAoBjF,KAAKgF,yBACvBF,EACAG,EACAC,EACAH,GAEF,MACF,QACEK,EAAWpF,KAAKmF,sBAAsBL,EAAOM,EAAUF,EAAeH,GAE1E,IAEK/E,KAAKqF,4BAA4BJ,EAAmBG,EAC7D,CACArE,MAAAA,GACE,MAAAkF,EAA+BjG,KAAKxH,OAA9B,SAAEyI,GAAoBgF,EAAPzN,GAAKuN,EAAAA,EAAAA,GAAAE,EAAAC,GAC1B,IAAId,GAAQ/L,EAAAA,EAAAA,GAAA,GAAQb,IAChB,WAAEsI,GAAetI,EAIrB,GAHIyI,IACFmE,EAAWpF,KAAK2F,mBAAmB1E,EAAUmE,IAE3CtE,KAAgBA,aAAsBpB,GAAa,CAErDoB,EAAa,IAAIpB,EADJoB,EACoBnB,SAAS,UACnCyF,EAAStE,UAClB,CACA,OAAOA,EAA6B8E,EAAAA,cAAqB7B,IAAgB1K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO+L,GAAQ,IAAEzF,QAASmB,EAAW/K,SAA2B6P,EAAAA,cAAqBrF,EAAQ4F,SAAU,MAAOxG,GAA4BiG,EAAAA,cAAqB7B,IAAgB1K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO+L,GAAQ,IAAEzF,cAC3Q,IACDE,EAAAA,EAAAA,GAAA6E,EAAA,eA9IuB,CACpBb,OAAO,EACP/H,yBAAyB,EACzB0C,mBAAmB,G,WC3oBvBjL,EAAOC,QAAU,SAAsB4S,EAAMC,EAAMC,EAASC,GAC1D,IAAIC,EAAMF,EAAUA,EAAQ7P,KAAK8P,EAAgBH,EAAMC,QAAQ,EAE/D,QAAY,IAARG,EACF,QAASA,EAGX,GAAIJ,IAASC,EACX,OAAO,EAGT,GAAoB,kBAATD,IAAsBA,GAAwB,kBAATC,IAAsBA,EACpE,OAAO,EAGT,IAAII,EAAQpQ,OAAOf,KAAK8Q,GACpBM,EAAQrQ,OAAOf,KAAK+Q,GAExB,GAAII,EAAMrR,SAAWsR,EAAMtR,OACzB,OAAO,EAMT,IAHA,IAAIuR,EAAkBtQ,OAAOC,UAAUE,eAAeoQ,KAAKP,GAGlDQ,EAAM,EAAGA,EAAMJ,EAAMrR,OAAQyR,IAAO,CAC3C,IAAI1O,EAAMsO,EAAMI,GAEhB,IAAKF,EAAgBxO,GACnB,OAAO,EAGT,IAAI2O,EAASV,EAAKjO,GACd4O,EAASV,EAAKlO,GAIlB,IAAY,KAFZqO,EAAMF,EAAUA,EAAQ7P,KAAK8P,EAAgBO,EAAQC,EAAQ5O,QAAO,SAEtC,IAARqO,GAAkBM,IAAWC,EACjD,OAAO,CAEX,CAEA,OAAO,CACT,C,8DC7CA,SAASC,EAA2BjT,EAAG6J,GACrC,GAAIA,EAAE9H,IAAI/B,GAAI,MAAM,IAAIkT,UAAU,iEACpC,CCDA,SAASC,EAA2BnT,EAAG6J,EAAGjK,GACxC,EAA0BI,EAAG6J,GAAIA,EAAEuJ,IAAIpT,EAAGJ,EAC5C,CCHA,SAASyT,EAAkBrT,EAAG6J,EAAGyJ,GAC/B,GAAI,mBAAqBtT,EAAIA,IAAM6J,EAAI7J,EAAE+B,IAAI8H,GAAI,OAAO5B,UAAU5G,OAAS,EAAIwI,EAAIyJ,EACnF,MAAM,IAAIJ,UAAU,gDACtB,CCFA,SAAS,EAAuBK,EAAG3T,GACjC,OAAO2T,EAAEtR,IAAI,EAAiBsR,EAAG3T,GACnC,CCFA,SAAS4T,EAAuBD,EAAG3T,EAAG6T,GACpC,OAAOF,EAAEH,IAAI,EAAiBG,EAAG3T,GAAI6T,GAAIA,CAC3C,CC6EO,IAAMC,EAA6B,qBAAXlI,QAA0B,SAAUmI,WAI5D,SAASC,IAAQ,CAmBjB,SAASC,EAMdC,EACAC,GAEA,MAA4B,oBAAdD,EAA2BA,EAAUC,GAASD,CAC9D,CAcO,SAASE,EACdC,EACAF,GAEA,MAAM,KACJ3Q,EAAO,YACP8Q,EAAA,YACAC,EAAA,UACAC,EAAA,SACAC,EAAA,MACAC,GACEL,EAEJ,GAAII,EACF,GAAIH,GACF,GAAIH,EAAMQ,YAAcC,EAAsBH,EAAUN,EAAMU,SAC5D,OAAO,OAEJ,IAAKC,EAAgBX,EAAMM,SAAUA,GAC1C,OAAO,EAIX,GAAa,QAATjR,EAAgB,CAClB,MAAMuR,EAAWZ,EAAMY,WACvB,GAAa,WAATvR,IAAsBuR,EACxB,OAAO,EAET,GAAa,aAATvR,GAAuBuR,EACzB,OAAO,CAEX,CAEA,OAAqB,mBAAVL,GAAuBP,EAAMa,YAAcN,OAIlDH,GAAeA,IAAgBJ,EAAMvD,MAAM2D,gBAI3CC,IAAcA,EAAUL,IAK9B,CAEO,SAASc,EACdZ,EACAa,GAEA,MAAM,MAAEZ,EAAA,OAAOa,EAAA,UAAQX,EAAA,YAAWY,GAAgBf,EAClD,GAAIe,EAAa,CACf,IAAKF,EAASL,QAAQO,YACpB,OAAO,EAET,GAAId,GACF,GAAIe,EAAQH,EAASL,QAAQO,eAAiBC,EAAQD,GACpD,OAAO,OAEJ,IAAKN,EAAgBI,EAASL,QAAQO,YAAaA,GACxD,OAAO,CAEX,CAEA,QAAID,GAAUD,EAAStE,MAAMuE,SAAWA,MAIpCX,IAAcA,EAAUU,GAK9B,CAEO,SAASN,EACdH,EACAI,GAGA,QADe,OAAAA,QAAA,IAAAA,OAAA,EAAAA,EAASS,iBAAkBD,GAC5BZ,EAChB,CAMO,SAASY,EAAQZ,GACtB,OAAOc,KAAKC,UAAUf,GAAU,CAACgB,EAAGC,IAClCC,EAAcD,GACVhT,OAAOf,KAAK+T,GACTE,OACAvR,QAAO,CAACwR,EAAQrR,KACfqR,EAAOrR,GAAOkR,EAAIlR,GACXqR,IACN,CAAC,GACNH,GAER,CAMO,SAASZ,EAAgB9U,EAAQC,GACtC,OAAID,IAAMC,UAICD,WAAaC,OAIpBD,IAAKC,GAAkB,kBAAND,GAA+B,kBAANC,KACpCyC,OAAOf,KAAK1B,GAAGqO,MAAM9J,IAASsQ,EAAgB9U,EAAEwE,GAAMvE,EAAEuE,MAIpE,CAQO,SAASsR,EAAiB9V,EAAQC,GACvC,GAAID,IAAMC,EACR,OAAOD,EAGT,MAAM+V,EAAQC,EAAahW,IAAMgW,EAAa/V,GAE9C,GAAI8V,GAAUJ,EAAc3V,IAAM2V,EAAc1V,GAAK,CACnD,MAAMgW,EAASF,EAAQ/V,EAAI0C,OAAOf,KAAK3B,GACjCkW,EAAQD,EAAOxU,OACf0U,EAASJ,EAAQ9V,EAAIyC,OAAOf,KAAK1B,GACjCmW,EAAQD,EAAO1U,OACf4U,EAAYN,EAAQ,GAAK,CAAC,EAEhC,IAAIO,EAAa,EAEjB,IAAK,IAAI5U,EAAI,EAAGA,EAAI0U,EAAO1U,IAAK,CAC9B,MAAM8C,EAAMuR,EAAQrU,EAAIyU,EAAOzU,KAE1BqU,GAASE,EAAOpO,SAASrD,IAASuR,SAC1B,IAAX/V,EAAEwE,SACS,IAAXvE,EAAEuE,IAEF6R,EAAK7R,QAAO,EACZ8R,MAEAD,EAAK7R,GAAOsR,EAAiB9V,EAAEwE,GAAMvE,EAAEuE,IACnC6R,EAAK7R,KAASxE,EAAEwE,SAAmB,IAAXxE,EAAEwE,IAC5B8R,IAGN,CAEA,OAAOJ,IAAUE,GAASE,IAAeJ,EAAQlW,EAAIqW,CACvD,CAEA,OAAOpW,CACT,CAsBO,SAAS+V,EAAa5T,GAC3B,OAAOP,MAAMC,QAAQM,IAAUA,EAAMX,SAAWiB,OAAOf,KAAKS,GAAOX,MACrE,CAIO,SAASkU,EAAcY,GAC5B,IAAKC,EAAmBD,GACtB,OAAO,EAIT,MAAME,EAAOF,EAAE/U,YACf,QAAa,IAATiV,EACF,OAAO,EAIT,MAAMC,EAAOD,EAAK9T,UAClB,QAAK6T,EAAmBE,OAKnBA,EAAK7T,eAAe,kBAKrBH,OAAOiU,eAAeJ,KAAO7T,OAAOC,UAM1C,CAEA,SAAS6T,EAAmBD,GAC1B,MAA6C,oBAAtC7T,OAAOC,UAAUC,SAASE,KAAKyT,EACxC,CAQO,SAASK,EAGdC,EAA6BC,EAAajC,GAC1C,MAAyC,oBAA9BA,EAAQkC,kBACVlC,EAAQkC,kBAAkBF,EAAUC,IACJ,IAA9BjC,EAAQkC,kBAcVjB,EAAiBe,EAAUC,GAE7BA,CACT,CAQO,SAASE,EAAYC,EAAiBC,GAA4B,IAAnBC,EAAA9O,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAAM,EAC1D,MAAM+O,EAAW,IAAIH,EAAOC,GAC5B,OAAOC,GAAOC,EAAS3V,OAAS0V,EAAMC,EAAStJ,MAAM,GAAKsJ,CAC5D,CAEO,SAASC,EAAcJ,EAAiBC,GAA4B,IAAnBC,EAAA9O,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAAM,EAC5D,MAAM+O,EAAW,CAACF,KAASD,GAC3B,OAAOE,GAAOC,EAAS3V,OAAS0V,EAAMC,EAAStJ,MAAM,GAAI,GAAKsJ,CAChE,CAEO,IAAME,EAAYC,SAGlB,SAASC,EAId3C,EAIA4C,GAaA,OAAK5C,EAAQ6C,SAAW,OAAAD,QAAA,IAAAA,GAAAA,EAAcE,eAC7B,IAAMF,EAAaE,eAGvB9C,EAAQ6C,SAAW7C,EAAQ6C,UAAYJ,EAKrCzC,EAAQ6C,QAJN,IACLE,QAAQC,OAAO,IAAIrX,MAAA,qBAAA2F,OAA2B0O,EAAQF,UAAS,MAIrE,CCnbA,SAASmD,EAA4B1X,EAAGJ,GACtC,EAA0BI,EAAGJ,GAAIA,EAAEwM,IAAIpM,EACzC,CCSO,IAAM2X,EAAsCtI,GAAOuI,WAAWvI,EAAI,GAoFlE,I,YAAMwI,EAlFN,WACL,IAAIC,EAA+B,GAC/BC,EAAe,EACfC,EAA4BC,IAC9BA,GAAU,EAERC,EAAsCD,IACxCA,GAAU,EAERE,EAAaR,EAEjB,MAAMS,EAAYH,IACZF,EACFD,EAAMnR,KAAKsR,GAEXE,GAAW,KACTH,EAASC,EAAS,GAEtB,EAgBF,MAAO,CACLI,MAAWJ,IACT,IAAIxC,EACJsC,IACA,IACEtC,EAASwC,GACX,CAAE,QACAF,IACKA,GAtBGO,MACZ,MAAMC,EAAgBT,EACtBA,EAAQ,GACJS,EAAclX,QAChB8W,GAAW,KACTD,GAAc,KACZK,EAAc7R,SAASuR,IACrBD,EAASC,EAAS,GAClB,GACF,GAEN,EAYMK,EAEJ,CACA,OAAO7C,CAAA,EAKT+C,WACEP,GAEO,WAAa,QAAAQ,EAAAxQ,UAAA5G,OAAThB,EAAA,IAAAoB,MAAAgX,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAArY,EAAAqY,GAAAzQ,UAAAyQ,GACTN,GAAS,KACPH,KAAY5X,EAAK,GAErB,EAEF+X,WAKAO,kBAAoBC,IAClBZ,EAAWY,CAAA,EAMbC,uBAAyBD,IACvBV,EAAgBU,CAAA,EAElBE,aAAeF,IACbT,EAAaS,CAAA,EAGnB,CAG6BG,GChGhBC,EAAN,MAGL5X,WAAAA,GAFA,KAAU6X,UAAY,IAAIlY,IAGxBkL,KAAKiN,UAAYjN,KAAKiN,UAAUrG,KAAK5G,KACvC,CAEAiN,SAAAA,CAAUC,GAKR,OAJAlN,KAAKgN,UAAU7M,IAAI+M,GAEnBlN,KAAKmN,cAEE,KACLnN,KAAKgN,UAAUI,OAAOF,GACtBlN,KAAKqN,eAAe,CAExB,CAEAC,YAAAA,GACE,OAAOtN,KAAKgN,UAAUtX,KAAO,CAC/B,CAEUyX,WAAAA,GAEV,CAEUE,aAAAA,GAEV,GCyDWE,EAAe,IA5EfC,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAN,cAA2BV,EAMhC5X,WAAAA,GACE0L,QANFqG,EAAA,KAAAsG,OAAA,GACAtG,EAAA,KAAAwG,OAAA,GAEAxG,EAAA,KAAAyG,OAAA,GAIEC,EAAKD,EAAL3N,MAAe6N,IAGb,IAAKpG,GAAYlI,OAAOuO,iBAAkB,CACxC,MAAMZ,EAAWA,IAAMW,IAIvB,OAFAtO,OAAOuO,iBAAiB,mBAAoBZ,GAAU,GAE/C,KAEL3N,OAAOwO,oBAAoB,mBAAoBb,EAAS,CAE5D,CACM,GAEV,CAEUC,WAAAA,GACHa,EAAKN,EAAL1N,OACHA,KAAKiO,iBAAiBD,EAAKL,EAAL3N,MAE1B,CAEUqN,aAAAA,GACkB,IAAAa,EAArBlO,KAAKsN,iBACH,QAALY,EAAAF,EAAKN,EAAL1N,aAAK,IAAAkO,GAAAA,EAAAzX,KAALuJ,MACA4N,EAAKF,EAAL1N,UAAgB,GAEpB,CAEAiO,gBAAAA,CAAiBE,GAAsB,IAAAC,EACrCR,EAAKD,EAAL3N,KAAcmO,GACT,QAALC,EAAAJ,EAAKN,EAAL1N,aAAK,IAAAoO,GAAAA,EAAA3X,KAALuJ,MACA4N,EAAKF,EAAL1N,KAAgBmO,GAAOE,IACE,mBAAZA,EACTrO,KAAKsO,WAAWD,GAEhBrO,KAAK6N,SACP,IAEJ,CAEAS,UAAAA,CAAWD,GACOL,EAAKR,EAALxN,QAAkBqO,IAEhCT,EAAKJ,EAALxN,KAAgBqO,GAChBrO,KAAK6N,UAET,CAEAA,OAAAA,GACE,MAAMU,EAAYvO,KAAKuO,YACvBvO,KAAKgN,UAAUvS,SAASyS,IACtBA,EAASqB,EAAU,GAEvB,CAEAA,SAAAA,GAAqB,IAAAC,EACnB,MAA6B,mBAAlBR,EAAKR,EAALxN,MACFgO,EAAKR,EAALxN,MAKuC,YAA9B,QAAXwO,EAAA9G,WAAWlI,gBAAA,IAAAgP,OAAA,EAAXA,EAAqBC,gBAC9B,ICZWC,EAAgB,IAhEhBC,EAAA,IAAAlB,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAN,cAA4BV,EAMjC5X,WAAAA,GACE0L,QANFqG,EAAA,KAAAyH,GAAU,GACVzH,EAAA,KAAAwG,OAAA,GAEAxG,EAAA,KAAAyG,OAAA,GAIEC,EAAKD,EAAL3N,MAAe4O,IAGb,IAAKnH,GAAYlI,OAAOuO,iBAAkB,CACxC,MAAMe,EAAiBA,IAAMD,GAAS,GAChCE,EAAkBA,IAAMF,GAAS,GAKvC,OAHArP,OAAOuO,iBAAiB,SAAUe,GAAgB,GAClDtP,OAAOuO,iBAAiB,UAAWgB,GAAiB,GAE7C,KAELvP,OAAOwO,oBAAoB,SAAUc,GACrCtP,OAAOwO,oBAAoB,UAAWe,EAAgB,CAE1D,CAEM,GAEV,CAEU3B,WAAAA,GACHa,EAAKN,EAAL1N,OACHA,KAAKiO,iBAAiBD,EAAKL,EAAL3N,MAE1B,CAEUqN,aAAAA,GACkB,IAAAa,EAArBlO,KAAKsN,iBACH,QAALY,EAAAF,EAAKN,EAAL1N,aAAK,IAAAkO,GAAAA,EAAAzX,KAALuJ,MACA4N,EAAKF,EAAL1N,UAAgB,GAEpB,CAEAiO,gBAAAA,CAAiBE,GAAsB,IAAAC,EACrCR,EAAKD,EAAL3N,KAAcmO,GACT,QAALC,EAAAJ,EAAKN,EAAL1N,aAAK,IAAAoO,GAAAA,EAAA3X,KAALuJ,MACA4N,EAAKF,EAAL1N,KAAgBmO,EAAMnO,KAAK+O,UAAUnI,KAAK5G,OAC5C,CAEA+O,SAAAA,CAAUC,GACQhB,EAAKW,EAAL3O,QAAiBgP,IAG/BpB,EAAKe,EAAL3O,KAAegP,GACfhP,KAAKgN,UAAUvS,SAASyS,IACtBA,EAAS8B,EAAO,IAGtB,CAEAC,QAAAA,GACE,OAAOjB,EAAKW,EAAL3O,KACT,ICpBF,SAASkP,EAAkBC,GACzB,OAAOC,KAAKC,IAAI,IAAO,GAAKF,EAAc,IAC5C,CAEO,SAASG,EAASC,GACvB,MAAqC,YAA7B,OAAAA,QAAA,IAAAA,EAAAA,EAAe,WACnBb,EAAcO,UAEpB,CAEO,I,EAAMO,EAAN,cAA6Brb,MAGlCgB,WAAAA,CAAYqT,GACV3H,MAAM,kBACNb,KAAKyP,OAAS,OAAAjH,QAAA,IAAAA,OAAA,EAAAA,EAASiH,OACvBzP,KAAK0P,OAAS,OAAAlH,QAAA,IAAAA,OAAA,EAAAA,EAASkH,MACzB,GAGK,SAASC,EAAiB5Z,GAC/B,OAAOA,aAAiByZ,CAC1B,CAEO,SAASI,EACdC,GAEA,IAGIC,EAHAC,GAAmB,EACnBZ,EAAe,EACfa,GAAa,EAGjB,MAAMC,ECtCD,WACL,IAAIC,EACA1E,EAEJ,MAAMyE,EAAW,IAAI1E,SAAQ,CAAC4E,EAAUC,KACtCF,EAAUC,EACV3E,EAAS4E,CAAA,IAQX,SAASC,EAAS5F,GAChBpU,OAAOia,OAAOL,EAAUxF,UAGhBwF,EAAyCC,eACzCD,EAAyCzE,MACnD,CAmBA,OA9BAyE,EAASnH,OAAS,UAClBmH,EAASM,OAAM,SAYfN,EAASC,QAAWna,IAClBsa,EAAS,CACPvH,OAAQ,YACR/S,UAGFma,EAAQna,EAAM,EAEhBka,EAASzE,OAAUgF,IACjBH,EAAS,CACPvH,OAAQ,WACR0H,WAGFhF,EAAOgF,EAAO,EAGTP,CACT,CDFmBQ,GAiBXC,EAAcA,IAClBnD,EAAagB,cACW,WAAvBsB,EAAON,aAA4Bb,EAAcO,aAClDY,EAAOc,SAEHC,EAAWA,IAAMtB,EAASO,EAAON,cAAgBM,EAAOc,SAExDT,EAAWna,IACE,IAAA8a,EAAAC,EAAZd,IACHA,GAAa,EACN,QAAPa,EAAAhB,EAAOkB,iBAAA,IAAAF,GAAPA,EAAApa,KAAAoZ,EAAmB9Z,GACnB,QAAA+a,EAAAhB,SAAA,IAAAgB,GAAAA,IACAb,EAASC,QAAQna,GACnB,EAGIyV,EAAUzV,IACG,IAAAib,EAAAC,EAAZjB,IACHA,GAAa,EACN,QAAPgB,EAAAnB,EAAOqB,eAAA,IAAAF,GAAPA,EAAAva,KAAAoZ,EAAiB9Z,GACjB,QAAAkb,EAAAnB,SAAA,IAAAmB,GAAAA,IACAhB,EAASzE,OAAOzV,GAClB,EAGIob,EAAQA,IACL,IAAI5F,SAAS6F,IAAoB,IAAAC,EACtCvB,EAAc/Z,KACRia,GAAcU,MAChBU,EAAgBrb,EAClB,EAEK,QAAPsb,EAAAxB,EAAOyB,eAAA,IAAAD,GAAPA,EAAA5a,KAAAoZ,EAAkB,IACjB0B,MAAK,KAEW,IAAAC,GADjB1B,OAAa,EACRE,KACI,QAAPwB,EAAA3B,EAAO4B,kBAAA,IAAAD,GAAPA,EAAA/a,KAAAoZ,GACF,IAKE6B,EAAMA,KAEV,GAAI1B,EACF,OAGF,IAAI2B,EAGJ,MAAMrG,EACa,IAAjB6D,EAAqBU,EAAOvE,oBAAiB,EAG/C,IACEqG,EAAiB,OAAArG,QAAA,IAAAA,EAAAA,EAAkBuE,EAAOlD,IAC5C,CAAE,MAAO1Y,GACP0d,EAAiBpG,QAAQC,OAAOvX,EAClC,CAEAsX,QAAQ2E,QAAQyB,GACbJ,KAAKrB,GACLK,OAAOtc,IAAU,IAAA2d,EAAAC,EAAAC,EAEhB,GAAI9B,EACF,OAIF,MAAM+B,EAAe,QAAfH,EAAQ/B,EAAOkC,aAAA,IAAAH,EAAAA,EAAUnK,EAAW,EAAI,EACxCuK,EAAoB,QAApBH,EAAahC,EAAOmC,kBAAA,IAAAH,EAAAA,EAAc3C,EAClC+C,EACkB,oBAAfD,EACHA,EAAW7C,EAAclb,GACzB+d,EACAE,GACM,IAAVH,GACkB,kBAAVA,GAAsB5C,EAAe4C,GAC3B,oBAAVA,GAAwBA,EAAM5C,EAAclb,GNoLvD,IAAeke,GMlLVpC,GAAqBmC,GAMzB/C,IAGO,QAAP2C,EAAAjC,EAAOuC,cAAA,IAAAN,GAAPA,EAAArb,KAAAoZ,EAAgBV,EAAclb,INyKhBke,EMtKRF,ENuKL,IAAI1G,SAAS2E,IAClBvE,WAAWuE,EAASiC,EAAQ,KMtKrBZ,MAAK,IACGb,SAAgB,EAAYS,MAEpCI,MAAK,KACAxB,EACFvE,EAAOvX,GAEPyd,GACF,KApBFlG,EAAOvX,EAqBL,GACJ,EAGN,MAAO,CACLoe,QAASpC,EACTqC,OA7HcC,IACG,IAAAC,EAAZxC,IACHxE,EAAO,IAAIgE,EAAe+C,IAEnB,QAAPC,EAAA3C,EAAO4C,aAAA,IAAAD,GAAPA,EAAA/b,KAAAoZ,GACF,EAyHA6C,SAAUA,KAAM,IAAAC,EAEd,OADA,QAAAA,EAAA7C,SAAA,IAAA6C,GAAAA,IACO1C,CAAA,EAET2C,YA3HkBA,KAClB7C,GAAmB,CAAI,EA2HvB8C,cAxHoBA,KACpB9C,GAAmB,CAAK,EAwHxBa,WACAkC,MAAOA,KAEDlC,IACFc,IAEAP,IAAQI,KAAKG,GAERzB,GAGb,CE9NO,I,kBAAe8C,GAAAC,EAAA,IAAAvF,QAAf,MAAyBtY,WAAAA,GAE9B+R,EAAA,KAAA8L,OAAA,GAEAC,OAAAA,GACEjT,KAAKkT,gBACP,CAEUC,UAAAA,GRqFL,IAAwBpd,EQpF3BiK,KAAKkT,iBRqFiB,kBADKnd,EQlFRiK,KAAKoT,SRmFUrd,GAAS,GAAKA,IAAUsd,KQlFxDzF,EAAKoF,EAALhT,KAAkB2L,YAAW,KAC3B3L,KAAKsT,gBAAgB,GACpBtT,KAAKoT,QAEZ,CAEUG,YAAAA,CAAaC,GAErBxT,KAAKoT,OAAShE,KAAKtE,IACjB9K,KAAKoT,QAAU,EACf,OAAAI,QAAA,IAAAA,EAAAA,EAAc/L,EAAW4L,IAAW,IAExC,CAEUH,cAAAA,GACJlF,EAAKgF,EAALhT,QACFyT,aAAazF,EAAKgF,EAALhT,OACb4N,EAAKoF,EAALhT,UAAkB,GAEtB,IC4HW0T,IAAAC,EAAA,IAAAlG,QAAAmG,EAAA,IAAAnG,QAAAoG,EAAA,IAAApG,QAAAqG,EAAA,IAAArG,QAAAsG,EAAA,IAAAtG,QAAAuG,EAAA,IAAAvG,QAAAwG,EAAA,IAAAxG,QAAAyG,EAAA,IAAAC,QAAN,cAKGpB,EAeR5d,WAAAA,CAAY0a,GAA6D,IAAAuE,EACvEvT,QAAM4K,EAAA,KAAAyI,GAVRhN,EAAA,KAAAyM,OAAA,GACAzM,EAAA,KAAA0M,OAAA,GACA1M,EAAA,KAAA2M,OAAA,GACA3M,EAAA,KAAA4M,OAAA,GACA5M,EAAA,KAAA6M,OAAA,GAEA7M,EAAA,KAAA8M,OAAA,GACA9M,EAAA,KAAA+M,OAAA,GAKErG,EAAKqG,EAALjU,MAA4B,GAC5B4N,EAAKoG,EAALhU,KAAuB6P,EAAOwE,gBAC9BrU,KAAKsU,WAAWzE,EAAOrH,SACvBxI,KAAKuU,UAAY,GACjB3G,EAAKkG,EAAL9T,KAAe6P,EAAO2E,QACtB5G,EAAKiG,EAAL7T,KAAcgO,EAAK8F,EAAL9T,MAAayU,iBAC3BzU,KAAKoI,SAAWyH,EAAOzH,SACvBpI,KAAKsI,UAAYuH,EAAOvH,UACxBsF,EAAK+F,EAAL3T,KAidJ,SAMEwI,GAEA,MAAMiC,EAC2B,oBAAxBjC,EAAQkM,YACVlM,EAAQkM,cACTlM,EAAQkM,YAERC,OAAmB,IAATlK,EAEVmK,EAAuBD,EACe,oBAAjCnM,EAAQoM,qBACZpM,EAAQoM,uBACTpM,EAAQoM,qBACV,EAEJ,MAAO,CACLnK,OACAoK,gBAAiB,EACjBC,cAAeH,EAAW,OAAAC,QAAA,IAAAA,EAAAA,EAAwBG,KAAKC,MAAS,EAChE/gB,MAAO,KACPghB,iBAAkB,EAClBC,eAAgB,EAChBC,kBAAmB,EACnBC,mBAAoB,KACpBC,UAAW,KACXC,eAAe,EACfxM,OAAQ6L,EAAU,UAAY,UAC9BzM,YAAa,OAEjB,CApfyBqN,CAAgBvV,KAAKwI,UAC1CxI,KAAKuE,MAAe,QAAf6P,EAAQvE,EAAOtL,aAAA,IAAA6P,EAAAA,EAASpG,EAAK2F,EAAL3T,MAC7BA,KAAKmT,YACP,CACA,QAAIrU,GACF,OAAOkB,KAAKwI,QAAQ1J,IACtB,CAEA,WAAIuT,GAAsC,IAAAnE,EACxC,OAAY,QAAZA,EAAOF,EAAK+F,EAAL/T,aAAK,IAAAkO,OAAA,EAALA,EAAemE,OACxB,CAEAiC,UAAAA,CACE9L,GAEAxI,KAAKwI,SAAAnP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAe2U,EAAKgG,EAALhU,OAAyBwI,GAE7CxI,KAAKuT,aAAavT,KAAKwI,QAAQ4K,OACjC,CAEUE,cAAAA,GACHtT,KAAKuU,UAAUnf,QAAqC,SAA3B4K,KAAKuE,MAAM2D,aACvC8F,EAAK6F,EAAL7T,MAAYK,OAAOL,KAEvB,CAEAwV,OAAAA,CACEC,EACAjN,GAEA,MAAMiC,EAAOF,EAAYvK,KAAKuE,MAAMkG,KAAMgL,EAASzV,KAAKwI,SAUxD,OAPApB,EAAA8M,EAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CACbyK,OACAtT,KAAM,UACN2d,cAAe,OAAAtM,QAAA,IAAAA,OAAA,EAAAA,EAASmN,UACxBC,OAAQ,OAAApN,QAAA,IAAAA,OAAA,EAAAA,EAASoN,SAGZnL,CACT,CAEAoL,QAAAA,CACEtR,EACAuR,GAEA1O,EAAA8M,EAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,WAAYoN,QAAOuR,mBAC5C,CAEAxD,MAAAA,CAAO9J,GAAwC,IAAA4F,EAAA2H,EAC7C,MAAM1D,EAAe,QAAfjE,EAAUJ,EAAK+F,EAAL/T,aAAK,IAAAoO,OAAA,EAALA,EAAeiE,QAE/B,OADK,QAAL0D,EAAA/H,EAAK+F,EAAL/T,aAAK,IAAA+V,GAALA,EAAezD,OAAO9J,GACf6J,EAAUA,EAAQd,KAAK5J,GAAM4I,MAAM5I,GAAQ4D,QAAQ2E,SAC5D,CAEA+C,OAAAA,GACEpS,MAAMoS,UAENjT,KAAKsS,OAAO,CAAE5C,QAAQ,GACxB,CAEAsG,KAAAA,GACEhW,KAAKiT,UACLjT,KAAK6V,SAAS7H,EAAK2F,EAAL3T,MAChB,CAEA0I,QAAAA,GACE,OAAO1I,KAAKuU,UAAUtS,MACnBgU,IAAaC,OAAmD,KTxIrEC,ESwIiCF,EAASzN,QAAQ2N,QTvIlDrO,ESuI2D9H,KTrIjC,oBAAZmW,EAAyBA,EAAQrO,GAASqO,GATnD,IAMLA,EACArO,CSwIE,GACF,CAEAsO,UAAAA,GACE,OAAIpW,KAAKqW,oBAAsB,GACrBrW,KAAK0I,WAIb1I,KAAKwI,QAAQ6C,UAAYJ,GACzBjL,KAAKuE,MAAMsQ,gBAAkB7U,KAAKuE,MAAM0Q,mBAAqB,CAEjE,CAEAtM,OAAAA,GACE,QAAI3I,KAAKuE,MAAM+Q,gBAIXtV,KAAKqW,oBAAsB,EACtBrW,KAAKuU,UAAUtS,MACnBgU,GAAaA,EAASK,mBAAmB3N,eAInB,IAApB3I,KAAKuE,MAAMkG,KACpB,CAEA8L,aAAAA,GAAsC,IAAxB1O,EAAA7L,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAAY,EACxB,OACEgE,KAAKuE,MAAM+Q,oBACS,IAApBtV,KAAKuE,MAAMkG,OT9LV,SAAwBkL,EAAmB9N,GAChD,OAAOuH,KAAKtE,IAAI6K,GAAa9N,GAAa,GAAKkN,KAAKC,MAAO,EAC7D,CS6LOwB,CAAexW,KAAKuE,MAAMuQ,cAAejN,EAE9C,CAEAgG,OAAAA,GAAgB,IAAA4I,EACd,MAAMR,EAAWjW,KAAKuU,UAAUmC,MAAMC,GAAMA,EAAEC,6BAE9C,OAAAX,QAAA,IAAAA,GAAAA,EAAUY,QAAQ,CAAEC,eAAe,IAG9B,QAALL,EAAAzI,EAAK+F,EAAL/T,aAAK,IAAAyW,GAALA,EAAe/D,UACjB,CAEA9D,QAAAA,GAAiB,IAAAmI,EACf,MAAMd,EAAWjW,KAAKuU,UAAUmC,MAAMC,GAAMA,EAAEK,2BAE9C,OAAAf,QAAA,IAAAA,GAAAA,EAAUY,QAAQ,CAAEC,eAAe,IAG9B,QAALC,EAAA/I,EAAK+F,EAAL/T,aAAK,IAAA+W,GAALA,EAAerE,UACjB,CAEAuE,WAAAA,CAAYhB,GACLjW,KAAKuU,UAAU/Y,SAASya,KAC3BjW,KAAKuU,UAAU7Z,KAAKub,GAGpBjW,KAAKkT,iBAELlF,EAAK6F,EAAL7T,MAAYkX,OAAO,CAAE/f,KAAM,gBAAiB2Q,MAAO9H,KAAMiW,aAE7D,CAEAkB,cAAAA,CAAelB,GACTjW,KAAKuU,UAAU/Y,SAASya,KAC1BjW,KAAKuU,UAAYvU,KAAKuU,UAAUtb,QAAQ0d,GAAMA,IAAMV,IAE/CjW,KAAKuU,UAAUnf,SAGd4Y,EAAK+F,EAAL/T,QACEgO,EAAKiG,EAALjU,MACFgO,EAAK+F,EAAL/T,MAAcsS,OAAO,CAAE7C,QAAQ,IAE/BzB,EAAK+F,EAAL/T,MAAc4S,eAIlB5S,KAAKmT,cAGPnF,EAAK6F,EAAL7T,MAAYkX,OAAO,CAAE/f,KAAM,kBAAmB2Q,MAAO9H,KAAMiW,aAE/D,CAEAI,iBAAAA,GACE,OAAOrW,KAAKuU,UAAUnf,MACxB,CAEAgiB,UAAAA,GACOpX,KAAKuE,MAAM+Q,eACdlO,EAAA8M,EAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,cAE3B,CAEAkgB,KAAAA,CACE7O,EACA4C,GACgB,IAAAkM,EAAAC,EAChB,GAA+B,SAA3BvX,KAAKuE,MAAM2D,YACb,QAAwB,IAApBlI,KAAKuE,MAAMkG,MAAsB,OAAAW,QAAA,IAAAA,GAAAA,EAAc0L,cAEjD9W,KAAKsS,OAAO,CAAE5C,QAAQ,SACjB,GAAI1B,EAAK+F,EAAL/T,MAIT,OAFAgO,EAAK+F,EAAL/T,MAAc6S,gBAEP7E,EAAK+F,EAAL/T,MAAcqS,QAWzB,GANI7J,GACFxI,KAAKsU,WAAW9L,IAKbxI,KAAKwI,QAAQ6C,QAAS,CACzB,MAAM4K,EAAWjW,KAAKuU,UAAUmC,MAAMC,GAAMA,EAAEnO,QAAQ6C,UAClD4K,GACFjW,KAAKsU,WAAW2B,EAASzN,QAE7B,CAUA,MAAMgP,EAAkB,IAAIC,gBAKtBC,EAAqBC,IACzBthB,OAAOuhB,eAAeD,EAAQ,SAAU,CACtCE,YAAY,EACZ7hB,IAAKA,KACH4X,EAAKqG,EAALjU,MAA4B,GACrBwX,EAAgBM,SAEzB,EAgCEnY,EAGF,CACFyL,eACA5C,QAASxI,KAAKwI,QACdJ,SAAUpI,KAAKoI,SACfoM,OAAQxG,EAAK8F,EAAL9T,MACRuE,MAAOvE,KAAKuE,MACZwT,QArCcA,KACd,MAAM1M,EAAUF,EAAcnL,KAAKwI,QAAS4C,GAGtC4M,EAGF,CACFxD,OAAQxG,EAAK8F,EAAL9T,MACRoI,SAAUpI,KAAKoI,SACftJ,KAAMkB,KAAKlB,MAMb,OAHA4Y,EAAkBM,GAElBpK,EAAKqG,EAALjU,MAA4B,GACxBA,KAAKwI,QAAQyP,UACRjY,KAAKwI,QAAQyP,UAClB5M,EACA2M,EACAhY,MAIGqL,EAAQ2M,EAAkD,GA8BjE,IAAAE,GAdFR,EAAkB/X,GAEL,QAAb2X,EAAAtX,KAAKwI,QAAQ2P,gBAAA,IAAAb,GAAbA,EAAuBc,QACrBzY,EACAK,MAIF4N,EAAKgG,EAAL5T,KAAoBA,KAAKuE,OAII,SAA3BvE,KAAKuE,MAAM2D,aACXlI,KAAKuE,MAAM8Q,aAAsB,QAAtBkC,EAAc5X,EAAQyL,oBAAA,IAAAmM,OAAA,EAARA,EAAsBzY,QAE/CsI,EAAA8M,EAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,QAAS2H,KAAc,QAAdoZ,EAAMvY,EAAQyL,oBAAA,IAAA8M,OAAA,EAARA,EAAsBpZ,OAG9D,MAAMoS,EAAWjd,IASe,IAAAokB,EAAAC,EAAAC,EAAAC,GAPxB7I,EAAiB1b,IAAUA,EAAMyb,QACrCtI,EAAA8M,EAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CACb7I,KAAM,QACNlD,UAIC0b,EAAiB1b,MAED,QAAnBokB,GAAAC,EAAAtK,EAAK6F,EAAL7T,MAAY6P,QAAOqB,eAAA,IAAAmH,GAAnBA,EAAA5hB,KAAA6hB,EACErkB,EACA+L,MAEiB,QAAnBuY,GAAAC,EAAAxK,EAAK6F,EAAL7T,MAAY6P,QAAO4I,iBAAA,IAAAF,GAAnBA,EAAA9hB,KAAA+hB,EACExY,KAAKuE,MAAMkG,KACXxW,EACA+L,OAKJA,KAAKmT,YAAY,EAuDnB,OAnDAvF,EAAKmG,EAAL/T,KAAgB4P,EAAc,CAC5BtE,eAAgB,OAAAF,QAAA,IAAAA,OAAA,EAAAA,EAAcE,eAG9BqB,GAAIhN,EAAQoY,QACZtF,MAAO+E,EAAgB/E,MAAM7L,KAAK4Q,GAClCzG,UAAYtG,IAAS,IAAAiO,EAAAC,EAAAC,EAAAC,EACnB,QAAa,IAATpO,EAAJ,CAUA,IACEzK,KAAKwV,QAAQ/K,EACf,CAAE,MAAOxW,GAEP,YADAid,EAAQjd,EAEV,CAGmB,QAAnBykB,GAAAC,EAAA3K,EAAK6F,EAAL7T,MAAY6P,QAAOkB,iBAAA,IAAA2H,GAAnBA,EAAAjiB,KAAAkiB,EAA+BlO,EAAMzK,MAClB,QAAnB4Y,GAAAC,EAAA7K,EAAK6F,EAAL7T,MAAY6P,QAAO4I,iBAAA,IAAAG,GAAnBA,EAAAniB,KAAAoiB,EACEpO,EACAzK,KAAKuE,MAAMtQ,MACX+L,MAIFA,KAAKmT,YAlBL,MAFEjC,EAAQ,IAAI/c,MAAA,GAAA2F,OAASkG,KAAKsI,UAAS,uBAoBpB,EAEnB4I,UACAkB,OAAQA,CAACjD,EAAclb,KACrBmT,EAAA8M,EAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,SAAUgY,eAAclb,SAAQ,EAEzDqd,QAASA,KACPlK,EAAA8M,EAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,SAAU,EAEnCsa,WAAYA,KACVrK,EAAA8M,EAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,YAAa,EAEtC4a,MAAOpS,EAAQ6I,QAAQuJ,MACvBC,WAAYrS,EAAQ6I,QAAQwJ,WAC5BzC,YAAa5P,EAAQ6I,QAAQ+G,YAC7BoB,OAAQA,KAAM,KAGT3C,EAAK+F,EAAL/T,MAAc8S,OACvB,IAoFF,SAAA4C,GAlFYoD,GAwER9Y,KAAKuE,MAtEHA,KAC8B,IAAAwU,EAAAC,EAuFlCvO,EACAjC,EAvFI,OAAQsQ,EAAO3hB,MACb,IAAK,SACH,OAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACH4Q,kBAAmB2D,EAAO3J,aAC1BiG,mBAAoB0D,EAAO7kB,QAE/B,IAAK,QACH,OAAAoF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACH2D,YAAa,WAEjB,IAAK,WACH,OAAA7O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACH2D,YAAa,aAEjB,IAAK,QACH,OAAA7O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,IAmEbkG,EAlEwBlG,EAAMkG,KAmE9BjC,EAnEoCxI,KAAKwI,SAqEzCnP,EAAAA,EAAAA,GAAA,CACE8b,kBAAmB,EACnBC,mBAAoB,KACpBlN,YAAaoH,EAAS9G,EAAQ+G,aAAe,WAAa,eAC7C,IAAT9E,GACD,CACCxW,MAAO,KACP6U,OAAQ,cA5EkC,IACtCuM,UAAkB,QAAlB0D,EAAWD,EAAOha,YAAA,IAAAia,EAAAA,EAAQ,OAE9B,IAAK,UACH,OAAA1f,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACHkG,KAAMqO,EAAOrO,KACboK,gBAAiBtQ,EAAMsQ,gBAAkB,EACzCC,cAAsB,QAAtBkE,EAAeF,EAAOhE,qBAAA,IAAAkE,EAAAA,EAAiBjE,KAAKC,MAC5C/gB,MAAO,KACPqhB,eAAe,EACfxM,OAAQ,YACHgQ,EAAOlD,QAAU,CACpB1N,YAAa,OACbiN,kBAAmB,EACnBC,mBAAoB,OAG1B,IAAK,QACH,MAAMnhB,EAAQ6kB,EAAO7kB,MAErB,OAAI0b,EAAiB1b,IAAUA,EAAMwb,QAAUzB,EAAK4F,EAAL5T,OAC7C3G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY2U,EAAK4F,EAAL5T,OAAK,IAAckI,YAAa,UAG9C7O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACHtQ,QACAghB,iBAAkB1Q,EAAM0Q,iBAAmB,EAC3CC,eAAgBH,KAAKC,MACrBG,kBAAmB5Q,EAAM4Q,kBAAoB,EAC7CC,mBAAoBnhB,EACpBiU,YAAa,OACbY,OAAQ,UAEZ,IAAK,aACH,OAAAzP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACH+Q,eAAe,IAEnB,IAAK,WACH,OAAAjc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GACAuU,EAAOvU,OAEhB,EAGW0U,CAAQjZ,KAAKuE,OAE1BqH,EAAcQ,OAAM,KAClBpM,KAAKuU,UAAU9Z,SAASwb,IACtBA,EAASiD,eAAe,IAG1BlL,EAAK6F,EAAL7T,MAAYkX,OAAO,CAAEpP,MAAO9H,KAAM7I,KAAM,UAAW2hB,UAAS,GAEhE,CC1hBK,I,qBAAMK,IAAAC,EAAA,IAAA3L,QAAN,cAAyBV,EAG9B5X,WAAAA,GAAkD,IAA/B0a,EAAA7T,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAA2B,CAAC,EAC7C6E,QAHFqG,EAAA,KAAAkS,OAAA,GAEmB,KAAAvJ,OAAAA,EAEjBjC,EAAKwL,EAALpZ,KAAgB,IAAIpL,IACtB,CAEAykB,KAAAA,CAME7E,EACAhM,EAIAjE,GAC+C,IAAA+U,EAC/C,MAAMlR,EAAWI,EAAQJ,SACnBE,EACI,QADJgR,EACJ9Q,EAAQF,iBAAA,IAAAgR,EAAAA,EAAa/Q,EAAsBH,EAAUI,GACvD,IAAIV,EAAQ9H,KAAKhK,IAA4CsS,GAc7D,OAZKR,IACHA,EAAQ,IAAI4L,GAAM,CAChBc,SACApM,WACAE,YACAE,QAASgM,EAAO+E,oBAAoB/Q,GACpCjE,QACA8P,eAAgBG,EAAOgF,iBAAiBpR,KAE1CpI,KAAKG,IAAI2H,IAGJA,CACT,CAEA3H,GAAAA,CAAI2H,GACGkG,EAAKoL,EAALpZ,MAAclK,IAAIgS,EAAMQ,aAC3B0F,EAAKoL,EAALpZ,MAAcmH,IAAIW,EAAMQ,UAAWR,GAEnC9H,KAAKkX,OAAO,CACV/f,KAAM,QACN2Q,UAGN,CAEAzH,MAAAA,CAAOyH,GACL,MAAM2R,EAAazL,EAAKoL,EAALpZ,MAAchK,IAAI8R,EAAMQ,WAEvCmR,IACF3R,EAAMmL,UAEFwG,IAAe3R,GACjBkG,EAAKoL,EAALpZ,MAAcoN,OAAOtF,EAAMQ,WAG7BtI,KAAKkX,OAAO,CAAE/f,KAAM,UAAW2Q,UAEnC,CAEA4R,KAAAA,GACE9N,EAAcQ,OAAM,KAClBpM,KAAK2Z,SAASlf,SAASqN,IACrB9H,KAAKK,OAAOyH,EAAM,GAClB,GAEN,CAEA9R,GAAAA,CAMEsS,GAEA,OAAO0F,EAAKoL,EAALpZ,MAAchK,IAAIsS,EAG3B,CAEAqR,MAAAA,GACE,MAAO,IAAI3L,EAAKoL,EAALpZ,MAAczI,SAC3B,CAEAmf,IAAAA,CACE1O,GAEA,MAAM4R,GAAAvgB,EAAAA,EAAAA,GAAA,CAAqB4O,OAAO,GAASD,GAE3C,OAAOhI,KAAK2Z,SAASjD,MAAM5O,GACzBC,EAAW6R,EAAkB9R,IAEjC,CAEA+R,OAAAA,GAAsE,IAA9D7R,EAAAhM,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAA4C,CAAC,EACnD,MAAM8d,EAAU9Z,KAAK2Z,SACrB,OAAOtjB,OAAOf,KAAK0S,GAAS5S,OAAS,EACjC0kB,EAAQ7gB,QAAQ6O,GAAUC,EAAWC,EAASF,KAC9CgS,CACN,CAEA5C,MAAAA,CAAO6C,GACLnO,EAAcQ,OAAM,KAClBpM,KAAKgN,UAAUvS,SAASyS,IACtBA,EAAS6M,EAAM,GACf,GAEN,CAEAlM,OAAAA,GACEjC,EAAcQ,OAAM,KAClBpM,KAAK2Z,SAASlf,SAASqN,IACrBA,EAAM+F,SAAS,GACf,GAEN,CAEAe,QAAAA,GACEhD,EAAcQ,OAAM,KAClBpM,KAAK2Z,SAASlf,SAASqN,IACrBA,EAAM8G,UAAU,GAChB,GAEN,IC7IWoL,IAAAC,GAAA,IAAAxM,QAAAyM,GAAA,IAAAzM,QAAAsG,GAAA,IAAAtG,QAAAyG,GAAA,IAAAC,QAAN,cAKGpB,EASR5d,WAAAA,CAAY0a,GACVhP,QAAM4K,EAAA,KAAAyI,IALRhN,EAAA,KAAA+S,QAAA,GACA/S,EAAA,KAAAgT,QAAA,GACAhT,EAAA,KAAA6M,QAAA,GAKE/T,KAAKma,WAAatK,EAAOsK,WACzBvM,EAAKsM,GAALla,KAAsB6P,EAAOuK,eAC7BxM,EAAKqM,GAALja,KAAkB,IAClBA,KAAKuE,MAAQsL,EAAOtL,OAyPf,CACL5E,aAAS,EACT8K,UAAM,EACNxW,MAAO,KACPkb,aAAc,EACdkL,cAAe,KACfC,UAAU,EACVxR,OAAQ,OACRyR,eAAW,EACXC,YAAa,GAhQbxa,KAAKsU,WAAWzE,EAAOrH,SACvBxI,KAAKmT,YACP,CAEAmB,UAAAA,CACE9L,GAEAxI,KAAKwI,QAAUA,EAEfxI,KAAKuT,aAAavT,KAAKwI,QAAQ4K,OACjC,CAEA,QAAItU,GACF,OAAOkB,KAAKwI,QAAQ1J,IACtB,CAEAmY,WAAAA,CAAYhB,GACLjI,EAAKiM,GAALja,MAAgBxE,SAASya,KAC5BjI,EAAKiM,GAALja,MAAgBtF,KAAKub,GAGrBjW,KAAKkT,iBAELlF,EAAKkM,GAALla,MAAoBkX,OAAO,CACzB/f,KAAM,gBACN0R,SAAU7I,KACViW,aAGN,CAEAkB,cAAAA,CAAelB,GACbrI,EAAKqM,GAALja,KAAkBgO,EAAKiM,GAALja,MAAgB/G,QAAQ0d,GAAMA,IAAMV,KAEtDjW,KAAKmT,aAELnF,EAAKkM,GAALla,MAAoBkX,OAAO,CACzB/f,KAAM,kBACN0R,SAAU7I,KACViW,YAEJ,CAEU3C,cAAAA,GACHtF,EAAKiM,GAALja,MAAgB5K,SACO,YAAtB4K,KAAKuE,MAAMuE,OACb9I,KAAKmT,aAELnF,EAAKkM,GAALla,MAAoBK,OAAOL,MAGjC,CAEA0S,WAA6B,IAAAxE,EAAAE,EAC3B,OAC0B,QAD1BF,EACO,QADPE,EACEJ,EAAK+F,GAAL/T,aAAK,IAAAoO,OAAA,EAALA,EAAesE,kBAAS,IAAAxE,EAAAA,EAExBlO,KAAKya,QAAQza,KAAKuE,MAAMgW,UAE5B,CAEA,aAAME,CAAQF,GAAuC,IAAAG,EACnD9M,EAAKmG,GAAL/T,KAAgB4P,EAAc,CAC5BjD,GAAIA,IACG3M,KAAKwI,QAAQmS,WAGX3a,KAAKwI,QAAQmS,WAAWJ,GAFtBhP,QAAQC,OAAO,IAAIrX,MAAM,wBAIpCie,OAAQA,CAACjD,EAAclb,KACrBmT,EAAA8M,GAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,SAAUgY,eAAclb,SAAQ,EAEzDqd,QAASA,KACPlK,EAAA8M,GAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,SAAU,EAEnCsa,WAAYA,KACVrK,EAAA8M,GAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,YAAa,EAEtC4a,MAAoB,QAApB2I,EAAO1a,KAAKwI,QAAQuJ,aAAA,IAAA2I,EAAAA,EAAS,EAC7B1I,WAAYhS,KAAKwI,QAAQwJ,WACzBzC,YAAavP,KAAKwI,QAAQ+G,YAC1BoB,OAAQA,IAAM3C,EAAKkM,GAALla,MAAoB2Q,OAAO3Q,SAG3C,MAAM4a,EAAiC,YAAtB5a,KAAKuE,MAAMuE,OACtBwR,GAAYtM,EAAK+F,GAAL/T,MAAc4Q,WAEhC,IAAI,IAAAmG,EAAAsB,EAAAwC,EAAAC,EAAAxC,EAAAC,EAAAwC,EAAAC,EACF,IAAKJ,EAAU,KAAA7E,EAAAU,EAAAwE,EAAAC,EACb9T,EAAA8M,GAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,UAAWojB,YAAWD,mBAEZ,QAAjCvE,GAAMU,EAAAzI,EAAKkM,GAALla,MAAoB6P,QAAOsL,gBAAA,IAAApF,OAAA,EAA3BA,EAAAtf,KAAAggB,EACJ8D,EACAva,OAEF,MAAML,QAA6B,QAAnBsb,GAAMC,EAAAlb,KAAKwI,SAAQ2S,gBAAA,IAAAF,OAAA,EAAbA,EAAAxkB,KAAAykB,EAAwBX,IAC1C5a,IAAYK,KAAKuE,MAAM5E,SACzByH,EAAA8M,GAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CACb7I,KAAM,UACNwI,UACA4a,YACAD,YAGN,CACA,MAAM7P,QAAauD,EAAK+F,GAAL/T,MAAc8S,QAwBjC,aArBiC,QAAjCiE,GAAMsB,EAAArK,EAAKkM,GAALla,MAAoB6P,QAAOkB,iBAAA,IAAAgG,OAAA,EAA3BA,EAAAtgB,KAAA4hB,EACJ5N,EACA8P,EACAva,KAAKuE,MAAM5E,QACXK,aAGiB,QAAnB6a,GAAMC,EAAA9a,KAAKwI,SAAQuI,iBAAA,IAAA8J,OAAA,EAAbA,EAAApkB,KAAAqkB,EAAyBrQ,EAAM8P,EAAWva,KAAKuE,MAAM5E,gBAG1B,QAAjC2Y,GAAMC,EAAAvK,EAAKkM,GAALla,MAAoB6P,QAAO4I,iBAAA,IAAAH,OAAA,EAA3BA,EAAA7hB,KAAA8hB,EACJ9N,EACA,KACAzK,KAAKuE,MAAMgW,UACXva,KAAKuE,MAAM5E,QACXK,aAGiB,QAAnB+a,GAAMC,EAAAhb,KAAKwI,SAAQiQ,iBAAA,IAAAsC,OAAA,EAAbA,EAAAtkB,KAAAukB,EAAyBvQ,EAAM,KAAM8P,EAAWva,KAAKuE,MAAM5E,UAEjEyH,EAAA8M,GAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,UAAWsT,SAC3BA,CACT,CAAE,MAAOxW,GACP,IAAI,IAAAukB,EAAAE,EAAA0C,EAAAC,EAAA1C,EAAAC,EAAA0C,EAAAC,EA8BF,YA5BiC,QAAjC/C,GAAME,EAAA1K,EAAKkM,GAALla,MAAoB6P,QAAOqB,eAAA,IAAAsH,OAAA,EAA3BA,EAAA/hB,KAAAiiB,EACJzkB,EACAsmB,EACAva,KAAKuE,MAAM5E,QACXK,aAGiB,QAAnBob,GAAMC,EAAArb,KAAKwI,SAAQ0I,eAAA,IAAAkK,OAAA,EAAbA,EAAA3kB,KAAA4kB,EACJpnB,EACAsmB,EACAva,KAAKuE,MAAM5E,gBAIoB,QAAjCgZ,GAAMC,EAAA5K,EAAKkM,GAALla,MAAoB6P,QAAO4I,iBAAA,IAAAE,OAAA,EAA3BA,EAAAliB,KAAAmiB,OACJ,EACA3kB,EACA+L,KAAKuE,MAAMgW,UACXva,KAAKuE,MAAM5E,QACXK,aAGiB,QAAnBsb,GAAMC,EAAAvb,KAAKwI,SAAQiQ,iBAAA,IAAA6C,OAAA,EAAbA,EAAA7kB,KAAA8kB,OACJ,EACAtnB,EACAsmB,EACAva,KAAKuE,MAAM5E,UAEP1L,CACR,CAAE,QACAmT,EAAA8M,GAAAlU,KAAK0V,IAAAjf,KAALuJ,KAAe,CAAE7I,KAAM,QAASlD,SAClC,CACF,CAAE,QACA+Z,EAAKkM,GAALla,MAAoBwb,QAAQxb,KAC9B,CACF,IAuEF,SAAA0V,GArEYoD,GAwDR9Y,KAAKuE,MAtDHA,KAEA,OAAQuU,EAAO3hB,MACb,IAAK,SACH,OAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACH4K,aAAc2J,EAAO3J,aACrBkL,cAAevB,EAAO7kB,QAE1B,IAAK,QACH,OAAAoF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACH+V,UAAU,IAEd,IAAK,WACH,OAAAjhB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACH+V,UAAU,IAEd,IAAK,UACH,OAAAjhB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACH5E,QAASmZ,EAAOnZ,QAChB8K,UAAM,EACN0E,aAAc,EACdkL,cAAe,KACfpmB,MAAO,KACPqmB,SAAUxB,EAAOwB,SACjBxR,OAAQ,UACRyR,UAAWzB,EAAOyB,UAClBC,YAAazF,KAAKC,QAEtB,IAAK,UACH,OAAA3b,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACHkG,KAAMqO,EAAOrO,KACb0E,aAAc,EACdkL,cAAe,KACfpmB,MAAO,KACP6U,OAAQ,UACRwR,UAAU,IAEd,IAAK,QACH,OAAAjhB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKkL,GAAA,IACHkG,UAAM,EACNxW,MAAO6kB,EAAO7kB,MACdkb,aAAc5K,EAAM4K,aAAe,EACnCkL,cAAevB,EAAO7kB,MACtBqmB,UAAU,EACVxR,OAAQ,UAEd,EAEWmQ,CAAQjZ,KAAKuE,OAE1BqH,EAAcQ,OAAM,KAClB4B,EAAKiM,GAALja,MAAgBvF,SAASwb,IACvBA,EAASwF,iBAAiB3C,EAAO,IAEnC9K,EAAKkM,GAALla,MAAoBkX,OAAO,CACzBrO,SAAU7I,KACV7I,KAAM,UACN2hB,UACA,GAEN,CCjQK,I,wBAAM4C,IAAAC,GAAA,IAAAlO,QAAAmO,GAAA,IAAAnO,QAAAoO,GAAA,IAAApO,QAAN,cAA4BV,EAKjC5X,WAAAA,GAAqD,IAAlC0a,EAAA7T,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAA8B,CAAC,EAChD6E,QALFqG,EAAA,KAAAyU,QAAA,GACAzU,EAAA,KAAA0U,QAAA,GACA1U,EAAA,KAAA2U,QAAA,GAEmB,KAAAhM,OAAAA,EAEjBjC,EAAK+N,GAAL3b,KAAkB,IAAIlL,KACtB8Y,EAAKgO,GAAL5b,KAAe,IAAIpL,KACnBgZ,EAAKiO,GAAL7b,KAAmB,EACrB,CAEAqZ,KAAAA,CACE7E,EACAhM,EACAjE,GAC+C,IAAAuX,EAC/C,MAAMjT,EAAW,IAAImR,GAAS,CAC5BI,cAAepa,KACfma,WAAcvM,EAAKiO,GAAL7b,MAAA8b,EAAA9N,EAAK6N,GAAL7b,QAAK8b,IACnBtT,QAASgM,EAAOuH,uBAAuBvT,GACvCjE,UAKF,OAFAvE,KAAKG,IAAI0I,GAEFA,CACT,CAEA1I,GAAAA,CAAI0I,GACFmF,EAAK2N,GAAL3b,MAAgBG,IAAI0I,GACpB,MAAMmT,EAAQC,GAASpT,GACvB,GAAqB,kBAAVmT,EAAoB,CAC7B,MAAME,EAAkBlO,EAAK4N,GAAL5b,MAAahK,IAAIgmB,GACrCE,EACFA,EAAgBxhB,KAAKmO,GAErBmF,EAAK4N,GAAL5b,MAAamH,IAAI6U,EAAO,CAACnT,GAE7B,CACA7I,KAAKkX,OAAO,CAAE/f,KAAM,QAAS0R,YAC/B,CAEAxI,MAAAA,CAAOwI,GACL,GAAImF,EAAK2N,GAAL3b,MAAgBoN,OAAOvE,GAAW,CACpC,MAAMmT,EAAQC,GAASpT,GACvB,GAAqB,kBAAVmT,EAAoB,CAC7B,MAAME,EAAkBlO,EAAK4N,GAAL5b,MAAahK,IAAIgmB,GACzC,GAAIE,EACF,GAAIA,EAAgB9mB,OAAS,EAAG,CAC9B,MAAM0F,EAAQohB,EAAgBriB,QAAQgP,IACvB,IAAX/N,GACFohB,EAAgB5b,OAAOxF,EAAO,EAElC,MAAWohB,EAAgB,KAAOrT,GAChCmF,EAAK4N,GAAL5b,MAAaoN,OAAO4O,EAG1B,CACF,CAIAhc,KAAKkX,OAAO,CAAE/f,KAAM,UAAW0R,YACjC,CAEA8H,MAAAA,CAAO9H,GACL,MAAMmT,EAAQC,GAASpT,GACvB,GAAqB,kBAAVmT,EAAoB,CAC7B,MAAMG,EAAyBnO,EAAK4N,GAAL5b,MAAahK,IAAIgmB,GAC1CI,EAAuB,OAAAD,QAAA,IAAAA,OAAA,EAAAA,EAAwBzF,MAClD2F,GAAyB,YAAnBA,EAAE9X,MAAMuE,SAIjB,OAAQsT,GAAwBA,IAAyBvT,CAC3D,CAGE,OAAO,CAEX,CAEA2S,OAAAA,CAAQ3S,GACN,MAAMmT,EAAQC,GAASpT,GACvB,GAAqB,kBAAVmT,EAAoB,KAAA9N,EAAAoO,EAC7B,MAAMC,EACM,QADNrO,EAAgBF,EAAK4N,GAAL5b,MACnBhK,IAAIgmB,UAAK,IAAA9N,OAAA,EADUA,EAElBwI,MAAM2F,GAAMA,IAAMxT,GAAYwT,EAAE9X,MAAM+V,WAE1C,OAA+B,QAA/BgC,EAAO,OAAAC,QAAA,IAAAA,OAAA,EAAAA,EAAe7J,kBAAS,IAAA4J,EAAAA,EAAK/Q,QAAQ2E,SAC9C,CACE,OAAO3E,QAAQ2E,SAEnB,CAEAwJ,KAAAA,GACE9N,EAAcQ,OAAM,KAClB4B,EAAK2N,GAAL3b,MAAgBvF,SAASoO,IACvB7I,KAAKkX,OAAO,CAAE/f,KAAM,UAAW0R,YAAW,IAE5CmF,EAAK2N,GAAL3b,MAAgB0Z,QAChB1L,EAAK4N,GAAL5b,MAAa0Z,OAAO,GAExB,CAEAC,MAAAA,GACE,OAAOnkB,MAAMgnB,KAAKxO,EAAK2N,GAAL3b,MACpB,CAEA0W,IAAAA,CAME1O,GAEA,MAAM4R,GAAAvgB,EAAAA,EAAAA,GAAA,CAAqB4O,OAAO,GAASD,GAE3C,OAAOhI,KAAK2Z,SAASjD,MAAM7N,GACzBD,EAAcgR,EAAkB/Q,IAEpC,CAEAgR,OAAAA,GAAwD,IAAhD7R,EAAAhM,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAA2B,CAAC,EAClC,OAAOgE,KAAK2Z,SAAS1gB,QAAQ4P,GAAaD,EAAcZ,EAASa,IACnE,CAEAqO,MAAAA,CAAO6C,GACLnO,EAAcQ,OAAM,KAClBpM,KAAKgN,UAAUvS,SAASyS,IACtBA,EAAS6M,EAAM,GACf,GAEN,CAEA0C,qBAAAA,GACE,MAAMC,EAAkB1c,KAAK2Z,SAAS1gB,QAAQ0d,GAAMA,EAAEpS,MAAM+V,WAE5D,OAAO1O,EAAcQ,OAAM,IACzBb,QAAQoR,IACND,EAAgBxjB,KAAK2P,GAAaA,EAAS6J,WAAWnC,MAAM5I,OAGlE,IAGF,SAASsU,GAASpT,GAAwC,IAAA+T,EACxD,OAAwB,QAAxBA,EAAO/T,EAASL,QAAQwT,aAAA,IAAAY,OAAA,EAAjBA,EAAwBC,EACjC,CC/NO,SAASC,GACdC,GAEA,MAAO,CACL3E,QAASA,CAACzY,EAASmI,KAAU,IAAAyP,EAAAyF,EAAAC,EAC3B,MAAMzU,EAAU7I,EAAQ6I,QAClB0U,EAAoB,QAApB3F,EAAY5X,EAAQyL,oBAAA,IAAAmM,GAAc,QAAdA,EAARA,EAAsBzY,YAAA,IAAAyY,GAAM,QAANA,EAAtBA,EAA4B4F,iBAAA,IAAA5F,OAAA,EAA5BA,EAAuC2F,UACnDE,GAAyB,QAAdJ,EAAArd,EAAQ4E,MAAMkG,YAAA,IAAAuS,OAAA,EAAdA,EAAoBD,QAAS,GACxCM,GAA8B,QAAdJ,EAAAtd,EAAQ4E,MAAMkG,YAAA,IAAAwS,OAAA,EAAdA,EAAoBK,aAAc,GACxD,IAAI9T,EAAgC,CAAEuT,MAAO,GAAIO,WAAY,IACzDC,EAAc,EAElB,MAAMxF,EAAUyF,UACd,IAAIC,GAAY,EAChB,MAgBMpS,EAAUF,EAAcxL,EAAQ6I,QAAS7I,EAAQyL,cAGjDsS,EAAYF,MAChB/S,EACAkT,EACAC,KAEA,GAAIH,EACF,OAAOlS,QAAQC,SAGjB,GAAa,MAATmS,GAAiBlT,EAAKsS,MAAM3nB,OAC9B,OAAOmW,QAAQ2E,QAAQzF,GAGzB,MAAMuN,EAGF,CACFxD,OAAQ7U,EAAQ6U,OAChBpM,SAAUzI,EAAQyI,SAClByV,UAAWF,EACXT,UAAWU,EAAW,WAAa,UACnC9e,KAAMa,EAAQ6I,QAAQ1J,MAxCC6Y,QA2CPK,EA1ClB3hB,OAAOuhB,eAAeD,EAAQ,SAAU,CACtCE,YAAY,EACZ7hB,IAAKA,KACC2J,EAAQmY,OAAOgG,QACjBL,GAAY,EAEZ9d,EAAQmY,OAAOhK,iBAAiB,SAAS,KACvC2P,GAAY,CAAI,IAGb9d,EAAQmY,UAkCnB,MAAMiG,QAAa1S,EACjB2M,IAGI,SAAEgG,GAAare,EAAQ6I,QACvByV,EAAQL,EAAW5S,EAAaL,EAEtC,MAAO,CACLoS,MAAOkB,EAAMxT,EAAKsS,MAAOgB,EAAMC,GAC/BV,WAAYW,EAAMxT,EAAK6S,WAAYK,EAAOK,GAC3C,EAIH,GAAId,GAAaE,EAAShoB,OAAQ,CAChC,MAAMwoB,EAAyB,aAAdV,EAEXgB,EAAU,CACdnB,MAAOK,EACPE,WAAYD,GAERM,GALcC,EAAWO,GAAuBC,IAK5B5V,EAAS0V,GAEnC1U,QAAekU,EAAUQ,EAASP,EAAOC,EAC3C,KAAO,CACL,MAAMS,EAAiB,OAAAtB,QAAA,IAAAA,EAAAA,EAASK,EAAShoB,OAGzC,EAAG,KAAAkpB,EACD,MAAMX,EACY,IAAhBJ,EACoB,QADJe,EACXjB,EAAc,UAAC,IAAAiB,EAAAA,EAAK9V,EAAQ+V,iBAC7BH,GAAiB5V,EAASgB,GAChC,GAAI+T,EAAc,GAAc,MAATI,EACrB,MAEFnU,QAAekU,EAAUlU,EAAQmU,GACjCJ,GACF,OAASA,EAAcc,EACzB,CAEA,OAAO7U,CAAA,EAEL7J,EAAQ6I,QAAQyP,UAClBtY,EAAQoY,QAAU,KAAM,IAAAyG,EAAAC,EACtB,OAAuB,QAAvBD,GAAOC,EAAA9e,EAAQ6I,SAAQyP,iBAAA,IAAAuG,OAAA,EAAhBA,EAAA/nB,KAAAgoB,EACL1G,EACA,CACEvD,OAAQ7U,EAAQ6U,OAChBpM,SAAUzI,EAAQyI,SAClBtJ,KAAMa,EAAQ6I,QAAQ1J,KACtBgZ,OAAQnY,EAAQmY,QAElBhQ,EACD,EAGHnI,EAAQoY,QAAUA,CACpB,EAGN,CAEA,SAASqG,GACP5V,EAAAtQ,GAEqB,IADrB,MAAE6kB,EAAA,WAAOO,GAAWplB,EAEpB,MAAMwmB,EAAY3B,EAAM3nB,OAAS,EACjC,OAAO2nB,EAAM3nB,OAAS,EAClBoT,EAAQ4V,iBACNrB,EAAM2B,GACN3B,EACAO,EAAWoB,GACXpB,QAEF,CACN,CAEA,SAASa,GACP3V,EAAA3J,GAEqB,IAAA8f,EAAA,IADrB,MAAE5B,EAAA,WAAOO,GAAWze,EAEpB,OAAOke,EAAM3nB,OAAS,EACV,QADUupB,EAClBnW,EAAQ2V,4BAAA,IAAAQ,OAAA,EAARA,EAAAloB,KAAA+R,EAA+BuU,EAAM,GAAIA,EAAOO,EAAW,GAAIA,QAC/D,CACN,CC9FO,IAAMsB,IAAAC,GAAA,IAAApR,QAAAyM,GAAA,IAAAzM,QAAAuG,GAAA,IAAAvG,QAAAqR,GAAA,IAAArR,QAAAsR,GAAA,IAAAtR,QAAAuR,GAAA,IAAAvR,QAAAwR,GAAA,IAAAxR,QAAAyR,GAAA,IAAAzR,QAAN,MAULtY,WAAAA,GAA4C,IAAhC0a,EAAA7T,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAA4B,CAAC,EATzCkL,EAAA,KAAA2X,QAAA,GACA3X,EAAA,KAAAgT,QAAA,GACAhT,EAAA,KAAA8M,QAAA,GACA9M,EAAA,KAAA4X,QAAA,GACA5X,EAAA,KAAA6X,QAAA,GACA7X,EAAA,KAAA8X,QAAA,GACA9X,EAAA,KAAA+X,QAAA,GACA/X,EAAA,KAAAgY,QAAA,GAGEtR,EAAKiR,GAAL7e,KAAmB6P,EAAOsP,YAAc,IAAIhG,IAC5CvL,EAAKsM,GAALla,KAAsB6P,EAAOuK,eAAiB,IAAIsB,IAClD9N,EAAKoG,GAALhU,KAAuB6P,EAAOwE,gBAAkB,CAAC,GACjDzG,EAAKkR,GAAL9e,KAAsB,IAAIpL,KAC1BgZ,EAAKmR,GAAL/e,KAAyB,IAAIpL,KAC7BgZ,EAAKoR,GAALhf,KAAmB,EACrB,CAEAof,KAAAA,GAAc,IAAAC,EACZzR,EAAKoR,GAALhf,MAAAqf,EAAArR,EAAKgR,GAALhf,MAAKqf,IAAAA,IACoB,IAArBrR,EAAKgR,GAALhf,QAEJ4N,EAAKqR,GAALjf,KAAyBuN,EAAaN,WAAUuQ,UAC1CnP,UACIrO,KAAKyc,wBACXzO,EAAK6Q,GAAL7e,MAAiB6N,UACnB,KAEFD,EAAKsR,GAALlf,KAA0B0O,EAAczB,WAAUuQ,UAC5CxO,UACIhP,KAAKyc,wBACXzO,EAAK6Q,GAAL7e,MAAiB4O,WACnB,KAEJ,CAEA0Q,OAAAA,GAAgB,IAAAC,EAAArR,EAAAE,EACdR,EAAKoR,GAALhf,MAAAuf,EAAAvR,EAAKgR,GAALhf,MAAKuf,IAAAA,IACoB,IAArBvR,EAAKgR,GAALhf,QAEC,QAALkO,EAAAF,EAAKiR,GAALjf,aAAK,IAAAkO,GAAAA,EAAAzX,KAALuJ,MACA4N,EAAKqR,GAALjf,UAAyB,GAEpB,QAALoO,EAAAJ,EAAKkR,GAALlf,aAAK,IAAAoO,GAAAA,EAAA3X,KAALuJ,MACA4N,EAAKsR,GAALlf,UAA0B,GAC5B,CAEAwf,UAAAA,CAEExX,GACA,OAAOgG,EAAK6Q,GAAL7e,MAAiB6Z,SAAAxgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAa2O,GAAA,IAASE,YAAa,cACxD9S,MACL,CAEAqqB,UAAAA,CAEEzX,GACA,OAAOgG,EAAKkM,GAALla,MAAoB6Z,SAAAxgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAa2O,GAAA,IAASc,OAAQ,aAAa1T,MACxE,CASAsqB,YAAAA,CAIEtX,GAA6D,IAAA2N,EAC7D,MAAMvN,EAAUxI,KAAKuZ,oBAAoB,CAAEnR,aAE3C,OAA6C,QAA7C2N,EAAO/H,EAAK6Q,GAAL7e,MAAiBhK,IAAIwS,EAAQF,kBAAS,IAAAyN,OAAA,EAAtCA,EAAyCxR,MAAMkG,IAGxD,CAEAkV,eAAAA,CAMEnX,GAEA,MAAMoX,EAAmB5f,KAAKuZ,oBAAoB/Q,GAC5CV,EAAQkG,EAAK6Q,GAAL7e,MAAiBqZ,MAAMrZ,KAAM4f,GACrCC,EAAa/X,EAAMvD,MAAMkG,KAE/B,YAAmB,IAAfoV,EACK7f,KAAK8f,WAAWtX,IAIvBA,EAAQuX,mBACRjY,EAAMyO,cAAc3O,EAAiBgY,EAAiB/X,UAAWC,KAE5D9H,KAAKggB,cAAcJ,GAGnBrU,QAAQ2E,QAAQ2P,GACzB,CAEAI,cAAAA,CAiBEjY,GAEA,OAAOgG,EAAK6Q,GAAL7e,MAAiB6Z,QAAQ7R,GAAS9O,KAAIhB,IAAyB,IAAxB,SAAEkQ,EAAA,MAAU7D,GAAMrM,EAE9D,MAAO,CAACkQ,EADK7D,EAAMkG,KACI,GAE3B,CAEAyV,YAAAA,CAKE9X,EACA+X,EAIA3X,GAEA,MAAMoX,EAAmB5f,KAAKuZ,oBAM5B,CAAEnR,aAEEN,EAAQkG,EAAK6Q,GAAL7e,MAAiBhK,IAC7B4pB,EAAiBtX,WAGbmC,EdjIH,SACL0V,EACAC,GAEA,MAA0B,oBAAZD,EACTA,EAAmCC,GACpCD,CACN,Cc0HiBE,CAAiBF,EADb,OAAArY,QAAA,IAAAA,OAAA,EAAAA,EAAOvD,MAAMkG,MAG9B,QAAa,IAATA,EAIJ,OAAOuD,EAAK6Q,GAAL7e,MACJqZ,MAAMrZ,KAAM4f,GACZpK,QAAQ/K,GAAApR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWmP,GAAA,IAASoN,QAAQ,IACzC,CAEA0K,cAAAA,CAiBEtY,EACAmY,EAIA3X,GAEA,OAAOoD,EAAcQ,OAAM,IACzB4B,EAAK6Q,GAAL7e,MACG6Z,QAAQ7R,GACR9O,KAAI2F,IAAA,IAAC,SAAEuJ,GAASvJ,EAAA,MAAM,CACrBuJ,EACApI,KAAKkgB,aAAmC9X,EAAU+X,EAAS3X,GAC5D,KAEP,CAEA+X,aAAAA,CAOEnY,GAC8D,IAAAqO,EAC9D,MAAMjO,EAAUxI,KAAKuZ,oBAAoB,CAAEnR,aAC3C,OAEA,QAFAqO,EAAOzI,EAAK6Q,GAAL7e,MAAiBhK,IACtBwS,EAAQF,kBACV,IAAAmO,OAAA,EAFOA,EAEJlS,KACL,CAEAic,aAAAA,CAOExY,GAOA,MAAMmX,EAAanR,EAAK6Q,GAAL7e,MACnB4L,EAAcQ,OAAM,KAClB+S,EAAWtF,QAAQ7R,GAASvN,SAASqN,IACnCqX,EAAW9e,OAAOyH,EAAM,GACxB,GAEN,CAEA2Y,YAAAA,CAOEzY,EAMAQ,GAEA,MAAM2W,EAAanR,EAAK6Q,GAAL7e,MAEnB,OAAO4L,EAAcQ,OAAM,KACzB+S,EAAWtF,QAAQ7R,GAASvN,SAASqN,IACnCA,EAAMkO,OAAO,IAERhW,KAAK0gB,gBAAArnB,EAAAA,EAAAA,GAAA,CAERlC,KAAM,UACH6Q,GAELQ,KAGN,CAEAmY,aAAAA,CAOE3Y,GAOe,IADfuK,EAAAvW,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAA+B,CAAC,EAEhC,MAAM4kB,GAAAvnB,EAAAA,EAAAA,GAAA,CAA2BoW,QAAQ,GAAS8C,GAE5CsO,EAAWjV,EAAcQ,OAAM,IACnC4B,EAAK6Q,GAAL7e,MACG6Z,QAAQ7R,GACR9O,KAAK4O,GAAUA,EAAMwK,OAAOsO,OAGjC,OAAOrV,QAAQoR,IAAIkE,GAAUtP,KAAK5J,GAAM4I,MAAM5I,EAChD,CAEAmZ,iBAAAA,CAOE9Y,GAOe,IADfQ,EAAAxM,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAA6B,CAAC,EAE9B,OAAO4P,EAAcQ,OAAM,KAAM,IAAA2U,EAAAC,EAK/B,OAJAhT,EAAK6Q,GAAL7e,MAAiB6Z,QAAQ7R,GAASvN,SAASqN,IACzCA,EAAMsP,YAAY,IAGS,UAAzB,OAAApP,QAAA,IAAAA,OAAA,EAAAA,EAASiZ,aACJ1V,QAAQ2E,UAEVlQ,KAAK0gB,gBAAArnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEL2O,GAAA,IACH7Q,KAAuC,QAAvC4pB,EAAe,QAAfC,EAAM,OAAAhZ,QAAA,IAAAA,OAAA,EAAAA,EAASiZ,mBAAA,IAAAD,EAAAA,EAAe,OAAAhZ,QAAA,IAAAA,OAAA,EAAAA,EAAS7Q,YAAA,IAAA4pB,EAAAA,EAAQ,WAEjDvY,EACD,GAEL,CAEAkY,cAAAA,CAOE1Y,GAOe,IAAAkZ,EAAA,IADf1Y,EAAAxM,UAAA5G,OAAA,QAAAlB,IAAA8H,UAAA,GAAAA,UAAA,GAA0B,CAAC,EAE3B,MAAMoP,GAAA/R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDmP,GAAA,IACHsO,cAAuB,QAAvBoK,EAAe1Y,EAAQsO,qBAAA,IAAAoK,GAAAA,IAEnBL,EAAWjV,EAAcQ,OAAM,IACnC4B,EAAK6Q,GAAL7e,MACG6Z,QAAQ7R,GACR/O,QAAQ6O,IAAWA,EAAMsO,eACzBld,KAAK4O,IACJ,IAAIuK,EAAUvK,EAAMuP,WAAM,EAAWjM,GAIrC,OAHKA,EAAa+V,eAChB9O,EAAUA,EAAQ9B,MAAM5I,IAES,WAA5BG,EAAMvD,MAAM2D,YACfqD,QAAQ2E,UACRmC,CAAA,MAIV,OAAO9G,QAAQoR,IAAIkE,GAAUtP,KAAK5J,EACpC,CAEAmY,UAAAA,CAOEtX,GAQA,MAAMoX,EAAmB5f,KAAKuZ,oBAAoB/Q,QAGnB,IAA3BoX,EAAiB7N,QACnB6N,EAAiB7N,OAAQ,GAG3B,MAAMjK,EAAQkG,EAAK6Q,GAAL7e,MAAiBqZ,MAAMrZ,KAAM4f,GAE3C,OAAO9X,EAAMyO,cACX3O,EAAiBgY,EAAiB/X,UAAWC,IAE3CA,EAAMuP,MAAMuI,GACZrU,QAAQ2E,QAAQpI,EAAMvD,MAAMkG,KAClC,CAEAuV,aAAAA,CAMExX,GAEA,OAAOxI,KAAK8f,WAAWtX,GAAS+I,KAAK5J,GAAM4I,MAAM5I,EACnD,CAEAyZ,kBAAAA,CAOE5Y,GAcA,OANAA,EAAQ2P,SAAW2E,GAKjBtU,EAAQuU,OACH/c,KAAK8f,WAAWtX,EACzB,CAEA6Y,qBAAAA,CAOE7Y,GAQA,OAAOxI,KAAKohB,mBAAmB5Y,GAAS+I,KAAK5J,GAAM4I,MAAM5I,EAC3D,CAEA2Z,uBAAAA,CAOE9Y,GAeA,OAPAA,EAAQ2P,SAAW2E,GAKjBtU,EAAQuU,OAEH/c,KAAK2f,gBAAgBnX,EAC9B,CAEAiU,qBAAAA,GACE,OAAI/N,EAAcO,WACTjB,EAAKkM,GAALla,MAAoByc,wBAEtBlR,QAAQ2E,SACjB,CAEAuE,aAAAA,GACE,OAAOzG,EAAK6Q,GAAL7e,KACT,CAEAuhB,gBAAAA,GACE,OAAOvT,EAAKkM,GAALla,KACT,CAEAwhB,iBAAAA,GACE,OAAOxT,EAAKgG,GAALhU,KACT,CAEAyhB,iBAAAA,CAAkBjZ,GAChBoF,EAAKoG,GAALhU,KAAuBwI,EACzB,CAEAkZ,gBAAAA,CAMEtZ,EACAI,GAOAwF,EAAK8Q,GAAL9e,MAAoBmH,IAAI6B,EAAQZ,GAAW,CACzCA,WACAiM,eAAgB7L,GAEpB,CAEAgR,gBAAAA,CACEpR,GAEA,MAAMuZ,EAAW,IAAI3T,EAAK8Q,GAAL9e,MAAoBzI,UAEnCiS,EAGF,CAAC,EAOL,OALAmY,EAASlnB,SAASmnB,IACZnZ,EAAgBL,EAAUwZ,EAAaxZ,WACzC/R,OAAOia,OAAO9G,EAAQoY,EAAavN,eACrC,IAEK7K,CACT,CAEAqY,mBAAAA,CAME9Y,EACAP,GAKAwF,EAAK+Q,GAAL/e,MAAuBmH,IAAI6B,EAAQD,GAAc,CAC/CA,cACAsL,eAAgB7L,GAEpB,CAEAsZ,mBAAAA,CACE/Y,GAEA,MAAM4Y,EAAW,IAAI3T,EAAK+Q,GAAL/e,MAAuBzI,UAEtCiS,EAGF,CAAC,EAQL,OANAmY,EAASlnB,SAASmnB,IACZnZ,EAAgBM,EAAa6Y,EAAa7Y,cAC5C1S,OAAOia,OAAO9G,EAAQoY,EAAavN,eACrC,IAGK7K,CACT,CAEA+P,mBAAAA,CAQE/Q,GAuBA,GAAIA,EAAQuZ,WACV,OAAOvZ,EAST,MAAMoX,GAAAvmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACD2U,EAAKgG,GAALhU,MAAqB8Z,SACrB9Z,KAAKwZ,iBAAiBhR,EAAQJ,WAC9BI,GAAA,IACHuZ,YAAY,IA2Bd,OAxBKnC,EAAiBtX,YACpBsX,EAAiBtX,UAAYC,EAC3BqX,EAAiBxX,SACjBwX,SAKwC,IAAxCA,EAAiBoC,qBACnBpC,EAAiBoC,mBACkB,WAAjCpC,EAAiBrQ,kBAEiB,IAAlCqQ,EAAiBuB,eACnBvB,EAAiBuB,eAAiBvB,EAAiBqC,WAGhDrC,EAAiBrQ,aAAeqQ,EAAiB3H,YACpD2H,EAAiBrQ,YAAc,gBAG7BqQ,EAAiBvU,UAAYJ,IAC/B2U,EAAiBzJ,SAAU,GAGtByJ,CAOT,CAEA7D,sBAAAA,CACEvT,GAEA,OAAI,OAAAA,QAAA,IAAAA,GAAAA,EAASuZ,WACJvZ,GAETnP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK2U,EAAKgG,GAALhU,MAAqBkiB,YACpB,OAAA1Z,QAAA,IAAAA,OAAA,EAAAA,EAASO,cACX/I,KAAK8hB,oBAAoBtZ,EAAQO,cAChCP,GAAA,IACHuZ,YAAY,GAEhB,CAEArI,KAAAA,GACE1L,EAAK6Q,GAAL7e,MAAiB0Z,QACjB1L,EAAKkM,GAALla,MAAoB0Z,OACtB,G,uECrtBWyI,EAA2BllB,EAAAA,mBACtC,GAsBWmlB,EAAsBlqB,IAGgB,IAHf,OAClCsc,EAAA,SACAvT,GACF/I,EAQE,OAPM+E,EAAAA,WAAU,KACduX,EAAO4K,QACA,KACL5K,EAAO8K,SAAS,IAEjB,CAAC9K,KAGF6N,EAAAA,EAAAA,KAACF,EAAmBnhB,SAAnB,CAA4BjL,MAAOye,EACjCvT,YACH,C","sources":["../node_modules/invariant/browser.js","../node_modules/react-fast-compare/index.js","../node_modules/react-helmet-async/lib/index.esm.js","../node_modules/shallowequal/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/checkPrivateRedeclaration.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js","../node_modules/@tanstack/query-core/src/utils.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js","../node_modules/@tanstack/query-core/src/notifyManager.ts","../node_modules/@tanstack/query-core/src/subscribable.ts","../node_modules/@tanstack/query-core/src/focusManager.ts","../node_modules/@tanstack/query-core/src/onlineManager.ts","../node_modules/@tanstack/query-core/src/retryer.ts","../node_modules/@tanstack/query-core/src/thenable.ts","../node_modules/@tanstack/query-core/src/removable.ts","../node_modules/@tanstack/query-core/src/query.ts","../node_modules/@tanstack/query-core/src/queryCache.ts","../node_modules/@tanstack/query-core/src/mutation.ts","../node_modules/@tanstack/query-core/src/mutationCache.ts","../node_modules/@tanstack/query-core/src/infiniteQueryBehavior.ts","../node_modules/@tanstack/query-core/src/queryClient.ts","../node_modules/@tanstack/react-query/src/QueryClientProvider.tsx"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","// src/index.tsx\nimport React3, { Component as Component3 } from \"react\";\nimport fastCompare from \"react-fast-compare\";\nimport invariant from \"invariant\";\n\n// src/Provider.tsx\nimport React2, { Component } from \"react\";\n\n// src/server.ts\nimport React from \"react\";\n\n// src/constants.ts\nvar TAG_NAMES = /* @__PURE__ */ ((TAG_NAMES2) => {\n  TAG_NAMES2[\"BASE\"] = \"base\";\n  TAG_NAMES2[\"BODY\"] = \"body\";\n  TAG_NAMES2[\"HEAD\"] = \"head\";\n  TAG_NAMES2[\"HTML\"] = \"html\";\n  TAG_NAMES2[\"LINK\"] = \"link\";\n  TAG_NAMES2[\"META\"] = \"meta\";\n  TAG_NAMES2[\"NOSCRIPT\"] = \"noscript\";\n  TAG_NAMES2[\"SCRIPT\"] = \"script\";\n  TAG_NAMES2[\"STYLE\"] = \"style\";\n  TAG_NAMES2[\"TITLE\"] = \"title\";\n  TAG_NAMES2[\"FRAGMENT\"] = \"Symbol(react.fragment)\";\n  return TAG_NAMES2;\n})(TAG_NAMES || {});\nvar SEO_PRIORITY_TAGS = {\n  link: { rel: [\"amphtml\", \"canonical\", \"alternate\"] },\n  script: { type: [\"application/ld+json\"] },\n  meta: {\n    charset: \"\",\n    name: [\"generator\", \"robots\", \"description\"],\n    property: [\n      \"og:type\",\n      \"og:title\",\n      \"og:url\",\n      \"og:image\",\n      \"og:image:alt\",\n      \"og:description\",\n      \"twitter:url\",\n      \"twitter:title\",\n      \"twitter:description\",\n      \"twitter:image\",\n      \"twitter:image:alt\",\n      \"twitter:card\",\n      \"twitter:site\"\n    ]\n  }\n};\nvar VALID_TAG_NAMES = Object.values(TAG_NAMES);\nvar REACT_TAG_MAP = {\n  accesskey: \"accessKey\",\n  charset: \"charSet\",\n  class: \"className\",\n  contenteditable: \"contentEditable\",\n  contextmenu: \"contextMenu\",\n  \"http-equiv\": \"httpEquiv\",\n  itemprop: \"itemProp\",\n  tabindex: \"tabIndex\"\n};\nvar HTML_TAG_MAP = Object.entries(REACT_TAG_MAP).reduce(\n  (carry, [key, value]) => {\n    carry[value] = key;\n    return carry;\n  },\n  {}\n);\nvar HELMET_ATTRIBUTE = \"data-rh\";\n\n// src/utils.ts\nvar HELMET_PROPS = {\n  DEFAULT_TITLE: \"defaultTitle\",\n  DEFER: \"defer\",\n  ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n  ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n  TITLE_TEMPLATE: \"titleTemplate\",\n  PRIORITIZE_SEO_TAGS: \"prioritizeSeoTags\"\n};\nvar getInnermostProperty = (propsList, property) => {\n  for (let i = propsList.length - 1; i >= 0; i -= 1) {\n    const props = propsList[i];\n    if (Object.prototype.hasOwnProperty.call(props, property)) {\n      return props[property];\n    }\n  }\n  return null;\n};\nvar getTitleFromPropsList = (propsList) => {\n  let innermostTitle = getInnermostProperty(propsList, \"title\" /* TITLE */);\n  const innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n  if (Array.isArray(innermostTitle)) {\n    innermostTitle = innermostTitle.join(\"\");\n  }\n  if (innermostTemplate && innermostTitle) {\n    return innermostTemplate.replace(/%s/g, () => innermostTitle);\n  }\n  const innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n  return innermostTitle || innermostDefaultTitle || void 0;\n};\nvar getOnChangeClientState = (propsList) => getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || (() => {\n});\nvar getAttributesFromPropsList = (tagType, propsList) => propsList.filter((props) => typeof props[tagType] !== \"undefined\").map((props) => props[tagType]).reduce((tagAttrs, current) => ({ ...tagAttrs, ...current }), {});\nvar getBaseTagFromPropsList = (primaryAttributes, propsList) => propsList.filter((props) => typeof props[\"base\" /* BASE */] !== \"undefined\").map((props) => props[\"base\" /* BASE */]).reverse().reduce((innermostBaseTag, tag) => {\n  if (!innermostBaseTag.length) {\n    const keys = Object.keys(tag);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const lowerCaseAttributeKey = attributeKey.toLowerCase();\n      if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n        return innermostBaseTag.concat(tag);\n      }\n    }\n  }\n  return innermostBaseTag;\n}, []);\nvar warn = (msg) => console && typeof console.warn === \"function\" && console.warn(msg);\nvar getTagsFromPropsList = (tagName, primaryAttributes, propsList) => {\n  const approvedSeenTags = {};\n  return propsList.filter((props) => {\n    if (Array.isArray(props[tagName])) {\n      return true;\n    }\n    if (typeof props[tagName] !== \"undefined\") {\n      warn(\n        `Helmet: ${tagName} should be of type \"Array\". Instead found type \"${typeof props[tagName]}\"`\n      );\n    }\n    return false;\n  }).map((props) => props[tagName]).reverse().reduce((approvedTags, instanceTags) => {\n    const instanceSeenTags = {};\n    instanceTags.filter((tag) => {\n      let primaryAttributeKey;\n      const keys2 = Object.keys(tag);\n      for (let i = 0; i < keys2.length; i += 1) {\n        const attributeKey = keys2[i];\n        const lowerCaseAttributeKey = attributeKey.toLowerCase();\n        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === \"rel\" /* REL */ && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === \"rel\" /* REL */ && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n          primaryAttributeKey = lowerCaseAttributeKey;\n        }\n        if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === \"innerHTML\" /* INNER_HTML */ || attributeKey === \"cssText\" /* CSS_TEXT */ || attributeKey === \"itemprop\" /* ITEM_PROP */)) {\n          primaryAttributeKey = attributeKey;\n        }\n      }\n      if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n        return false;\n      }\n      const value = tag[primaryAttributeKey].toLowerCase();\n      if (!approvedSeenTags[primaryAttributeKey]) {\n        approvedSeenTags[primaryAttributeKey] = {};\n      }\n      if (!instanceSeenTags[primaryAttributeKey]) {\n        instanceSeenTags[primaryAttributeKey] = {};\n      }\n      if (!approvedSeenTags[primaryAttributeKey][value]) {\n        instanceSeenTags[primaryAttributeKey][value] = true;\n        return true;\n      }\n      return false;\n    }).reverse().forEach((tag) => approvedTags.push(tag));\n    const keys = Object.keys(instanceSeenTags);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const tagUnion = {\n        ...approvedSeenTags[attributeKey],\n        ...instanceSeenTags[attributeKey]\n      };\n      approvedSeenTags[attributeKey] = tagUnion;\n    }\n    return approvedTags;\n  }, []).reverse();\n};\nvar getAnyTrueFromPropsList = (propsList, checkedTag) => {\n  if (Array.isArray(propsList) && propsList.length) {\n    for (let index = 0; index < propsList.length; index += 1) {\n      const prop = propsList[index];\n      if (prop[checkedTag]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nvar reducePropsToState = (propsList) => ({\n  baseTag: getBaseTagFromPropsList([\"href\" /* HREF */], propsList),\n  bodyAttributes: getAttributesFromPropsList(\"bodyAttributes\" /* BODY */, propsList),\n  defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n  encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n  htmlAttributes: getAttributesFromPropsList(\"htmlAttributes\" /* HTML */, propsList),\n  linkTags: getTagsFromPropsList(\n    \"link\" /* LINK */,\n    [\"rel\" /* REL */, \"href\" /* HREF */],\n    propsList\n  ),\n  metaTags: getTagsFromPropsList(\n    \"meta\" /* META */,\n    [\n      \"name\" /* NAME */,\n      \"charset\" /* CHARSET */,\n      \"http-equiv\" /* HTTPEQUIV */,\n      \"property\" /* PROPERTY */,\n      \"itemprop\" /* ITEM_PROP */\n    ],\n    propsList\n  ),\n  noscriptTags: getTagsFromPropsList(\"noscript\" /* NOSCRIPT */, [\"innerHTML\" /* INNER_HTML */], propsList),\n  onChangeClientState: getOnChangeClientState(propsList),\n  scriptTags: getTagsFromPropsList(\n    \"script\" /* SCRIPT */,\n    [\"src\" /* SRC */, \"innerHTML\" /* INNER_HTML */],\n    propsList\n  ),\n  styleTags: getTagsFromPropsList(\"style\" /* STYLE */, [\"cssText\" /* CSS_TEXT */], propsList),\n  title: getTitleFromPropsList(propsList),\n  titleAttributes: getAttributesFromPropsList(\"titleAttributes\" /* TITLE */, propsList),\n  prioritizeSeoTags: getAnyTrueFromPropsList(propsList, HELMET_PROPS.PRIORITIZE_SEO_TAGS)\n});\nvar flattenArray = (possibleArray) => Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\nvar checkIfPropsMatch = (props, toMatch) => {\n  const keys = Object.keys(props);\n  for (let i = 0; i < keys.length; i += 1) {\n    if (toMatch[keys[i]] && toMatch[keys[i]].includes(props[keys[i]])) {\n      return true;\n    }\n  }\n  return false;\n};\nvar prioritizer = (elementsList, propsToMatch) => {\n  if (Array.isArray(elementsList)) {\n    return elementsList.reduce(\n      (acc, elementAttrs) => {\n        if (checkIfPropsMatch(elementAttrs, propsToMatch)) {\n          acc.priority.push(elementAttrs);\n        } else {\n          acc.default.push(elementAttrs);\n        }\n        return acc;\n      },\n      { priority: [], default: [] }\n    );\n  }\n  return { default: elementsList, priority: [] };\n};\nvar without = (obj, key) => {\n  return {\n    ...obj,\n    [key]: void 0\n  };\n};\n\n// src/server.ts\nvar SELF_CLOSING_TAGS = [\"noscript\" /* NOSCRIPT */, \"script\" /* SCRIPT */, \"style\" /* STYLE */];\nvar encodeSpecialCharacters = (str, encode = true) => {\n  if (encode === false) {\n    return String(str);\n  }\n  return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\nvar generateElementAttributesAsString = (attributes) => Object.keys(attributes).reduce((str, key) => {\n  const attr = typeof attributes[key] !== \"undefined\" ? `${key}=\"${attributes[key]}\"` : `${key}`;\n  return str ? `${str} ${attr}` : attr;\n}, \"\");\nvar generateTitleAsString = (type, title, attributes, encode) => {\n  const attributeString = generateElementAttributesAsString(attributes);\n  const flattenedTitle = flattenArray(title);\n  return attributeString ? `<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeString}>${encodeSpecialCharacters(\n    flattenedTitle,\n    encode\n  )}</${type}>` : `<${type} ${HELMET_ATTRIBUTE}=\"true\">${encodeSpecialCharacters(\n    flattenedTitle,\n    encode\n  )}</${type}>`;\n};\nvar generateTagsAsString = (type, tags, encode = true) => tags.reduce((str, t) => {\n  const tag = t;\n  const attributeHtml = Object.keys(tag).filter(\n    (attribute) => !(attribute === \"innerHTML\" /* INNER_HTML */ || attribute === \"cssText\" /* CSS_TEXT */)\n  ).reduce((string, attribute) => {\n    const attr = typeof tag[attribute] === \"undefined\" ? attribute : `${attribute}=\"${encodeSpecialCharacters(tag[attribute], encode)}\"`;\n    return string ? `${string} ${attr}` : attr;\n  }, \"\");\n  const tagContent = tag.innerHTML || tag.cssText || \"\";\n  const isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n  return `${str}<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeHtml}${isSelfClosing ? `/>` : `>${tagContent}</${type}>`}`;\n}, \"\");\nvar convertElementAttributesToReactProps = (attributes, initProps = {}) => Object.keys(attributes).reduce((obj, key) => {\n  const mapped = REACT_TAG_MAP[key];\n  obj[mapped || key] = attributes[key];\n  return obj;\n}, initProps);\nvar generateTitleAsReactComponent = (_type, title, attributes) => {\n  const initProps = {\n    key: title,\n    [HELMET_ATTRIBUTE]: true\n  };\n  const props = convertElementAttributesToReactProps(attributes, initProps);\n  return [React.createElement(\"title\" /* TITLE */, props, title)];\n};\nvar generateTagsAsReactComponent = (type, tags) => tags.map((tag, i) => {\n  const mappedTag = {\n    key: i,\n    [HELMET_ATTRIBUTE]: true\n  };\n  Object.keys(tag).forEach((attribute) => {\n    const mapped = REACT_TAG_MAP[attribute];\n    const mappedAttribute = mapped || attribute;\n    if (mappedAttribute === \"innerHTML\" /* INNER_HTML */ || mappedAttribute === \"cssText\" /* CSS_TEXT */) {\n      const content = tag.innerHTML || tag.cssText;\n      mappedTag.dangerouslySetInnerHTML = { __html: content };\n    } else {\n      mappedTag[mappedAttribute] = tag[attribute];\n    }\n  });\n  return React.createElement(type, mappedTag);\n});\nvar getMethodsForTag = (type, tags, encode = true) => {\n  switch (type) {\n    case \"title\" /* TITLE */:\n      return {\n        toComponent: () => generateTitleAsReactComponent(type, tags.title, tags.titleAttributes),\n        toString: () => generateTitleAsString(type, tags.title, tags.titleAttributes, encode)\n      };\n    case \"bodyAttributes\" /* BODY */:\n    case \"htmlAttributes\" /* HTML */:\n      return {\n        toComponent: () => convertElementAttributesToReactProps(tags),\n        toString: () => generateElementAttributesAsString(tags)\n      };\n    default:\n      return {\n        toComponent: () => generateTagsAsReactComponent(type, tags),\n        toString: () => generateTagsAsString(type, tags, encode)\n      };\n  }\n};\nvar getPriorityMethods = ({ metaTags, linkTags, scriptTags, encode }) => {\n  const meta = prioritizer(metaTags, SEO_PRIORITY_TAGS.meta);\n  const link = prioritizer(linkTags, SEO_PRIORITY_TAGS.link);\n  const script = prioritizer(scriptTags, SEO_PRIORITY_TAGS.script);\n  const priorityMethods = {\n    toComponent: () => [\n      ...generateTagsAsReactComponent(\"meta\" /* META */, meta.priority),\n      ...generateTagsAsReactComponent(\"link\" /* LINK */, link.priority),\n      ...generateTagsAsReactComponent(\"script\" /* SCRIPT */, script.priority)\n    ],\n    toString: () => (\n      // generate all the tags as strings and concatenate them\n      `${getMethodsForTag(\"meta\" /* META */, meta.priority, encode)} ${getMethodsForTag(\n        \"link\" /* LINK */,\n        link.priority,\n        encode\n      )} ${getMethodsForTag(\"script\" /* SCRIPT */, script.priority, encode)}`\n    )\n  };\n  return {\n    priorityMethods,\n    metaTags: meta.default,\n    linkTags: link.default,\n    scriptTags: script.default\n  };\n};\nvar mapStateOnServer = (props) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    encode = true,\n    htmlAttributes,\n    noscriptTags,\n    styleTags,\n    title = \"\",\n    titleAttributes,\n    prioritizeSeoTags\n  } = props;\n  let { linkTags, metaTags, scriptTags } = props;\n  let priorityMethods = {\n    toComponent: () => {\n    },\n    toString: () => \"\"\n  };\n  if (prioritizeSeoTags) {\n    ({ priorityMethods, linkTags, metaTags, scriptTags } = getPriorityMethods(props));\n  }\n  return {\n    priority: priorityMethods,\n    base: getMethodsForTag(\"base\" /* BASE */, baseTag, encode),\n    bodyAttributes: getMethodsForTag(\"bodyAttributes\" /* BODY */, bodyAttributes, encode),\n    htmlAttributes: getMethodsForTag(\"htmlAttributes\" /* HTML */, htmlAttributes, encode),\n    link: getMethodsForTag(\"link\" /* LINK */, linkTags, encode),\n    meta: getMethodsForTag(\"meta\" /* META */, metaTags, encode),\n    noscript: getMethodsForTag(\"noscript\" /* NOSCRIPT */, noscriptTags, encode),\n    script: getMethodsForTag(\"script\" /* SCRIPT */, scriptTags, encode),\n    style: getMethodsForTag(\"style\" /* STYLE */, styleTags, encode),\n    title: getMethodsForTag(\"title\" /* TITLE */, { title, titleAttributes }, encode)\n  };\n};\nvar server_default = mapStateOnServer;\n\n// src/HelmetData.ts\nvar instances = [];\nvar isDocument = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar HelmetData = class {\n  instances = [];\n  canUseDOM = isDocument;\n  context;\n  value = {\n    setHelmet: (serverState) => {\n      this.context.helmet = serverState;\n    },\n    helmetInstances: {\n      get: () => this.canUseDOM ? instances : this.instances,\n      add: (instance) => {\n        (this.canUseDOM ? instances : this.instances).push(instance);\n      },\n      remove: (instance) => {\n        const index = (this.canUseDOM ? instances : this.instances).indexOf(instance);\n        (this.canUseDOM ? instances : this.instances).splice(index, 1);\n      }\n    }\n  };\n  constructor(context, canUseDOM) {\n    this.context = context;\n    this.canUseDOM = canUseDOM || false;\n    if (!canUseDOM) {\n      context.helmet = server_default({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: \"\",\n        titleAttributes: {}\n      });\n    }\n  }\n};\n\n// src/Provider.tsx\nvar defaultValue = {};\nvar Context = React2.createContext(defaultValue);\nvar HelmetProvider = class _HelmetProvider extends Component {\n  static canUseDOM = isDocument;\n  helmetData;\n  constructor(props) {\n    super(props);\n    this.helmetData = new HelmetData(this.props.context || {}, _HelmetProvider.canUseDOM);\n  }\n  render() {\n    return /* @__PURE__ */ React2.createElement(Context.Provider, { value: this.helmetData.value }, this.props.children);\n  }\n};\n\n// src/Dispatcher.tsx\nimport { Component as Component2 } from \"react\";\nimport shallowEqual from \"shallowequal\";\n\n// src/client.ts\nvar updateTags = (type, tags) => {\n  const headElement = document.head || document.querySelector(\"head\" /* HEAD */);\n  const tagNodes = headElement.querySelectorAll(`${type}[${HELMET_ATTRIBUTE}]`);\n  const oldTags = [].slice.call(tagNodes);\n  const newTags = [];\n  let indexToDelete;\n  if (tags && tags.length) {\n    tags.forEach((tag) => {\n      const newElement = document.createElement(type);\n      for (const attribute in tag) {\n        if (Object.prototype.hasOwnProperty.call(tag, attribute)) {\n          if (attribute === \"innerHTML\" /* INNER_HTML */) {\n            newElement.innerHTML = tag.innerHTML;\n          } else if (attribute === \"cssText\" /* CSS_TEXT */) {\n            if (newElement.styleSheet) {\n              newElement.styleSheet.cssText = tag.cssText;\n            } else {\n              newElement.appendChild(document.createTextNode(tag.cssText));\n            }\n          } else {\n            const attr = attribute;\n            const value = typeof tag[attr] === \"undefined\" ? \"\" : tag[attr];\n            newElement.setAttribute(attribute, value);\n          }\n        }\n      }\n      newElement.setAttribute(HELMET_ATTRIBUTE, \"true\");\n      if (oldTags.some((existingTag, index) => {\n        indexToDelete = index;\n        return newElement.isEqualNode(existingTag);\n      })) {\n        oldTags.splice(indexToDelete, 1);\n      } else {\n        newTags.push(newElement);\n      }\n    });\n  }\n  oldTags.forEach((tag) => tag.parentNode?.removeChild(tag));\n  newTags.forEach((tag) => headElement.appendChild(tag));\n  return {\n    oldTags,\n    newTags\n  };\n};\nvar updateAttributes = (tagName, attributes) => {\n  const elementTag = document.getElementsByTagName(tagName)[0];\n  if (!elementTag) {\n    return;\n  }\n  const helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n  const helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n  const attributesToRemove = [...helmetAttributes];\n  const attributeKeys = Object.keys(attributes);\n  for (const attribute of attributeKeys) {\n    const value = attributes[attribute] || \"\";\n    if (elementTag.getAttribute(attribute) !== value) {\n      elementTag.setAttribute(attribute, value);\n    }\n    if (helmetAttributes.indexOf(attribute) === -1) {\n      helmetAttributes.push(attribute);\n    }\n    const indexToSave = attributesToRemove.indexOf(attribute);\n    if (indexToSave !== -1) {\n      attributesToRemove.splice(indexToSave, 1);\n    }\n  }\n  for (let i = attributesToRemove.length - 1; i >= 0; i -= 1) {\n    elementTag.removeAttribute(attributesToRemove[i]);\n  }\n  if (helmetAttributes.length === attributesToRemove.length) {\n    elementTag.removeAttribute(HELMET_ATTRIBUTE);\n  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n  }\n};\nvar updateTitle = (title, attributes) => {\n  if (typeof title !== \"undefined\" && document.title !== title) {\n    document.title = flattenArray(title);\n  }\n  updateAttributes(\"title\" /* TITLE */, attributes);\n};\nvar commitTagChanges = (newState, cb) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    htmlAttributes,\n    linkTags,\n    metaTags,\n    noscriptTags,\n    onChangeClientState,\n    scriptTags,\n    styleTags,\n    title,\n    titleAttributes\n  } = newState;\n  updateAttributes(\"body\" /* BODY */, bodyAttributes);\n  updateAttributes(\"html\" /* HTML */, htmlAttributes);\n  updateTitle(title, titleAttributes);\n  const tagUpdates = {\n    baseTag: updateTags(\"base\" /* BASE */, baseTag),\n    linkTags: updateTags(\"link\" /* LINK */, linkTags),\n    metaTags: updateTags(\"meta\" /* META */, metaTags),\n    noscriptTags: updateTags(\"noscript\" /* NOSCRIPT */, noscriptTags),\n    scriptTags: updateTags(\"script\" /* SCRIPT */, scriptTags),\n    styleTags: updateTags(\"style\" /* STYLE */, styleTags)\n  };\n  const addedTags = {};\n  const removedTags = {};\n  Object.keys(tagUpdates).forEach((tagType) => {\n    const { newTags, oldTags } = tagUpdates[tagType];\n    if (newTags.length) {\n      addedTags[tagType] = newTags;\n    }\n    if (oldTags.length) {\n      removedTags[tagType] = tagUpdates[tagType].oldTags;\n    }\n  });\n  if (cb) {\n    cb();\n  }\n  onChangeClientState(newState, addedTags, removedTags);\n};\nvar _helmetCallback = null;\nvar handleStateChangeOnClient = (newState) => {\n  if (_helmetCallback) {\n    cancelAnimationFrame(_helmetCallback);\n  }\n  if (newState.defer) {\n    _helmetCallback = requestAnimationFrame(() => {\n      commitTagChanges(newState, () => {\n        _helmetCallback = null;\n      });\n    });\n  } else {\n    commitTagChanges(newState);\n    _helmetCallback = null;\n  }\n};\nvar client_default = handleStateChangeOnClient;\n\n// src/Dispatcher.tsx\nvar HelmetDispatcher = class extends Component2 {\n  rendered = false;\n  shouldComponentUpdate(nextProps) {\n    return !shallowEqual(nextProps, this.props);\n  }\n  componentDidUpdate() {\n    this.emitChange();\n  }\n  componentWillUnmount() {\n    const { helmetInstances } = this.props.context;\n    helmetInstances.remove(this);\n    this.emitChange();\n  }\n  emitChange() {\n    const { helmetInstances, setHelmet } = this.props.context;\n    let serverState = null;\n    const state = reducePropsToState(\n      helmetInstances.get().map((instance) => {\n        const props = { ...instance.props };\n        delete props.context;\n        return props;\n      })\n    );\n    if (HelmetProvider.canUseDOM) {\n      client_default(state);\n    } else if (server_default) {\n      serverState = server_default(state);\n    }\n    setHelmet(serverState);\n  }\n  // componentWillMount will be deprecated\n  // for SSR, initialize on first render\n  // constructor is also unsafe in StrictMode\n  init() {\n    if (this.rendered) {\n      return;\n    }\n    this.rendered = true;\n    const { helmetInstances } = this.props.context;\n    helmetInstances.add(this);\n    this.emitChange();\n  }\n  render() {\n    this.init();\n    return null;\n  }\n};\n\n// src/index.tsx\nvar Helmet = class extends Component3 {\n  static defaultProps = {\n    defer: true,\n    encodeSpecialCharacters: true,\n    prioritizeSeoTags: false\n  };\n  shouldComponentUpdate(nextProps) {\n    return !fastCompare(without(this.props, \"helmetData\"), without(nextProps, \"helmetData\"));\n  }\n  mapNestedChildrenToProps(child, nestedChildren) {\n    if (!nestedChildren) {\n      return null;\n    }\n    switch (child.type) {\n      case \"script\" /* SCRIPT */:\n      case \"noscript\" /* NOSCRIPT */:\n        return {\n          innerHTML: nestedChildren\n        };\n      case \"style\" /* STYLE */:\n        return {\n          cssText: nestedChildren\n        };\n      default:\n        throw new Error(\n          `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`\n        );\n    }\n  }\n  flattenArrayTypeChildren(child, arrayTypeChildren, newChildProps, nestedChildren) {\n    return {\n      ...arrayTypeChildren,\n      [child.type]: [\n        ...arrayTypeChildren[child.type] || [],\n        {\n          ...newChildProps,\n          ...this.mapNestedChildrenToProps(child, nestedChildren)\n        }\n      ]\n    };\n  }\n  mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren) {\n    switch (child.type) {\n      case \"title\" /* TITLE */:\n        return {\n          ...newProps,\n          [child.type]: nestedChildren,\n          titleAttributes: { ...newChildProps }\n        };\n      case \"body\" /* BODY */:\n        return {\n          ...newProps,\n          bodyAttributes: { ...newChildProps }\n        };\n      case \"html\" /* HTML */:\n        return {\n          ...newProps,\n          htmlAttributes: { ...newChildProps }\n        };\n      default:\n        return {\n          ...newProps,\n          [child.type]: { ...newChildProps }\n        };\n    }\n  }\n  mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n    let newFlattenedProps = { ...newProps };\n    Object.keys(arrayTypeChildren).forEach((arrayChildName) => {\n      newFlattenedProps = {\n        ...newFlattenedProps,\n        [arrayChildName]: arrayTypeChildren[arrayChildName]\n      };\n    });\n    return newFlattenedProps;\n  }\n  warnOnInvalidChildren(child, nestedChildren) {\n    invariant(\n      VALID_TAG_NAMES.some((name) => child.type === name),\n      typeof child.type === \"function\" ? `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.` : `Only elements types ${VALID_TAG_NAMES.join(\n        \", \"\n      )} are allowed. Helmet does not support rendering <${child.type}> elements. Refer to our API for more information.`\n    );\n    invariant(\n      !nestedChildren || typeof nestedChildren === \"string\" || Array.isArray(nestedChildren) && !nestedChildren.some((nestedChild) => typeof nestedChild !== \"string\"),\n      `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`\n    );\n    return true;\n  }\n  mapChildrenToProps(children, newProps) {\n    let arrayTypeChildren = {};\n    React3.Children.forEach(children, (child) => {\n      if (!child || !child.props) {\n        return;\n      }\n      const { children: nestedChildren, ...childProps } = child.props;\n      const newChildProps = Object.keys(childProps).reduce((obj, key) => {\n        obj[HTML_TAG_MAP[key] || key] = childProps[key];\n        return obj;\n      }, {});\n      let { type } = child;\n      if (typeof type === \"symbol\") {\n        type = type.toString();\n      } else {\n        this.warnOnInvalidChildren(child, nestedChildren);\n      }\n      switch (type) {\n        case \"Symbol(react.fragment)\" /* FRAGMENT */:\n          newProps = this.mapChildrenToProps(nestedChildren, newProps);\n          break;\n        case \"link\" /* LINK */:\n        case \"meta\" /* META */:\n        case \"noscript\" /* NOSCRIPT */:\n        case \"script\" /* SCRIPT */:\n        case \"style\" /* STYLE */:\n          arrayTypeChildren = this.flattenArrayTypeChildren(\n            child,\n            arrayTypeChildren,\n            newChildProps,\n            nestedChildren\n          );\n          break;\n        default:\n          newProps = this.mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren);\n          break;\n      }\n    });\n    return this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n  }\n  render() {\n    const { children, ...props } = this.props;\n    let newProps = { ...props };\n    let { helmetData } = props;\n    if (children) {\n      newProps = this.mapChildrenToProps(children, newProps);\n    }\n    if (helmetData && !(helmetData instanceof HelmetData)) {\n      const data = helmetData;\n      helmetData = new HelmetData(data.context, true);\n      delete newProps.helmetData;\n    }\n    return helmetData ? /* @__PURE__ */ React3.createElement(HelmetDispatcher, { ...newProps, context: helmetData.value }) : /* @__PURE__ */ React3.createElement(Context.Consumer, null, (context) => /* @__PURE__ */ React3.createElement(HelmetDispatcher, { ...newProps, context }));\n  }\n};\nexport {\n  Helmet,\n  HelmetData,\n  HelmetProvider\n};\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","function _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nexport { _checkPrivateRedeclaration as default };","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nexport { _classPrivateFieldInitSpec as default };","function _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nexport { _assertClassBrand as default };","import assertClassBrand from \"./assertClassBrand.js\";\nfunction _classPrivateFieldGet2(s, a) {\n  return s.get(assertClassBrand(s, a));\n}\nexport { _classPrivateFieldGet2 as default };","import assertClassBrand from \"./assertClassBrand.js\";\nfunction _classPrivateFieldSet2(s, a, r) {\n  return s.set(assertClassBrand(s, a), r), r;\n}\nexport { _classPrivateFieldSet2 as default };","import type {\n  DefaultError,\n  Enabled,\n  FetchStatus,\n  MutationKey,\n  MutationStatus,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n  StaleTime,\n} from './types'\nimport type { Mutation } from './mutation'\nimport type { FetchOptions, Query } from './query'\n\n// TYPES\n\nexport interface QueryFilters<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query<TQueryFnData, TError, TData, TQueryKey>) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: TQueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (\n    mutation: Mutation<TData, TError, TVariables, TContext>,\n  ) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Filter by mutation status\n   */\n  status?: MutationStatus\n}\n\nexport type Updater<TInput, TOutput> = TOutput | ((input: TInput) => TOutput)\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in globalThis\n\nexport function noop(): void\nexport function noop(): undefined\nexport function noop() {}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as (_: TInput) => TOutput)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function resolveStaleTime<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  staleTime: undefined | StaleTime<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): number | undefined {\n  return typeof staleTime === 'function' ? staleTime(query) : staleTime\n}\n\nexport function resolveEnabled<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  enabled: undefined | Enabled<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): boolean | undefined {\n  return typeof enabled === 'function' ? enabled(query) : enabled\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, status, predicate, mutationKey } = filters\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (status && mutation.state.status !== status) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: Pick<QueryOptions<any, any, any, any>, 'queryKeyHashFn'>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query & mutation keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashKey(queryKey: QueryKey | MutationKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean\nexport function partialMatchKey(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]))\n  }\n\n  return false\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (array || (isPlainObject(a) && isPlainObject(b))) {\n    const aItems = array ? a : Object.keys(a)\n    const aSize = aItems.length\n    const bItems = array ? b : Object.keys(b)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      if (\n        ((!array && aItems.includes(key)) || array) &&\n        a[key] === undefined &&\n        b[key] === undefined\n      ) {\n        copy[key] = undefined\n        equalItems++\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key])\n        if (copy[key] === a[key] && a[key] !== undefined) {\n          equalItems++\n        }\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy\n  }\n\n  return b\n}\n\n/**\n * Shallow compare objects.\n */\nexport function shallowEqualObjects<T extends Record<string, any>>(\n  a: T,\n  b: T | undefined,\n): boolean {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown) {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\n// eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\nexport function isPlainObject(o: any): o is Object {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has no constructor\n  const ctor = o.constructor\n  if (ctor === undefined) {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Handles Objects created by Object.create(<arbitrary prototype>)\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout)\n  })\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data) as TData\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== 'production') {\n      try {\n        return replaceEqualDeep(prevData, data)\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`,\n        )\n\n        // Prevent the replaceEqualDeep from being called again down below.\n        throw error\n      }\n    }\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n\nexport function keepPreviousData<T>(\n  previousData: T | undefined,\n): T | undefined {\n  return previousData\n}\n\nexport function addToEnd<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [...items, item]\n  return max && newItems.length > max ? newItems.slice(1) : newItems\n}\n\nexport function addToStart<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [item, ...items]\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems\n}\n\nexport const skipToken = Symbol()\nexport type SkipToken = typeof skipToken\n\nexport function ensureQueryFn<\n  TQueryFnData = unknown,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: {\n    queryFn?: QueryFunction<TQueryFnData, TQueryKey> | SkipToken\n    queryHash?: string\n  },\n  fetchOptions?: FetchOptions<TQueryFnData>,\n): QueryFunction<TQueryFnData, TQueryKey> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`,\n      )\n    }\n  }\n\n  // if we attempt to retry a fetch that was triggered from an initialPromise\n  // when we don't have a queryFn yet, we can't retry, so we just return the already rejected initialPromise\n  // if an observer has already mounted, we will be able to retry with that queryFn\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise!\n  }\n\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () =>\n      Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))\n  }\n\n  return options.queryFn\n}\n","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  checkPrivateRedeclaration(e, a), a.add(e);\n}\nexport { _classPrivateMethodInitSpec as default };","// TYPES\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport const defaultScheduler: ScheduleFunction = (cb) => setTimeout(cb, 0)\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn = defaultScheduler\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  return {\n    batch: <T>(callback: () => T): T => {\n      let result\n      transactions++\n      try {\n        result = callback()\n      } finally {\n        transactions--\n        if (!transactions) {\n          flush()\n        }\n      }\n      return result\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: <T extends Array<unknown>>(\n      callback: BatchCallsCallback<T>,\n    ): BatchCallsCallback<T> => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args)\n        })\n      }\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn: NotifyFunction) => {\n      notifyFn = fn\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn: BatchNotifyFunction) => {\n      batchNotifyFn = fn\n    },\n    setScheduler: (fn: ScheduleFunction) => {\n      scheduleFn = fn\n    },\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n","export class Subscribable<TListener extends Function> {\n  protected listeners = new Set<TListener>()\n\n  constructor() {\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n","import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { pendingThenable } from './thenable'\nimport { isServer, sleep } from './utils'\nimport type { CancelOptions, DefaultError, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = DefaultError> {\n  fn: () => TData | Promise<TData>\n  initialPromise?: Promise<TData>\n  abort?: () => void\n  onError?: (error: TError) => void\n  onSuccess?: (data: TData) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n  canRun: () => boolean\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n  canStart: () => boolean\n  start: () => Promise<TData>\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError extends Error {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    super('CancelledError')\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = DefaultError>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let isResolved = false\n  let continueFn: ((value?: unknown) => void) | undefined\n\n  const thenable = pendingThenable<TData>()\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions))\n\n      config.abort?.()\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const canContinue = () =>\n    focusManager.isFocused() &&\n    (config.networkMode === 'always' || onlineManager.isOnline()) &&\n    config.canRun()\n\n  const canStart = () => canFetch(config.networkMode) && config.canRun()\n\n  const resolve = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onSuccess?.(value)\n      continueFn?.()\n      thenable.resolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onError?.(value)\n      continueFn?.()\n      thenable.reject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value)\n        }\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // we can re-use config.initialPromise on the first call of run()\n    const initialPromise =\n      failureCount === 0 ? config.initialPromise : undefined\n\n    // Execute query\n    try {\n      promiseOrValue = initialPromise ?? config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? (isServer ? 0 : 3)\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            return canContinue() ? undefined : pause()\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.()\n      return thenable\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      // Start loop\n      if (canStart()) {\n        run()\n      } else {\n        pause().then(run)\n      }\n      return thenable\n    },\n  }\n}\n","/**\n * Thenable types which matches React's types for promises\n *\n * React seemingly uses `.status`, `.value` and `.reason` properties on a promises to optimistically unwrap data from promises\n *\n * @see https://github.com/facebook/react/blob/main/packages/shared/ReactTypes.js#L112-L138\n * @see https://github.com/facebook/react/blob/4f604941569d2e8947ce1460a0b2997e835f37b9/packages/react-debug-tools/src/ReactDebugHooks.js#L224-L227\n */\n\ninterface Fulfilled<T> {\n  status: 'fulfilled'\n  value: T\n}\ninterface Rejected {\n  status: 'rejected'\n  reason: unknown\n}\ninterface Pending<T> {\n  status: 'pending'\n\n  /**\n   * Resolve the promise with a value.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  resolve: (value: T) => void\n  /**\n   * Reject the promise with a reason.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  reject: (reason: unknown) => void\n}\n\nexport type FulfilledThenable<T> = Promise<T> & Fulfilled<T>\nexport type RejectedThenable<T> = Promise<T> & Rejected\nexport type PendingThenable<T> = Promise<T> & Pending<T>\n\nexport type Thenable<T> =\n  | FulfilledThenable<T>\n  | RejectedThenable<T>\n  | PendingThenable<T>\n\nexport function pendingThenable<T>(): PendingThenable<T> {\n  let resolve: Pending<T>['resolve']\n  let reject: Pending<T>['reject']\n  // this could use `Promise.withResolvers()` in the future\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  }) as PendingThenable<T>\n\n  thenable.status = 'pending'\n  thenable.catch(() => {\n    // prevent unhandled rejection errors\n  })\n\n  function finalize(data: Fulfilled<T> | Rejected) {\n    Object.assign(thenable, data)\n\n    // clear pending props props to avoid calling them twice\n    delete (thenable as Partial<PendingThenable<T>>).resolve\n    delete (thenable as Partial<PendingThenable<T>>).reject\n  }\n\n  thenable.resolve = (value) => {\n    finalize({\n      status: 'fulfilled',\n      value,\n    })\n\n    resolve(value)\n  }\n  thenable.reject = (reason) => {\n    finalize({\n      status: 'rejected',\n      reason,\n    })\n\n    reject(reason)\n  }\n\n  return thenable\n}\n","import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  gcTime!: number\n  #gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.gcTime)\n    }\n  }\n\n  protected updateGcTime(newGcTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no gcTime is set\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout)\n      this.#gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n","import {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  skipToken,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { canFetch, createRetryer, isCancelledError } from './retryer'\nimport { Removable } from './removable'\nimport type { QueryCache } from './queryCache'\nimport type { QueryClient } from './queryClient'\nimport type {\n  CancelOptions,\n  DefaultError,\n  FetchStatus,\n  InitialDataFunction,\n  OmitKeyof,\n  QueryFunction,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n} from './types'\nimport type { QueryObserver } from './queryObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  client: QueryClient\n  queryKey: TQueryKey\n  queryHash: string\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = DefaultError> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: FetchMeta | null\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  client: QueryClient\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n    query: Query,\n  ) => void\n}\n\nexport type FetchDirection = 'forward' | 'backward'\n\nexport interface FetchMeta {\n  fetchMore?: { direction: FetchDirection }\n}\n\nexport interface FetchOptions<TData = unknown> {\n  cancelRefetch?: boolean\n  meta?: FetchMeta\n  initialPromise?: Promise<TData>\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: FetchMeta\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state: QueryState<TData, TError>\n\n  #initialState: QueryState<TData, TError>\n  #revertState?: QueryState<TData, TError>\n  #cache: QueryCache\n  #client: QueryClient\n  #retryer?: Retryer<TData>\n  observers: Array<QueryObserver<any, any, any, any, any>>\n  #defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  #abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.#abortSignalConsumed = false\n    this.#defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.#client = config.client\n    this.#cache = this.#client.getQueryCache()\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.#initialState = getDefaultState(this.options)\n    this.state = config.state ?? this.#initialState\n    this.scheduleGc()\n  }\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  get promise(): Promise<TData> | undefined {\n    return this.#retryer?.promise\n  }\n\n  setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.#cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.#dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.#dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.#retryer?.promise\n    this.#retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.#initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false,\n    )\n  }\n\n  isDisabled(): boolean {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive()\n    }\n    // if a query has no observers, it should still be considered disabled if it never attempted a fetch\n    return (\n      this.options.queryFn === skipToken ||\n      this.state.dataUpdateCount + this.state.errorUpdateCount === 0\n    )\n  }\n\n  isStale(): boolean {\n    if (this.state.isInvalidated) {\n      return true\n    }\n\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale,\n      )\n    }\n\n    return this.state.data === undefined\n  }\n\n  isStaleByTime(staleTime = 0): boolean {\n    return (\n      this.state.isInvalidated ||\n      this.state.data === undefined ||\n      !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n    )\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.#cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true })\n          } else {\n            this.#retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.#cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: 'invalidate' })\n    }\n  }\n\n  fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions<TQueryFnData>,\n  ): Promise<TData> {\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.data !== undefined && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetch\n        this.cancel({ silent: true })\n      } else if (this.#retryer) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.#retryer.continueRetry()\n        // Return current promise if we are already fetching\n        return this.#retryer.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = new AbortController()\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true\n          return abortController.signal\n        },\n      })\n    }\n\n    // Create fetch function\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions)\n\n      // Create query function context\n      const queryFnContext: OmitKeyof<\n        QueryFunctionContext<TQueryKey>,\n        'signal'\n      > = {\n        client: this.#client,\n        queryKey: this.queryKey,\n        meta: this.meta,\n      }\n\n      addSignalProperty(queryFnContext)\n\n      this.#abortSignalConsumed = false\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn as QueryFunction<any>,\n          queryFnContext as QueryFunctionContext<TQueryKey>,\n          this as unknown as Query,\n        )\n      }\n\n      return queryFn(queryFnContext as QueryFunctionContext<TQueryKey>)\n    }\n\n    // Trigger behavior hook\n    const context: OmitKeyof<\n      FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n      'signal'\n    > = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      client: this.#client,\n      state: this.state,\n      fetchFn,\n    }\n\n    addSignalProperty(context)\n\n    this.options.behavior?.onFetch(\n      context as FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n      this as unknown as Query,\n    )\n\n    // Store state in case the current fetch needs to be reverted\n    this.#revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.#dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    const onError = (error: TError | { silent?: boolean }) => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: 'error',\n          error: error as TError,\n        })\n      }\n\n      if (!isCancelledError(error)) {\n        // Notify cache callback\n        this.#cache.config.onError?.(\n          error as any,\n          this as Query<any, any, any, any>,\n        )\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error as any,\n          this as Query<any, any, any, any>,\n        )\n      }\n\n      // Schedule query gc after fetching\n      this.scheduleGc()\n    }\n\n    // Try to fetch the data\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise as\n        | Promise<TData>\n        | undefined,\n      fn: context.fetchFn as () => Promise<TData>,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === undefined) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n            )\n          }\n          onError(new Error(`${this.queryHash} data is undefined`) as any)\n          return\n        }\n\n        try {\n          this.setData(data)\n        } catch (error) {\n          onError(error as TError)\n          return\n        }\n\n        // Notify cache callback\n        this.#cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error as any,\n          this as Query<any, any, any, any>,\n        )\n\n        // Schedule query gc after fetching\n        this.scheduleGc()\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.#dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true,\n    })\n\n    return this.#retryer.start()\n  }\n\n  #dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null,\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n        case 'error':\n          const error = action.error\n\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: 'idle' }\n          }\n\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate()\n      })\n\n      this.#cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nexport function fetchState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  data: TData | undefined,\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? 'fetching' : 'paused',\n    ...(data === undefined &&\n      ({\n        error: null,\n        status: 'pending',\n      } as const)),\n  } as const\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = data !== undefined\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? (initialDataUpdatedAt ?? Date.now()) : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'pending',\n    fetchStatus: 'idle',\n  }\n}\n","import { hashQueryKeyByOptions, matchQuery } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type {\n  DefaultError,\n  NotifyEvent,\n  QueryKey,\n  QueryOptions,\n  WithRequired,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (\n    error: DefaultError,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\nexport interface QueryStore {\n  has: (queryHash: string) => boolean\n  set: (queryHash: string, query: Query) => void\n  get: (queryHash: string) => Query | undefined\n  delete: (queryHash: string) => void\n  values: () => IterableIterator<Query>\n}\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  #queries: QueryStore\n\n  constructor(public config: QueryCacheConfig = {}) {\n    super()\n    this.#queries = new Map<string, Query>()\n  }\n\n  build<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    client: QueryClient,\n    options: WithRequired<\n      QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query)\n\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.#queries.get(query.queryHash)\n\n    if (queryInMap) {\n      query.destroy()\n\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash)\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.#queries.get(queryHash) as\n      | Query<TQueryFnData, TError, TData, TQueryKey>\n      | undefined\n  }\n\n  getAll(): Array<Query> {\n    return [...this.#queries.values()]\n  }\n\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: WithRequired<QueryFilters, 'queryKey'>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((query) =>\n      matchQuery(defaultedFilters, query),\n    ) as Query<TQueryFnData, TError, TData> | undefined\n  }\n\n  findAll(filters: QueryFilters<any, any, any, any> = {}): Array<Query> {\n    const queries = this.getAll()\n    return Object.keys(filters).length > 0\n      ? queries.filter((query) => matchQuery(filters, query))\n      : queries\n  }\n\n  notify(event: QueryCacheNotifyEvent): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n","import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TContext> {\n  type: 'pending'\n  isPaused: boolean\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TContext>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  readonly mutationId: number\n\n  #observers: Array<MutationObserver<TData, TError, TVariables, TContext>>\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.mutationId = config.mutationId\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = options\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error('No mutationFn found'))\n        }\n        return this.options.mutationFn(variables)\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.#dispatch({ type: 'continue' })\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this),\n    })\n\n    const restored = this.state.status === 'pending'\n    const isPaused = !this.#retryer.canStart()\n\n    try {\n      if (!restored) {\n        this.#dispatch({ type: 'pending', variables, isPaused })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(variables)\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n            isPaused,\n          })\n        }\n      }\n      const data = await this.#retryer.start()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(data, variables, this.state.context!)\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(data, null, variables, this.state.context)\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    } finally {\n      this.#mutationCache.runNext(this)\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n","import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { DefaultError, MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: DefaultError,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\nexport type MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  #mutations: Set<Mutation<any, any, any, any>>\n  #scopes: Map<string, Array<Mutation<any, any, any, any>>>\n  #mutationId: number\n\n  constructor(public config: MutationCacheConfig = {}) {\n    super()\n    this.#mutations = new Set()\n    this.#scopes = new Map()\n    this.#mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations.add(mutation)\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const scopedMutations = this.#scopes.get(scope)\n      if (scopedMutations) {\n        scopedMutations.push(mutation)\n      } else {\n        this.#scopes.set(scope, [mutation])\n      }\n    }\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation)\n      if (typeof scope === 'string') {\n        const scopedMutations = this.#scopes.get(scope)\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation)\n            if (index !== -1) {\n              scopedMutations.splice(index, 1)\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope)\n          }\n        }\n      }\n    }\n\n    // Currently we notify the removal even if the mutation was already removed.\n    // Consider making this an error or not notifying of the removal depending on the desired semantics.\n    this.notify({ type: 'removed', mutation })\n  }\n\n  canRun(mutation: Mutation<any, any, any, any>): boolean {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const mutationsWithSameScope = this.#scopes.get(scope)\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === 'pending',\n      )\n      // we can run if there is no current pending mutation (start use-case)\n      // or if WE are the first pending mutation (continue use-case)\n      return !firstPendingMutation || firstPendingMutation === mutation\n    } else {\n      // For unscoped mutations there are never any pending mutations in front of the\n      // current mutation\n      return true\n    }\n  }\n\n  runNext(mutation: Mutation<any, any, any, any>): Promise<unknown> {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const foundMutation = this.#scopes\n        .get(scope)\n        ?.find((m) => m !== mutation && m.state.isPaused)\n\n      return foundMutation?.continue() ?? Promise.resolve()\n    } else {\n      return Promise.resolve()\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: 'removed', mutation })\n      })\n      this.#mutations.clear()\n      this.#scopes.clear()\n    })\n  }\n\n  getAll(): Array<Mutation> {\n    return Array.from(this.#mutations)\n  }\n\n  find<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = any,\n    TContext = unknown,\n  >(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((mutation) =>\n      matchMutation(defaultedFilters, mutation),\n    ) as Mutation<TData, TError, TVariables, TContext> | undefined\n  }\n\n  findAll(filters: MutationFilters = {}): Array<Mutation> {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused)\n\n    return notifyManager.batch(() =>\n      Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop)),\n      ),\n    )\n  }\n}\n\nfunction scopeFor(mutation: Mutation<any, any, any, any>) {\n  return mutation.options.scope?.id\n}\n","import { addToEnd, addToStart, ensureQueryFn } from './utils'\nimport type { QueryBehavior } from './query'\nimport type {\n  InfiniteData,\n  InfiniteQueryPageParamsOptions,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n} from './types'\n\nexport function infiniteQueryBehavior<TQueryFnData, TError, TData, TPageParam>(\n  pages?: number,\n): QueryBehavior<TQueryFnData, TError, InfiniteData<TData, TPageParam>> {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options as InfiniteQueryPageParamsOptions<TData>\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction\n      const oldPages = context.state.data?.pages || []\n      const oldPageParams = context.state.data?.pageParams || []\n      let result: InfiniteData<unknown> = { pages: [], pageParams: [] }\n      let currentPage = 0\n\n      const fetchFn = async () => {\n        let cancelled = false\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true\n              } else {\n                context.signal.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions)\n\n        // Create function to fetch a page\n        const fetchPage = async (\n          data: InfiniteData<unknown>,\n          param: unknown,\n          previous?: boolean,\n        ): Promise<InfiniteData<unknown>> => {\n          if (cancelled) {\n            return Promise.reject()\n          }\n\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data)\n          }\n\n          const queryFnContext: OmitKeyof<\n            QueryFunctionContext<QueryKey, unknown>,\n            'signal'\n          > = {\n            client: context.client,\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? 'backward' : 'forward',\n            meta: context.options.meta,\n          }\n\n          addSignalProperty(queryFnContext)\n\n          const page = await queryFn(\n            queryFnContext as QueryFunctionContext<QueryKey, unknown>,\n          )\n\n          const { maxPages } = context.options\n          const addTo = previous ? addToStart : addToEnd\n\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages),\n          }\n        }\n\n        // fetch next / previous page?\n        if (direction && oldPages.length) {\n          const previous = direction === 'backward'\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams,\n          }\n          const param = pageParamFn(options, oldData)\n\n          result = await fetchPage(oldData, param, previous)\n        } else {\n          const remainingPages = pages ?? oldPages.length\n\n          // Fetch all pages\n          do {\n            const param =\n              currentPage === 0\n                ? (oldPageParams[0] ?? options.initialPageParam)\n                : getNextPageParam(options, result)\n            if (currentPage > 0 && param == null) {\n              break\n            }\n            result = await fetchPage(result, param)\n            currentPage++\n          } while (currentPage < remainingPages)\n        }\n\n        return result\n      }\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn as any,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal,\n            },\n            query,\n          )\n        }\n      } else {\n        context.fetchFn = fetchFn\n      }\n    },\n  }\n}\n\nfunction getNextPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  const lastIndex = pages.length - 1\n  return pages.length > 0\n    ? options.getNextPageParam(\n        pages[lastIndex],\n        pages,\n        pageParams[lastIndex],\n        pageParams,\n      )\n    : undefined\n}\n\nfunction getPreviousPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  return pages.length > 0\n    ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams)\n    : undefined\n}\n\n/**\n * Checks if there is a next page.\n */\nexport function hasNextPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data) return false\n  return getNextPageParam(options, data) != null\n}\n\n/**\n * Checks if there is a previous page.\n */\nexport function hasPreviousPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data || !options.getPreviousPageParam) return false\n  return getPreviousPageParam(options, data) != null\n}\n","import {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport type {\n  CancelOptions,\n  DefaultError,\n  DefaultOptions,\n  DefaultedQueryObserverOptions,\n  EnsureInfiniteQueryDataOptions,\n  EnsureQueryDataOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InferDataFromTag,\n  InferErrorFromTag,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  NoInfer,\n  OmitKeyof,\n  QueryClientConfig,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n} from './types'\nimport type { QueryState } from './query'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: OmitKeyof<QueryOptions<any, any, any>, 'queryKey'>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  #queryCache: QueryCache\n  #mutationCache: MutationCache\n  #defaultOptions: DefaultOptions\n  #queryDefaults: Map<string, QueryDefaults>\n  #mutationDefaults: Map<string, MutationDefaults>\n  #mountCount: number\n  #unsubscribeFocus?: () => void\n  #unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.#queryCache = config.queryCache || new QueryCache()\n    this.#mutationCache = config.mutationCache || new MutationCache()\n    this.#defaultOptions = config.defaultOptions || {}\n    this.#queryDefaults = new Map()\n    this.#mutationDefaults = new Map()\n    this.#mountCount = 0\n  }\n\n  mount(): void {\n    this.#mountCount++\n    if (this.#mountCount !== 1) return\n\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations()\n        this.#queryCache.onFocus()\n      }\n    })\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations()\n        this.#queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.#mountCount--\n    if (this.#mountCount !== 0) return\n\n    this.#unsubscribeFocus?.()\n    this.#unsubscribeFocus = undefined\n\n    this.#unsubscribeOnline?.()\n    this.#unsubscribeOnline = undefined\n  }\n\n  isFetching<\n    TQueryFilters extends QueryFilters<any, any, any, any> = QueryFilters,\n  >(filters?: TQueryFilters): number {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: 'fetching' })\n      .length\n  }\n\n  isMutating<\n    TMutationFilters extends MutationFilters<any, any> = MutationFilters,\n  >(filters?: TMutationFilters): number {\n    return this.#mutationCache.findAll({ ...filters, status: 'pending' }).length\n  }\n\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(queryKey: TTaggedQueryKey): TInferredQueryFnData | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n\n    return this.#queryCache.get(options.queryHash)?.state.data as\n      | TInferredQueryFnData\n      | undefined\n  }\n\n  ensureQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: EnsureQueryDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n    const query = this.#queryCache.build(this, defaultedOptions)\n    const cachedData = query.state.data\n\n    if (cachedData === undefined) {\n      return this.fetchQuery(options)\n    }\n\n    if (\n      options.revalidateIfStale &&\n      query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))\n    ) {\n      void this.prefetchQuery(defaultedOptions)\n    }\n\n    return Promise.resolve(cachedData)\n  }\n\n  getQueriesData<\n    TQueryFnData = unknown,\n    TQueryFilters extends QueryFilters<\n      any,\n      any,\n      any,\n      any\n    > = QueryFilters<TQueryFnData>,\n    TInferredQueryFnData = TQueryFilters extends QueryFilters<\n      infer TData,\n      any,\n      any,\n      any\n    >\n      ? TData\n      : TQueryFnData,\n  >(\n    filters: TQueryFilters,\n  ): Array<[QueryKey, TInferredQueryFnData | undefined]> {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data as TInferredQueryFnData | undefined\n      return [queryKey, data]\n    })\n  }\n\n  setQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n    updater: Updater<\n      NoInfer<TInferredQueryFnData> | undefined,\n      NoInfer<TInferredQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): TInferredQueryFnData | undefined {\n    const defaultedOptions = this.defaultQueryOptions<\n      any,\n      any,\n      unknown,\n      any,\n      QueryKey\n    >({ queryKey })\n\n    const query = this.#queryCache.get<TInferredQueryFnData>(\n      defaultedOptions.queryHash,\n    )\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (data === undefined) {\n      return undefined\n    }\n\n    return this.#queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<\n    TQueryFnData,\n    TQueryFilters extends QueryFilters<\n      any,\n      any,\n      any,\n      any\n    > = QueryFilters<TQueryFnData>,\n    TInferredQueryFnData = TQueryFilters extends QueryFilters<\n      infer TData,\n      any,\n      any,\n      any\n    >\n      ? TData\n      : TQueryFnData,\n  >(\n    filters: TQueryFilters,\n    updater: Updater<\n      NoInfer<TInferredQueryFnData> | undefined,\n      NoInfer<TInferredQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): Array<[QueryKey, TInferredQueryFnData | undefined]> {\n    return notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TInferredQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n  ): QueryState<TInferredQueryFnData, TInferredError> | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n    return this.#queryCache.get<TInferredQueryFnData, TInferredError>(\n      options.queryHash,\n    )?.state\n  }\n\n  removeQueries<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    filters?: QueryFilters<\n      TInferredQueryFnData,\n      TInferredError,\n      TInferredQueryFnData,\n      TTaggedQueryKey\n    >,\n  ): void {\n    const queryCache = this.#queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    filters?: QueryFilters<\n      TInferredQueryFnData,\n      TInferredError,\n      TInferredQueryFnData,\n      TTaggedQueryKey\n    >,\n    options?: ResetOptions,\n  ): Promise<void> {\n    const queryCache = this.#queryCache\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(\n        {\n          type: 'active',\n          ...filters,\n        },\n        options,\n      )\n    })\n  }\n\n  cancelQueries<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    filters?: QueryFilters<\n      TInferredQueryFnData,\n      TInferredError,\n      TInferredQueryFnData,\n      TTaggedQueryKey\n    >,\n    cancelOptions: CancelOptions = {},\n  ): Promise<void> {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions }\n\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(defaultedCancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    filters?: InvalidateQueryFilters<\n      TInferredQueryFnData,\n      TInferredError,\n      TInferredQueryFnData,\n      TTaggedQueryKey\n    >,\n    options: InvalidateOptions = {},\n  ): Promise<void> {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters?.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? 'active',\n        },\n        options,\n      )\n    })\n  }\n\n  refetchQueries<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    filters?: RefetchQueryFilters<\n      TInferredQueryFnData,\n      TInferredError,\n      TInferredQueryFnData,\n      TTaggedQueryKey\n    >,\n    options: RefetchOptions = {},\n  ): Promise<void> {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true,\n    }\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled())\n        .map((query) => {\n          let promise = query.fetch(undefined, fetchOptions)\n          if (!fetchOptions.throwOnError) {\n            promise = promise.catch(noop)\n          }\n          return query.state.fetchStatus === 'paused'\n            ? Promise.resolve()\n            : promise\n        }),\n    )\n\n    return Promise.all(promises).then(noop)\n  }\n\n  fetchQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options: FetchQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (defaultedOptions.retry === undefined) {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.#queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query),\n    )\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(options).then(noop).catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n    return this.fetchQuery(options as any)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop)\n  }\n\n  ensureInfiniteQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: EnsureInfiniteQueryDataOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n\n    return this.ensureQueryData(options as any)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations()\n    }\n    return Promise.resolve()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.#queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.#mutationCache\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.#defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.#defaultOptions = options\n  }\n\n  setQueryDefaults<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n  >(\n    queryKey: QueryKey,\n    options: Partial<\n      OmitKeyof<\n        QueryObserverOptions<TQueryFnData, TError, TData, TQueryData>,\n        'queryKey'\n      >\n    >,\n  ): void {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options,\n    })\n  }\n\n  getQueryDefaults(\n    queryKey: QueryKey,\n  ): OmitKeyof<QueryObserverOptions<any, any, any, any, any>, 'queryKey'> {\n    const defaults = [...this.#queryDefaults.values()]\n\n    const result: OmitKeyof<\n      QueryObserverOptions<any, any, any, any, any>,\n      'queryKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n    return result\n  }\n\n  setMutationDefaults<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = void,\n    TContext = unknown,\n  >(\n    mutationKey: MutationKey,\n    options: OmitKeyof<\n      MutationObserverOptions<TData, TError, TVariables, TContext>,\n      'mutationKey'\n    >,\n  ): void {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options,\n    })\n  }\n\n  getMutationDefaults(\n    mutationKey: MutationKey,\n  ): OmitKeyof<MutationObserverOptions<any, any, any, any>, 'mutationKey'> {\n    const defaults = [...this.#mutationDefaults.values()]\n\n    const result: OmitKeyof<\n      MutationObserverOptions<any, any, any, any>,\n      'mutationKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n\n    return result\n  }\n\n  defaultQueryOptions<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options:\n      | QueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey,\n          TPageParam\n        >\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (defaultedOptions.refetchOnReconnect === undefined) {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (defaultedOptions.throwOnError === undefined) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense\n    }\n\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = 'offlineFirst'\n    }\n\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...(options?.mutationKey &&\n        this.getMutationDefaults(options.mutationKey)),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.#queryCache.clear()\n    this.#mutationCache.clear()\n  }\n}\n","'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","constructor","length","i","keys","it","Array","isArray","size","entries","next","done","has","value","get","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","$$typeof","message","match","console","warn","TAG_NAMES","TAG_NAMES2","SEO_PRIORITY_TAGS","rel","type","charset","property","VALID_TAG_NAMES","values","REACT_TAG_MAP","accesskey","class","contenteditable","contextmenu","itemprop","tabindex","HTML_TAG_MAP","reduce","carry","_ref","key","HELMET_ATTRIBUTE","HELMET_PROPS","getInnermostProperty","propsList","props","getTitleFromPropsList","innermostTitle","innermostTemplate","join","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","map","tagAttrs","current","_objectSpread","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","lowerCaseAttributeKey","toLowerCase","indexOf","concat","getTagsFromPropsList","tagName","approvedSeenTags","msg","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","keys2","attributeKey","forEach","push","tagUnion","getAnyTrueFromPropsList","checkedTag","index","flattenArray","possibleArray","prioritizer","elementsList","propsToMatch","acc","elementAttrs","checkIfPropsMatch","toMatch","includes","priority","default","without","obj","SELF_CLOSING_TAGS","encodeSpecialCharacters","str","arguments","String","generateElementAttributesAsString","attributes","attr","convertElementAttributesToReactProps","initProps","generateTagsAsReactComponent","tags","mappedTag","attribute","mappedAttribute","content","innerHTML","cssText","dangerouslySetInnerHTML","__html","React","getMethodsForTag","encode","toComponent","generateTitleAsReactComponent","_type","title","titleAttributes","generateTitleAsString","attributeString","flattenedTitle","t","attributeHtml","string","tagContent","isSelfClosing","generateTagsAsString","server_default","baseTag","bodyAttributes","htmlAttributes","noscriptTags","styleTags","prioritizeSeoTags","linkTags","metaTags","scriptTags","priorityMethods","_ref2","meta","link","script","getPriorityMethods","base","noscript","style","instances","isDocument","window","document","createElement","HelmetData","context","canUseDOM","_defineProperty","setHelmet","serverState","this","helmet","helmetInstances","add","instance","remove","splice","Context","React2","HelmetProvider","_HelmetProvider2","_HelmetProvider","Component","super","helmetData","render","Provider","children","updateTags","headElement","head","querySelector","tagNodes","querySelectorAll","oldTags","slice","newTags","indexToDelete","newElement","styleSheet","appendChild","createTextNode","setAttribute","some","existingTag","isEqualNode","_tag$parentNode","parentNode","removeChild","updateAttributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","indexToSave","removeAttribute","commitTagChanges","newState","cb","onChangeClientState","updateTitle","tagUpdates","addedTags","removedTags","_helmetCallback","client_default","cancelAnimationFrame","defer","requestAnimationFrame","HelmetDispatcher","Component2","shouldComponentUpdate","nextProps","shallowEqual","componentDidUpdate","emitChange","componentWillUnmount","state","init","rendered","_Class3","Component3","fastCompare","mapNestedChildrenToProps","child","nestedChildren","flattenArrayTypeChildren","arrayTypeChildren","newChildProps","mapObjectTypeChildren","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","warnOnInvalidChildren","invariant","nestedChild","mapChildrenToProps","React3","_child$props","childProps","_objectWithoutProperties","_excluded","_this$props","_excluded2","Consumer","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","_checkPrivateRedeclaration","TypeError","_classPrivateFieldInitSpec","set","_assertClassBrand","n","s","_classPrivateFieldSet2","r","isServer","globalThis","noop","resolveStaleTime","staleTime","query","matchQuery","filters","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","sort","result","replaceEqualDeep","array","isPlainArray","aItems","aSize","bItems","bSize","copy","equalItems","o","hasObjectPrototype","ctor","prot","getPrototypeOf","replaceData","prevData","data","structuralSharing","addToEnd","items","item","max","newItems","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","_classPrivateMethodInitSpec","defaultScheduler","setTimeout","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","batch","flush","originalQueue","batchCalls","_len","_key","setNotifyFunction","fn","setBatchNotifyFunction","setScheduler","createNotifyManager","Subscribable","listeners","subscribe","listener","onSubscribe","delete","onUnsubscribe","hasListeners","focusManager","_focused","WeakMap","_cleanup","_setup","_classPrivateFieldSet","onFocus","addEventListener","removeEventListener","_classPrivateFieldGet","setEventListener","_classPrivateFieldGet2","setup","_classPrivateFieldGet3","focused","setFocused","isFocused","_globalThis$document","visibilityState","onlineManager","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","Math","min","canFetch","networkMode","CancelledError","revert","silent","isCancelledError","createRetryer","config","continueFn","isRetryCancelled","isResolved","thenable","resolve","_resolve","_reject","finalize","assign","catch","reason","pendingThenable","canContinue","canRun","canStart","_config$onSuccess","_continueFn","onSuccess","_config$onError","_continueFn2","onError","pause","continueResolve","_config$onPause","onPause","then","_config$onContinue","onContinue","run","promiseOrValue","_config$retry","_config$retryDelay","_config$onFail","retry","retryDelay","delay","shouldRetry","timeout","onFail","promise","cancel","cancelOptions","_config$abort","abort","continue","_continueFn3","cancelRetry","continueRetry","start","Removable","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","Infinity","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","_Class_brand","WeakSet","_config$state","defaultOptions","setOptions","observers","client","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","Date","now","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","setData","newData","_dispatch","updatedAt","manual","setState","setStateOptions","_classPrivateFieldGet4","reset","observer","resolveEnabled","enabled","isDisabled","getObserversCount","getCurrentResult","isStaleByTime","timeUntilStale","_classPrivateFieldGet5","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","_classPrivateFieldGet6","shouldFetchOnReconnect","addObserver","notify","removeObserver","invalidate","fetch","_this$options$behavio","_context$fetchOptions","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","signal","fetchFn","queryFnContext","persister","_context$fetchOptions2","behavior","onFetch","_classPrivateFieldGet7","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","onSettled","_classPrivateFieldGet11","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","action","_action$meta","_action$dataUpdatedAt","reducer","onQueryUpdate","QueryCache","_queries","build","_options$queryHash","defaultQueryOptions","getQueryDefaults","queryInMap","clear","getAll","defaultedFilters","findAll","queries","event","Mutation","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","_this$options$retry","mutationFn","restored","_this$options$onSucce","_this$options2","_this$options$onSettl","_this$options3","_this$options$onMutat","_this$options","onMutate","_this$options$onError","_this$options4","_this$options$onSettl2","_this$options5","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","_this$mutationId","defaultMutationOptions","scope","scopeFor","scopedMutations","mutationsWithSameScope","firstPendingMutation","m","_foundMutation$contin","foundMutation","from","resumePausedMutations","pausedMutations","all","_mutation$options$sco","id","infiniteQueryBehavior","pages","_context$state$data","_context$state$data2","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","_oldPageParams$","initialPageParam","_context$options$pers","_context$options","lastIndex","_options$getPreviousP","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","_this$mountCount","unmount","_this$mountCount3","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","_ref3","_filters$refetchType","refetchType","_options$cancelRefetc","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryClientContext","QueryClientProvider","jsx"],"sourceRoot":""}